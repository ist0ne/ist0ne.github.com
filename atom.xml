<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>石头记</title>
  
  <subtitle>Docker、Kubernetes、CI/CD 等技术分享</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://istone.dev/"/>
  <updated>2019-07-02T06:22:53.429Z</updated>
  <id>https://istone.dev/</id>
  
  <author>
    <name>ist0ne</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Terraform在阿里云创建Kubernetes集群资源</title>
    <link href="https://istone.dev/2019/07/03/Use-Terraform-In-AliCloud/"/>
    <id>https://istone.dev/2019/07/03/Use-Terraform-In-AliCloud/</id>
    <published>2019-07-03T05:59:51.000Z</published>
    <updated>2019-07-02T06:22:53.429Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>HashiCorp Terraform 是一个IT基础架构自动化编排工具，可以用代码来高效地预配和管理云基础架构。Terraform的命令行接口(CLI)提供一种简单机制，用于将配置文件部署到阿里云或其他任意支持的云上，并对其进行版本控制。</p><p>Terraform是一个高度可扩展的工具，通过Provider来支持新的基础架构。您可以使用Terraform来创建、修改、删除ECS、VPC、RDS、SLB等多种资源。</p><h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><ul><li><p><strong>将基础结构部署到多个云</strong> - Terraform适用于多云方案，将相类似的基础结构部署到阿里云、其他云提供商或者本地数据中心。开发人员能够使用相同的工具和相似的配置文件同时管理不同云提供商的资源。</p></li><li><p><strong>自动化管理基础结构</strong> - Terraform能够创建配置文件的模板，以可重复、可预测的方式定义、预配和配置ECS资源，减少因人为因素导致的部署和管理错误。能够多次部署同一模板，创建相同的开发、测试和生产环境。</p></li><li><p><strong>基础架构即代码（Infrastructure as Code）</strong> - 可以用代码来管理维护资源。允许保存基础设施状态，从而使您能够跟踪对系统（基础设施即代码）中不同组件所做的更改，并与其他人共享这些配置 。</p></li></ul><h2 id="安装和配置Terraform"><a href="#安装和配置Terraform" class="headerlink" title="安装和配置Terraform"></a>安装和配置Terraform</h2><p>1、前往<a href="https://www.terraform.io/downloads.html" target="_blank" rel="noopener">Terraform官网</a>下载适用于您的操作系统的程序包。</p><a id="more"></a><p>2、将程序包解压到/usr/local/bin。</p><p>3、运行terraform验证路径配置。</p><p>将显示可用的Terraform选项的列表，类似如下所示，表示安装完成。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ terraform</span><br><span class="line">Usage: terraform [-version] [-<span class="built_in">help</span>] &lt;<span class="built_in">command</span>&gt; [args]</span><br></pre></td></tr></table></figure><p>4、为提高权限管理的灵活性和安全性，建议您创建RAM用户，并为其授权。</p><ul><li>a. 登录 <a href="https://ram.console.aliyun.com/?spm=a2c63.p38356.879954.11.1aa1332eNuVkRH#/overview" target="_blank" rel="noopener">RAM控制台</a>。</li><li>b. 创建名为Terraform的RAM用户，并为该用户创建AccessKey(访问方式选择编程访问)。</li><li>c. 为RAM用户授权。点击 <code>添加权限</code>，需要为用户授予一下权限：</li></ul><p><img src="/imgs/201907/ali_ram_auth.jpg" alt="RAM用户授权"></p><p>5、创建环境变量，用于存放身份认证信息。这些变量可以放到/etc/bashrc里，登录自动生效。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> ALICLOUD_ACCESS_KEY=<span class="string">"LTAIUrZCw3********"</span></span><br><span class="line"><span class="built_in">export</span> ALICLOUD_SECRET_KEY=<span class="string">"zfwwWAMWIAiooj14GQ2*************"</span></span><br><span class="line"><span class="built_in">export</span> ALICLOUD_REGION=<span class="string">"cn-beijing"</span></span><br></pre></td></tr></table></figure><h2 id="克隆项目代码"><a href="#克隆项目代码" class="headerlink" title="克隆项目代码"></a>克隆项目代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/ist0ne/terraform.git</span><br></pre></td></tr></table></figure><h2 id="创建资源"><a href="#创建资源" class="headerlink" title="创建资源"></a>创建资源</h2><p>此项目将创建以下资源：</p><ul><li>创建私有网络VPC及虚拟交换机</li><li>创建NAT网关、EIP和SNAT条目</li><li>创建1台堡垒机，可以通过堡垒机登录其它虚拟机</li><li>默认创建3个Master节点和3个Worker节点</li><li>创建负载均衡器SLB、监听及其使用的EIP</li></ul><h2 id="网络架构"><a href="#网络架构" class="headerlink" title="网络架构"></a>网络架构</h2><p>网络架构如下：</p><p><img src="/imgs/201907/vpc.jpg" alt="网络架构"></p><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><ul><li>可以按自己的需求修改<code>terraform.tfvars</code>配置的变量，包括虚拟机启动的地域、登录虚拟需要的SSH Key、VPC的网段、ECS的数量、规格等等。</li><li>需要先在阿里云上创建一个秘钥对，秘钥对的名字要和terraform.tfvars定义的SSH_KEY_NAME对应。</li><li>运行terraform创建所需资源</li><li>资源创建好以后通过堡垒机外网IP登录堡垒机，然后将上面创建秘钥对使用的私钥拷贝的堡垒机的 $HOME/.ssh/id_rsa，并配置权限 chmod 600 $HOME/.ssh/id_rsa</li></ul><h2 id="运行terraform"><a href="#运行terraform" class="headerlink" title="运行terraform"></a>运行terraform</h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ terraform init</span><br></pre></td></tr></table></figure><h3 id="查看要创建的资源"><a href="#查看要创建的资源" class="headerlink" title="查看要创建的资源"></a>查看要创建的资源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ terraform plan</span><br></pre></td></tr></table></figure><h3 id="创建资源-1"><a href="#创建资源-1" class="headerlink" title="创建资源"></a>创建资源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ terraform apply</span><br></pre></td></tr></table></figure><h3 id="销毁资源"><a href="#销毁资源" class="headerlink" title="销毁资源"></a>销毁资源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ terraform destroy</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;HashiCorp Terraform 是一个IT基础架构自动化编排工具，可以用代码来高效地预配和管理云基础架构。Terraform的命令行接口(CLI)提供一种简单机制，用于将配置文件部署到阿里云或其他任意支持的云上，并对其进行版本控制。&lt;/p&gt;
&lt;p&gt;Terraform是一个高度可扩展的工具，通过Provider来支持新的基础架构。您可以使用Terraform来创建、修改、删除ECS、VPC、RDS、SLB等多种资源。&lt;/p&gt;
&lt;h2 id=&quot;优势&quot;&gt;&lt;a href=&quot;#优势&quot; class=&quot;headerlink&quot; title=&quot;优势&quot;&gt;&lt;/a&gt;优势&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;将基础结构部署到多个云&lt;/strong&gt; - Terraform适用于多云方案，将相类似的基础结构部署到阿里云、其他云提供商或者本地数据中心。开发人员能够使用相同的工具和相似的配置文件同时管理不同云提供商的资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;自动化管理基础结构&lt;/strong&gt; - Terraform能够创建配置文件的模板，以可重复、可预测的方式定义、预配和配置ECS资源，减少因人为因素导致的部署和管理错误。能够多次部署同一模板，创建相同的开发、测试和生产环境。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;基础架构即代码（Infrastructure as Code）&lt;/strong&gt; - 可以用代码来管理维护资源。允许保存基础设施状态，从而使您能够跟踪对系统（基础设施即代码）中不同组件所做的更改，并与其他人共享这些配置 。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;安装和配置Terraform&quot;&gt;&lt;a href=&quot;#安装和配置Terraform&quot; class=&quot;headerlink&quot; title=&quot;安装和配置Terraform&quot;&gt;&lt;/a&gt;安装和配置Terraform&lt;/h2&gt;&lt;p&gt;1、前往&lt;a href=&quot;https://www.terraform.io/downloads.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Terraform官网&lt;/a&gt;下载适用于您的操作系统的程序包。&lt;/p&gt;
    
    </summary>
    
    
      <category term="docker" scheme="https://istone.dev/tags/docker/"/>
    
      <category term="container" scheme="https://istone.dev/tags/container/"/>
    
      <category term="kubernetes" scheme="https://istone.dev/tags/kubernetes/"/>
    
      <category term="k8s" scheme="https://istone.dev/tags/k8s/"/>
    
      <category term="terraform" scheme="https://istone.dev/tags/terraform/"/>
    
  </entry>
  
  <entry>
    <title>在Kubernetes Ingress中使用Cert-Manager管理TLS证书</title>
    <link href="https://istone.dev/2019/07/03/Kubernetes-Ingress-with-Cert-Manager/"/>
    <id>https://istone.dev/2019/07/03/Kubernetes-Ingress-with-Cert-Manager/</id>
    <published>2019-07-03T05:32:06.000Z</published>
    <updated>2019-07-02T05:46:29.467Z</updated>
    
    <content type="html"><![CDATA[<p>Kubernetes Ingresses 允许你灵活的将外部流量路由到集群内部。我们通过Ingress资源定义规则路由HTTP和HTTPS流量到Kubernetes Services。本文中我们通过cert-manager来管理TLS证书以加密HTTP流量。</p><h2 id="部署后端服务"><a href="#部署后端服务" class="headerlink" title="部署后端服务"></a>部署后端服务</h2><p>首先我们需要一个事例服务，部署配置文件(echo.yaml)如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">echo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">ports:</span></span><br><span class="line"><span class="attr">- port:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">5678</span></span><br><span class="line"><span class="attr">selector:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">echo</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">echo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">echo</span></span><br><span class="line"><span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">echo</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">    containers:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">echo1</span></span><br><span class="line"><span class="attr">        image:</span> <span class="string">hashicorp/http-echo</span></span><br><span class="line"><span class="attr">        args:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">"-text=echo"</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">5678</span></span><br></pre></td></tr></table></figure><p>在这个配置文件中我们定义了一个服务叫做<code>echo</code>，它会将来自于80端口的TCP流量路由到标签为<code>app: echo</code>的Pods中的5678端口上。<br>我们定义了名为<code>echo</code>的Deployment，它用来管理打了<code>app: echo</code>标签的Pods。我们在Deployment中定义Pod的副本数为2，Pod启动的容器名为<code>echo</code>，使用的镜像为<code>hashicorp/http-echo</code>，我们给<code>echo</code>传递了<code>text</code>参数，值为<code>echo</code>，意思是我们在访问这个服务时，他向我们返回<code>echo</code>字符串。最后，我们打开了5678端口来监听用户请求。</p><a id="more"></a><p>现在，我们通过kubectl create将其部署到集群中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create -f echo.yaml</span><br></pre></td></tr></table></figure><p>确认部署的服务已经启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get svc <span class="built_in">echo</span></span><br><span class="line">NAME      TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line"><span class="built_in">echo</span>      ClusterIP   10.245.222.129   &lt;none&gt;        80/TCP    60s</span><br></pre></td></tr></table></figure><p>在集群内部<code>echo</code>服务已经可以通过10.245.222.129的80端口进行访问，通过CLUSTER-IP访问流量会被路由到后端Pod的5678端口上。</p><h2 id="部署Nginx-Ingress控制器"><a href="#部署Nginx-Ingress控制器" class="headerlink" title="部署Nginx Ingress控制器"></a>部署Nginx Ingress控制器</h2><p>在Kubernetes中，比较常用的Ingress控制器有Nginx、Contour、HaProxy、Traefik等。在此我们通过helm部署Nginx Ingress。</p><p>我们通过执行kubectl apply来部署Nginx Ingress</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/mandatory.yaml</span><br><span class="line">namespace/ingress-nginx created</span><br><span class="line">configmap/nginx-configuration created</span><br><span class="line">configmap/tcp-services created</span><br><span class="line">configmap/udp-services created</span><br><span class="line">serviceaccount/nginx-ingress-serviceaccount created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/nginx-ingress-clusterrole created</span><br><span class="line">role.rbac.authorization.k8s.io/nginx-ingress-role created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/nginx-ingress-role-nisa-binding created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/nginx-ingress-clusterrole-nisa-binding created</span><br><span class="line">deployment.extensions/nginx-ingress-controller created</span><br></pre></td></tr></table></figure><p>如果你使用的是阿里云，可以创建一个4层SLB为Nginx Ingress做负载均衡。</p><p>在你Kubernetes所在区，点击<code>创建负载均衡</code></p><p><img src="/imgs/201907/ali_slb_create.jpg" alt="创建负载均衡"></p><p>选择可用区，填写实例名，现在实例规则，然后点<code>击立即购买</code></p><p><img src="/imgs/201907/ali_slb_create2.jpg" alt="配置负载均衡参数"></p><p>跳转到<code>负载均衡控制台</code>，点击<code>点我开始配置</code></p><p><img src="/imgs/201907/ali_slb_setting.jpg" alt="配置负载均衡参数"></p><p>选择监听协议TCP，监听端口80</p><p><img src="/imgs/201907/ali_slb_setting_tcp_80.jpg" alt="配置负载均衡监听端口80"></p><p>点击<code>下一步</code>创建虚拟服务器组，后端服务添加Nginx Ingress所在的节点，端口为80端口，然后配置健康检查就可以了</p><p><img src="/imgs/201907/ali_slb_setting_vsg_80.jpg" alt="创建虚拟服务器组"></p><p>同样添加对TCP443端口的监听</p><p><img src="/imgs/201907/ali_slb_setting_tcp_443.jpg" alt="配置负载均衡监听端口443"></p><p>点击<code>下一步</code>创建虚拟服务器组，后端服务添加Nginx Ingress所在的节点，端口为443端口，然后配置健康检查就可以了</p><p><img src="/imgs/201907/ali_slb_setting_vsg_443.jpg" alt="创建虚拟服务器组"></p><p>到此，负载均衡就配置完成了。</p><h2 id="创建Ingress资源"><a href="#创建Ingress资源" class="headerlink" title="创建Ingress资源"></a>创建Ingress资源</h2><p>现在就可以创建Ingress资源，如下编写配置文件（echo_ingress.yaml）：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">echo-ingress</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">- host:</span> <span class="string">echo.example.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">    paths:</span></span><br><span class="line"><span class="attr">    - backend:</span></span><br><span class="line"><span class="attr">        serviceName:</span> <span class="string">echo</span></span><br><span class="line"><span class="attr">        servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>当用户通过echo.example.com访问Ingress时，访问流量会被路由到echo这个服务的80端口上。</p><p>我们需要经echo.example.com这个域名解析到我们上面配置4层负载均衡的外网地址上。后面通过Cert-Manager申请TLS证书时会验证对这个域名的控制权。</p><p>通过curl访问域名会返回echo字符串说明配置无误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ curl echo1.example.com</span><br><span class="line"><span class="built_in">echo</span></span><br></pre></td></tr></table></figure><h2 id="安装并配置Cert-Manager"><a href="#安装并配置Cert-Manager" class="headerlink" title="安装并配置Cert-Manager"></a>安装并配置Cert-Manager</h2><p>在通过helm安装Cert-Manager前需要先创建好CRD资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply \</span><br><span class="line">    -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.6/deploy/manifests/00-crds.yaml</span><br><span class="line">customresourcedefinition.apiextensions.k8s.io/certificates.certmanager.k8s.io created</span><br><span class="line">customresourcedefinition.apiextensions.k8s.io/issuers.certmanager.k8s.io created</span><br><span class="line">customresourcedefinition.apiextensions.k8s.io/clusterissuers.certmanager.k8s.io created</span><br><span class="line">customresourcedefinition.apiextensions.k8s.io/orders.certmanager.k8s.io created</span><br><span class="line">customresourcedefinition.apiextensions.k8s.io/challenges.certmanager.k8s.io created</span><br></pre></td></tr></table></figure><p>为安装的namespace kube-system添加标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl label namespace kube-system certmanager.k8s.io/<span class="built_in">disable</span>-validation=<span class="string">"true"</span></span><br></pre></td></tr></table></figure><p>然后，通过helm部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ helm install --name cert-manager --namespace kube-system stable/cert-manager</span><br><span class="line">NOTES:</span><br><span class="line">cert-manager has been deployed successfully!</span><br><span class="line"></span><br><span class="line">In order to begin issuing certificates, you will need to <span class="built_in">set</span> up a ClusterIssuer</span><br><span class="line">or Issuer resource (<span class="keyword">for</span> example, by creating a <span class="string">'letsencrypt-staging'</span> issuer).</span><br><span class="line"></span><br><span class="line">More information on the different types of issuers and how to configure them</span><br><span class="line">can be found <span class="keyword">in</span> our documentation:</span><br><span class="line"></span><br><span class="line">https://cert-manager.readthedocs.io/en/latest/reference/issuers.html</span><br><span class="line"></span><br><span class="line">For information on how to configure cert-manager to automatically provision</span><br><span class="line">Certificates <span class="keyword">for</span> Ingress resources, take a look at the `ingress-shim`</span><br><span class="line">documentation:</span><br><span class="line"></span><br><span class="line">https://cert-manager.readthedocs.io/en/latest/reference/ingress-shim.html</span><br></pre></td></tr></table></figure><p>创建预发环境 Cluster Issuer（letsencrypt-clusterissuer-staging.yaml）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">certmanager.k8s.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterIssuer</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">letsencrypt-staging</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">acme:</span></span><br><span class="line">    <span class="comment"># The ACME server URL</span></span><br><span class="line"><span class="attr">    server:</span> <span class="attr">https://acme-staging-v02.api.letsencrypt.org/directory</span></span><br><span class="line">    <span class="comment"># Email address used for ACME registration</span></span><br><span class="line"><span class="attr">    email:</span> <span class="string">&lt;admin@gmail.com&gt;</span></span><br><span class="line">    <span class="comment"># Name of a secret used to store the ACME account private key</span></span><br><span class="line"><span class="attr">    privateKeySecretRef:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">letsencrypt-staging</span></span><br><span class="line">    <span class="comment"># Enable the HTTP-01 challenge provider</span></span><br><span class="line"><span class="attr">    http01:</span> <span class="string">&#123;&#125;</span></span><br></pre></td></tr></table></figure><p>这是一个预备环境的集群级别的Issuer，需要用这个接口把流程走通。Cert-Manager通过这个Issuer去letsencrypt申请证书，在这个Issuer定义了letsencrypt证书申请地址，letsencrypt通过HTTP访问约定好的一个地址来进行域名鉴权。</p><p>创建Issuer</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create -f letsencrypt-clusterissuer-staging.yaml</span><br><span class="line">clusterissuer.certmanager.k8s.io/letsencrypt-staging created</span><br></pre></td></tr></table></figure><p>修改echo_ingress.yaml使用新创建的Issuer</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">echo-ingress</span></span><br><span class="line"><span class="attr">annotations:</span>  </span><br><span class="line">    <span class="string">kubernetes.io/ingress.class:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="string">certmanager.k8s.io/cluster-issuer:</span> <span class="string">letsencrypt-staging</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">tls:</span></span><br><span class="line"><span class="attr">- hosts:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo.example.com</span></span><br><span class="line"><span class="attr">    secretName:</span> <span class="string">letsencrypt-staging</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">- host:</span> <span class="string">echo.example.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">    paths:</span></span><br><span class="line"><span class="attr">    - backend:</span></span><br><span class="line"><span class="attr">        serviceName:</span> <span class="string">echo</span></span><br><span class="line"><span class="attr">        servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>添加annotations，使用nginx ingress，并且使用letsencrypt-staging这个Issuer去申请证书，证书存储在<code>secretName: letsencrypt-staging</code></p><p>使用<code>kubectl describe</code>查看证书详情</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl describe ingress</span><br><span class="line">Events:</span><br><span class="line">  Type    Reason             Age               From                      Message</span><br><span class="line">  ----    ------             ----              ----                      -------</span><br><span class="line">  Normal  CREATE             14m               nginx-ingress-controller  Ingress default/<span class="built_in">echo</span>-ingress</span><br><span class="line">  Normal  UPDATE             1m (x2 over 13m)  nginx-ingress-controller  Ingress default/<span class="built_in">echo</span>-ingress</span><br><span class="line">  Normal  CreateCertificate  1m                cert-manager              Successfully created Certificate <span class="string">"letsencrypt-staging"</span></span><br></pre></td></tr></table></figure><p>发现证书已经申请成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ wget --save-headers -O- https://echo.example.com</span><br><span class="line">URL transformed to HTTPS due to an HSTS policy</span><br><span class="line">--2018-12-11 14:38:24--  https://echo.example.com/</span><br><span class="line">Resolving echo.example.com (echo.example.com)... 203.0.113.0</span><br><span class="line">Connecting to echo.example.com (echo.example.com)|203.0.113.0|:443... connected.</span><br><span class="line">ERROR: cannot verify echo.example.com<span class="string">'s certificate, issued by ‘CN=Fake LE Intermediate X1’:</span></span><br><span class="line"><span class="string">Unable to locally verify the issuer'</span>s authority.</span><br><span class="line">To connect to echo.example.com insecurely, use `--no-check-certificate<span class="string">'.</span></span><br></pre></td></tr></table></figure><p>HTTPS协议已经可以访问，但是证书是ERROR状态的，我们需要申请生成环境的证书</p><p>创建生产环境 Cluster Issuer（letsencrypt-clusterissuer-prod.yaml）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">certmanager.k8s.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterIssuer</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">letsencrypt-prod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">acme:</span></span><br><span class="line">    <span class="comment"># The ACME server URL</span></span><br><span class="line"><span class="attr">    server:</span> <span class="attr">https://acme-v02.api.letsencrypt.org/directory</span></span><br><span class="line">    <span class="comment"># Email address used for ACME registration</span></span><br><span class="line"><span class="attr">    email:</span> <span class="string">&lt;admin@gmail.com&gt;</span></span><br><span class="line">    <span class="comment"># Name of a secret used to store the ACME account private key</span></span><br><span class="line"><span class="attr">    privateKeySecretRef:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">letsencrypt-prod</span></span><br><span class="line">    <span class="comment"># Enable the HTTP-01 challenge provider</span></span><br><span class="line"><span class="attr">    http01:</span> <span class="string">&#123;&#125;</span></span><br></pre></td></tr></table></figure><p>创建Issuer</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create -f letsencrypt-clusterissuer-prod.yaml</span><br><span class="line">clusterissuer.certmanager.k8s.io/letsencrypt-prod created</span><br></pre></td></tr></table></figure><p>编辑echo_ingress.yaml使用新创建的Issuer</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">echo-ingress</span></span><br><span class="line"><span class="attr">annotations:</span>  </span><br><span class="line">    <span class="string">kubernetes.io/ingress.class:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="string">certmanager.k8s.io/cluster-issuer:</span> <span class="string">letsencrypt-prod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">tls:</span></span><br><span class="line"><span class="attr">- hosts:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo.example.com</span></span><br><span class="line"><span class="attr">    secretName:</span> <span class="string">letsencrypt-prod</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">- host:</span> <span class="string">echo.example.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">    paths:</span></span><br><span class="line"><span class="attr">    - backend:</span></span><br><span class="line"><span class="attr">        serviceName:</span> <span class="string">echo</span></span><br><span class="line"><span class="attr">        servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>执行命令是更改生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f echo_ingress.yaml</span><br></pre></td></tr></table></figure><p>查看证书申请详情：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl describe certificate letsencrypt-prod</span><br><span class="line">  Events:</span><br><span class="line">  Type    Reason         Age    From          Message</span><br><span class="line">  ----    ------         ----   ----          -------</span><br><span class="line">  Normal  Generated      2m53s  cert-manager  Generated new private key</span><br><span class="line">  Normal  OrderCreated   2m53s  cert-manager  Created Order resource <span class="string">"letsencrypt-prod-3570505900"</span></span><br><span class="line">  Normal  OrderComplete  77s    cert-manager  Order <span class="string">"letsencrypt-prod-3570505900"</span> completed successfully</span><br><span class="line">  Normal  CertIssued     77s    cert-manager  Certificate issued successfully</span><br></pre></td></tr></table></figure><p>发现证书已经申请成功</p><p>我们可以通过 kubectl describe order 查看证书订单，通过kubectl describe challenge查看证书验证通道，证书默认是有有效期的，在证书失效以前Cert-Manager会帮我申请新证书。</p><p>在浏览器中访问<a href="https://echo.example.com，可以查看到域名的证书。" target="_blank" rel="noopener">https://echo.example.com，可以查看到域名的证书。</a></p><p><img src="/imgs/201907/tls.jpg" alt="域名证书"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Kubernetes Ingresses 允许你灵活的将外部流量路由到集群内部。我们通过Ingress资源定义规则路由HTTP和HTTPS流量到Kubernetes Services。本文中我们通过cert-manager来管理TLS证书以加密HTTP流量。&lt;/p&gt;
&lt;h2 id=&quot;部署后端服务&quot;&gt;&lt;a href=&quot;#部署后端服务&quot; class=&quot;headerlink&quot; title=&quot;部署后端服务&quot;&gt;&lt;/a&gt;部署后端服务&lt;/h2&gt;&lt;p&gt;首先我们需要一个事例服务，部署配置文件(echo.yaml)如下：&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;apiVersion:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;v1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;kind:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Service&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;echo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;spec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;ports:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;- port:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    targetPort:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5678&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;selector:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    app:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;echo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;apiVersion:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;apps/v1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;kind:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Deployment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;echo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;spec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;selector:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    matchLabels:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    app:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;echo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;replicas:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;template:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    labels:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        app:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;echo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    spec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    containers:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    - name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;echo1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        image:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;hashicorp/http-echo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        args:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;        -&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;-text=echo&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        ports:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        - containerPort:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5678&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在这个配置文件中我们定义了一个服务叫做&lt;code&gt;echo&lt;/code&gt;，它会将来自于80端口的TCP流量路由到标签为&lt;code&gt;app: echo&lt;/code&gt;的Pods中的5678端口上。&lt;br&gt;我们定义了名为&lt;code&gt;echo&lt;/code&gt;的Deployment，它用来管理打了&lt;code&gt;app: echo&lt;/code&gt;标签的Pods。我们在Deployment中定义Pod的副本数为2，Pod启动的容器名为&lt;code&gt;echo&lt;/code&gt;，使用的镜像为&lt;code&gt;hashicorp/http-echo&lt;/code&gt;，我们给&lt;code&gt;echo&lt;/code&gt;传递了&lt;code&gt;text&lt;/code&gt;参数，值为&lt;code&gt;echo&lt;/code&gt;，意思是我们在访问这个服务时，他向我们返回&lt;code&gt;echo&lt;/code&gt;字符串。最后，我们打开了5678端口来监听用户请求。&lt;/p&gt;
    
    </summary>
    
    
      <category term="docker" scheme="https://istone.dev/tags/docker/"/>
    
      <category term="container" scheme="https://istone.dev/tags/container/"/>
    
      <category term="kubernetes" scheme="https://istone.dev/tags/kubernetes/"/>
    
      <category term="k8s" scheme="https://istone.dev/tags/k8s/"/>
    
      <category term="kubectl" scheme="https://istone.dev/tags/kubectl/"/>
    
      <category term="helm" scheme="https://istone.dev/tags/helm/"/>
    
      <category term="ingress" scheme="https://istone.dev/tags/ingress/"/>
    
      <category term="cert-manager" scheme="https://istone.dev/tags/cert-manager/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 常用组件安装</title>
    <link href="https://istone.dev/2019/07/02/Kubernetes-Addons/"/>
    <id>https://istone.dev/2019/07/02/Kubernetes-Addons/</id>
    <published>2019-07-02T02:08:31.000Z</published>
    <updated>2019-07-02T02:43:48.081Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>视频课程地址：</strong><a href="https://www.bilibili.com/video/av49387629?from=search&seid=4418298671230182069" target="_blank" rel="noopener">戳我开始学习</a></p></blockquote><h2 id="创建集群管理员账户（Cluster-Admin）"><a href="#创建集群管理员账户（Cluster-Admin）" class="headerlink" title="创建集群管理员账户（Cluster Admin）"></a>创建集群管理员账户（Cluster Admin）</h2><p>编写配置文件 admin-role.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">admin</span></span><br><span class="line"><span class="attr">  annotations:</span></span><br><span class="line">    <span class="string">rbac.authorization.kubernetes.io/autoupdate:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">cluster-admin</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">- kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">admin</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">admin</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">kubernetes.io/cluster-service:</span> <span class="string">"true"</span></span><br><span class="line">    <span class="string">addonmanager.kubernetes.io/mode:</span> <span class="string">Reconcile</span></span><br></pre></td></tr></table></figure><p>执行命令创建账户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create -f admin-role.yaml</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/admin created</span><br><span class="line">serviceaccount/admin created</span><br></pre></td></tr></table></figure><a id="more"></a><p>获取新建账户的token</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl -n kube-system get secret|grep admin-token</span><br><span class="line">admin-token-dvhv7                                kubernetes.io/service-account-token   3      15s</span><br><span class="line"></span><br><span class="line">$ kubectl -n kube-system describe secret admin-token-dvhv7</span><br><span class="line">Name:         admin-token-dvhv7</span><br><span class="line">Namespace:    kube-system</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  kubernetes.io/service-account.name: admin</span><br><span class="line">            kubernetes.io/service-account.uid: cd1d963a-3b34-11e9-8ce7-fa163ec5bf9e</span><br><span class="line"></span><br><span class="line">Type:  kubernetes.io/service-account-token</span><br><span class="line"></span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">ca.crt:     1025 bytes</span><br><span class="line">namespace:  11 bytes</span><br><span class="line">token:      eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi10b2tlbi1kdmh2NyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJhZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImNkMWQ5NjNhLTNiMzQtMTFlOS04Y2U3LWZhMTYzZWM1YmY5ZSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTphZG1pbiJ9.TyVprdo9ag_tZPsfUSP-QXQ_jpkG3t7_u0sATsNvS2ZCd9aCs4Ci5IatJf_zKu4qHHDRAckL-aaNt0oK4rZ-jVoU_EUTK2hVcxBQaOtidP5lfMTIxcjjAjXuhnwyNHS9XuEFI4pJwO-4_l6q7lM-i1mhu0g5NIHMaGt22-GvEkWnvhon4LQOFCd2Mafdj_po2GrYByr34Xw92H-uVnzd2irP0lLThE9J1Xg2NvRqdfTZDeW8IG1bx6PDGz-lXnmF2b7S6daoNG6x5UBSysANLNpl-0pUFnx5Ux249-8zi2RyLdedyWj9zXiUp7BvAtfeiqwgT89M95WDHMrjcl4siw</span><br></pre></td></tr></table></figure><p>在需要连接集群的机器上配置管理员token，在用户home目录下创建.kube目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir .kube</span><br></pre></td></tr></table></figure><p>编辑.kube/config配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">clusters:</span><br><span class="line">- cluster:</span><br><span class="line">    insecure-skip-tls-verify: true</span><br><span class="line">    server: https://apiserver.hipstershop.cn:6443</span><br><span class="line">  name: k8s-prod</span><br><span class="line">contexts:</span><br><span class="line">- context:</span><br><span class="line">    cluster: k8s-prod</span><br><span class="line">    user: k8s-prod</span><br><span class="line">  name: k8s-prod</span><br><span class="line">current-context: k8s-prod</span><br><span class="line">kind: Config</span><br><span class="line">preferences: &#123;&#125;</span><br><span class="line">users:</span><br><span class="line">- name: k8s-prod</span><br><span class="line">  user:</span><br><span class="line">    token: eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi10b2tlbi1kdmh2NyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJhZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImNkMWQ5NjNhLTNiMzQtMTFlOS04Y2U3LWZhMTYzZWM1YmY5ZSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTphZG1pbiJ9.TyVprdo9ag_tZPsfUSP-QXQ_jpkG3t7_u0sATsNvS2ZCd9aCs4Ci5IatJf_zKu4qHHDRAckL-aaNt0oK4rZ-jVoU_EUTK2hVcxBQaOtidP5lfMTIxcjjAjXuhnwyNHS9XuEFI4pJwO-4_l6q7lM-i1mhu0g5NIHMaGt22-GvEkWnvhon4LQOFCd2Mafdj_po2GrYByr34Xw92H-uVnzd2irP0lLThE9J1Xg2NvRqdfTZDeW8IG1bx6PDGz-lXnmF2b7S6daoNG6x5UBSysANLNpl-0pUFnx5Ux249-8zi2RyLdedyWj9zXiUp7BvAtfeiqwgT89M95WDHMrjcl4siw</span><br></pre></td></tr></table></figure><h2 id="下载Kubernetes客户端kubectl并安装"><a href="#下载Kubernetes客户端kubectl并安装" class="headerlink" title="下载Kubernetes客户端kubectl并安装"></a>下载Kubernetes客户端kubectl并安装</h2><h3 id="macOS-安装"><a href="#macOS-安装" class="headerlink" title="macOS 安装"></a>macOS 安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install kubernetes-cli</span><br></pre></td></tr></table></figure><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>要在Windows上可以通过<a href="https://chocolatey.org/" target="_blank" rel="noopener">Chocolatey</a>软件包管理器安装kubectl</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">choco install kubernetes-cli</span><br><span class="line"><span class="built_in">cd</span> C:\users\yourusername</span><br><span class="line">mkdir .kube</span><br><span class="line"><span class="built_in">cd</span> .kube</span><br><span class="line">New-Item config -<span class="built_in">type</span> file</span><br></pre></td></tr></table></figure><h3 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg</span><br><span class="line">       http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">$ yum install -y kubectl</span><br></pre></td></tr></table></figure><h2 id="安装-Kubernetes-Dashboard"><a href="#安装-Kubernetes-Dashboard" class="headerlink" title="安装 Kubernetes Dashboard"></a>安装 Kubernetes Dashboard</h2><p>首先需要从官网下载部署配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml</span><br></pre></td></tr></table></figure><p>然后编辑部署配置文件，将镜像下载仓库提货为gcr.azk8s.cn/google-containers</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sed -i <span class="string">'s#k8s.gcr.io#gcr.azk8s.cn/google-containers#g'</span> kubernetes-dashboard.yaml</span><br></pre></td></tr></table></figure><p>通过如下命令部署Dashboard插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f kubernetes-dashboard.yaml</span><br></pre></td></tr></table></figure><p>等待插件部署完成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl -n kube-system get pods</span><br><span class="line">NAME                                   READY   STATUS    RESTARTS   AGE</span><br><span class="line">kubernetes-dashboard-57df4db6b-n7d7q   1/1     Running   0          45m</span><br></pre></td></tr></table></figure><p>为了安全，现在Dashboard只能通过代理进行访问，默认代理会启动在127.0.0.1的8001端口上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl proxy</span><br></pre></td></tr></table></figure><p>访问如下地址</p><p>可以通过上面创建的管理员账号的token进行访问，也可以<a href="https://github.com/kubernetes/dashboard/wiki/Creating-sample-user" target="_blank" rel="noopener">创建普通账户</a>进行访问，在弹出的菜单中选择token(令牌)，然后填入token内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/</span><br></pre></td></tr></table></figure><h2 id="安装Helm"><a href="#安装Helm" class="headerlink" title="安装Helm"></a>安装Helm</h2><p>Helm是Kubernetes生态系统中的一个软件包管理工具。Helm把Kubernetes资源(比如deployments、services和ingress等) 打包到一个chart中，而chart被保存到chart仓库。通过chart仓库可用来存储和分享chart。Helm使发布可配置，支持发布应用配置的版本管理，简化了Kubernetes部署应用的版本控制、打包、发布、删除、更新等操作。</p><h3 id="安装helm客户端"><a href="#安装helm客户端" class="headerlink" title="安装helm客户端"></a>安装helm客户端</h3><p>根据操作系统到helm官网下载相应的二进制包，下载地址：<a href="https://github.com/helm/helm/releases，以CentOS系统为例：" target="_blank" rel="noopener">https://github.com/helm/helm/releases，以CentOS系统为例：</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://storage.googleapis.com/kubernetes-helm/helm-v2.13.1-linux-amd64.tar.gz</span><br><span class="line">$ tar xzvf helm-v2.13.1-linux-amd64.tar.gz</span><br><span class="line">$ mv linux-amd64/helm /usr/<span class="built_in">local</span>/bin</span><br><span class="line">$ chmod +x /usr/<span class="built_in">local</span>/bin/helm</span><br></pre></td></tr></table></figure><p>创建helm服务器端tiller使用的账号，编辑配置文件helm-service-account.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create a service account for Helm and grant the cluster admin role.</span></span><br><span class="line"><span class="comment"># It is assumed that helm should be installed with this service account</span></span><br><span class="line"><span class="comment"># (tiller).</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tiller</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tiller</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">cluster-admin</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">- kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tiller</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br></pre></td></tr></table></figure><p>应用配置文件helm-service-account.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f helm-service-account.yaml</span><br></pre></td></tr></table></figure><p>初始化安装tiller</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ helm init --tiller-image gcr.azk8s.cn/kubernetes-helm/tiller:v2.13.1 --skip-refresh --service-account tiller</span><br></pre></td></tr></table></figure><h2 id="部署Traefik-Ingress控制器"><a href="#部署Traefik-Ingress控制器" class="headerlink" title="部署Traefik Ingress控制器"></a>部署Traefik Ingress控制器</h2><p>为了便于将集群中的服务暴露到集群外部，从集群外部访问，使用Helm将Traefik Ingress部署到Kubernetes上</p><p>从官方网站下载Charts</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/helm/charts.git</span><br></pre></td></tr></table></figure><p>编写配置文件traefik.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">serviceType:</span> <span class="string">NodePort</span></span><br><span class="line"><span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">resources:</span></span><br><span class="line"><span class="attr">  limits:</span></span><br><span class="line"><span class="attr">    cpu:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    memory:</span> <span class="number">1</span><span class="string">Gi</span></span><br><span class="line"><span class="attr">  requests:</span></span><br><span class="line"><span class="attr">    cpu:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    memory:</span> <span class="number">1</span><span class="string">Gi</span></span><br><span class="line"><span class="attr">dashboard:</span></span><br><span class="line"><span class="attr">  enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  domain:</span> <span class="string">traefik.hipstershop.cn</span></span><br><span class="line"><span class="attr">service:</span></span><br><span class="line"><span class="attr">  nodePorts:</span></span><br><span class="line"><span class="attr">    http:</span> <span class="number">30080</span></span><br><span class="line"><span class="attr">    https:</span> <span class="number">30443</span></span><br><span class="line"><span class="attr">rbac:</span></span><br><span class="line"><span class="attr">  enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">metrics:</span></span><br><span class="line"><span class="attr">  prometheus:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>执行系列命令部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ helm install traefik --name traefik --namespace kube-system -f traefik/traefik.yaml</span><br></pre></td></tr></table></figure><p>配置负载均衡</p><p>将节点的30080加到负载均衡（如 阿里云的ELB、Haproxy、F5等）后面，负载均衡对外提供80、443端口的访问。通过将traefik.hipstershop.cn解析到负载均衡的VIP上就能够访问Traefik的dashboard了。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;视频课程地址：&lt;/strong&gt;&lt;a href=&quot;https://www.bilibili.com/video/av49387629?from=search&amp;seid=4418298671230182069&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;戳我开始学习&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;创建集群管理员账户（Cluster-Admin）&quot;&gt;&lt;a href=&quot;#创建集群管理员账户（Cluster-Admin）&quot; class=&quot;headerlink&quot; title=&quot;创建集群管理员账户（Cluster Admin）&quot;&gt;&lt;/a&gt;创建集群管理员账户（Cluster Admin）&lt;/h2&gt;&lt;p&gt;编写配置文件 admin-role.yaml&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;kind:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;ClusterRoleBinding&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;apiVersion:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;rbac.authorization.k8s.io/v1beta1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;admin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  annotations:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;rbac.authorization.kubernetes.io/autoupdate:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;roleRef:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  kind:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;ClusterRole&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;cluster-admin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  apiGroup:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;rbac.authorization.k8s.io&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;subjects:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;- kind:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;ServiceAccount&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;admin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  namespace:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;kube-system&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;apiVersion:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;v1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;kind:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;ServiceAccount&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;admin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  namespace:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;kube-system&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  labels:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;kubernetes.io/cluster-service:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;addonmanager.kubernetes.io/mode:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Reconcile&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;执行命令创建账户&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl create -f admin-role.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clusterrolebinding.rbac.authorization.k8s.io/admin created&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;serviceaccount/admin created&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="docker" scheme="https://istone.dev/tags/docker/"/>
    
      <category term="container" scheme="https://istone.dev/tags/container/"/>
    
      <category term="kubernetes" scheme="https://istone.dev/tags/kubernetes/"/>
    
      <category term="k8s" scheme="https://istone.dev/tags/k8s/"/>
    
      <category term="kubectl" scheme="https://istone.dev/tags/kubectl/"/>
    
      <category term="helm" scheme="https://istone.dev/tags/helm/"/>
    
      <category term="dashboard" scheme="https://istone.dev/tags/dashboard/"/>
    
      <category term="traefik" scheme="https://istone.dev/tags/traefik/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 集群升级</title>
    <link href="https://istone.dev/2019/07/01/Kubernetes-Update/"/>
    <id>https://istone.dev/2019/07/01/Kubernetes-Update/</id>
    <published>2019-07-01T08:56:49.000Z</published>
    <updated>2019-07-02T02:40:16.977Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>视频课程地址：</strong><a href="https://www.bilibili.com/video/av49387629?from=search&seid=4418298671230182069" target="_blank" rel="noopener">戳我开始学习</a></p></blockquote><h2 id="控制平面升级"><a href="#控制平面升级" class="headerlink" title="控制平面升级"></a>控制平面升级</h2><p>只有master节点需要执行如下操作，需要逐节点操作。将集群从当前的v1.14.3升级到v1.15.0。</p><p>列出可用的kubeadm软件包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum list --showduplicates kubeadm --disableexcludes=kubernetes</span><br></pre></td></tr></table></figure><p>安装kubeadm新版本软件包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y kubeadm-1.15.0-0 --disableexcludes=kubernetes</span><br></pre></td></tr></table></figure><p>确认kubeadm为正确的版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubeadm version</span><br></pre></td></tr></table></figure><p>查看升级计划</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubeadm upgrade plan</span><br></pre></td></tr></table></figure><p>升级第一个控制节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubeadm upgrade apply v1.15.0</span><br></pre></td></tr></table></figure><p>升级kubelet软件包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y kubelet-1.15.0-0 kubectl-1.15.0-0 --disableexcludes=kubernetes</span><br></pre></td></tr></table></figure><p>重启kubelet服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl restart kubelet</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="升级第二、三个控制节点"><a href="#升级第二、三个控制节点" class="headerlink" title="升级第二、三个控制节点"></a>升级第二、三个控制节点</h2><p>升级控制节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubeadm upgrade node</span><br></pre></td></tr></table></figure><p>升级kubelet、kubectl软件包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y kubelet-1.15.0-0 kubectl-1.15.0-0 --disableexcludes=kubernetes</span><br></pre></td></tr></table></figure><p>重启kubelet服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl daemon-reload</span><br><span class="line">$ systemctl restart kubelet</span><br></pre></td></tr></table></figure><h2 id="升级工作节点"><a href="#升级工作节点" class="headerlink" title="升级工作节点"></a>升级工作节点</h2><p>逐节点升级工作节点</p><p>升级kubeadm软件包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y kubeadm-1.15.x-0 --disableexcludes=kubernetes</span><br></pre></td></tr></table></figure><p>驱逐节点上的pod并标记为不可调度</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl drain k8s-s1 --ignore-daemonsets</span><br></pre></td></tr></table></figure><p>升级kubelet、kubectl软件包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y kubelet-1.15.0-0 kubectl-1.15.0-0 --disableexcludes=kubernetes</span><br></pre></td></tr></table></figure><p>更新kubelet配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubeadm upgrade node</span><br></pre></td></tr></table></figure><p>重启kubelet服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl daemon-reload</span><br><span class="line">$ systemctl restart kubelet</span><br></pre></td></tr></table></figure><p>查看kubelet状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl status kubelet</span><br></pre></td></tr></table></figure><p>标注节点为可调度</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl uncordon k8s-s1</span><br></pre></td></tr></table></figure><p>确定各节点状态为Ready</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get nodes</span><br></pre></td></tr></table></figure><h2 id="从失败状态恢复"><a href="#从失败状态恢复" class="headerlink" title="从失败状态恢复"></a>从失败状态恢复</h2><p>如果 kubeadm upgrade 执行失败，它将尝试执行回滚。因此，如果这种情况发生在第一个 master 身上，那么集群仍然完好无损的可能性很大。你可以再次运行 kubeadm upgrade apply，因为它是幂等的，最终应确保实际状态是你声明的所需状态。你可以使用参数 –force 运行 kubeadm upgrade apply 命令更改运行的集群为 y.y.y –&gt; x.x.x，它可用于从糟糕的状态中恢复过来。</p><p>如果 kubeadm upgrade apply 是在其中一个辅助 master 上失败，则仍然有一个正在工作的已经升级的集群，但辅助 master 的状态有些不确定。你将不得不找出哪里出了问题，并手动加入辅助 master。如上所述，有时升级其中一个辅助 master 时，首先等待重新启动的静态 pod 失败，但在一两分钟的暂停后简单地重复该操作时会成功。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;视频课程地址：&lt;/strong&gt;&lt;a href=&quot;https://www.bilibili.com/video/av49387629?from=search&amp;seid=4418298671230182069&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;戳我开始学习&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;控制平面升级&quot;&gt;&lt;a href=&quot;#控制平面升级&quot; class=&quot;headerlink&quot; title=&quot;控制平面升级&quot;&gt;&lt;/a&gt;控制平面升级&lt;/h2&gt;&lt;p&gt;只有master节点需要执行如下操作，需要逐节点操作。将集群从当前的v1.14.3升级到v1.15.0。&lt;/p&gt;
&lt;p&gt;列出可用的kubeadm软件包&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ yum list --showduplicates kubeadm --disableexcludes=kubernetes&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;安装kubeadm新版本软件包&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ yum install -y kubeadm-1.15.0-0 --disableexcludes=kubernetes&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;确认kubeadm为正确的版本&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ kubeadm version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;查看升级计划&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ kubeadm upgrade plan&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;升级第一个控制节点&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ kubeadm upgrade apply v1.15.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;升级kubelet软件包&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ yum install -y kubelet-1.15.0-0 kubectl-1.15.0-0 --disableexcludes=kubernetes&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;重启kubelet服务&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ systemctl restart kubelet&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="docker" scheme="https://istone.dev/tags/docker/"/>
    
      <category term="container" scheme="https://istone.dev/tags/container/"/>
    
      <category term="kubernetes" scheme="https://istone.dev/tags/kubernetes/"/>
    
      <category term="k8s" scheme="https://istone.dev/tags/k8s/"/>
    
      <category term="kubeadm" scheme="https://istone.dev/tags/kubeadm/"/>
    
      <category term="kubectl" scheme="https://istone.dev/tags/kubectl/"/>
    
  </entry>
  
  <entry>
    <title>高可用 Kubernetes 集群部署</title>
    <link href="https://istone.dev/2019/06/30/Kubernetes-Install/"/>
    <id>https://istone.dev/2019/06/30/Kubernetes-Install/</id>
    <published>2019-06-30T04:09:18.000Z</published>
    <updated>2019-07-02T02:45:53.202Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>视频课程地址：</strong><a href="https://www.bilibili.com/video/av49387629?from=search&seid=4418298671230182069" target="_blank" rel="noopener">戳我开始学习</a></p></blockquote><h2 id="Kubernetes版本选择"><a href="#Kubernetes版本选择" class="headerlink" title="Kubernetes版本选择"></a>Kubernetes版本选择</h2><p>Kubernetes 1.14是2019年发布的第一个正式版本。新版本有31个增强功能：其中有10个功能进入了生产可用状态，12个进入了beta版本，另外，增加了7个新功能。1.14版本的主题是可扩展性，支持更多Kubernetes工作负载，其中三个主要功能正式推出，以及一个重要的安全功能转向beta。与之前发布的Kubernetes版本相比，1.14版本中的更多功能逐渐稳定，这是大家期望的重要里程碑。</p><ul><li><strong>生产级别的Windwos节点支持</strong> Kubernetes1.14版本正式支持将Windows节点添加为工作节点，这意味着可以在生产环境使用Windows容器了，使庞大的Windows应用生态系统能够利用Kubernetes平台的强大功能了。</li><li><strong>Kubectl的更新</strong> 新版本Kubectl可以使用声明性Resource Config来管理资源。kubectl的文档也从头进行编写，可参考<a href="https://kubectl.docs.kubernetes.io" target="_blank" rel="noopener">文档</a>。</li><li><strong>持久化本地Volumes</strong> 本地SSD比远程磁盘能提供更好的性能。对性能要求比较高的数据库和分布式文件系统可以使用久化本地存储。<a id="more"></a></li></ul><h2 id="准备节点"><a href="#准备节点" class="headerlink" title="准备节点"></a>准备节点</h2><p>通过kubeadm部署高可用Kubernetes集群有两种架构，一种是将数据平面（etcd集群）和控制平面（Kubernetes控制节点）部署在一起，另一种是分开部署，其中部署在一起可以节省服务器，但是数据平面和控制平面耦合在一起，当一台机器故障时，数据平面和控制平面将同时出现问题。</p><p>数据平面和控制平面共用节点：</p><p><img src="/imgs/201907/kubeadm-ha-topology-stacked-etcd.png" alt="数据平面和控制平面共用节点"></p><p>数据平面和控制平面不共用节点：</p><p><img src="/imgs/201907/kubeadm-ha-topology-external-etcd.png" alt="数据平面和控制平面不共用节点"></p><p>我们按照数据平面和控制平面共用节点进行高可用集群的部署。</p><h2 id="升级各节点系统"><a href="#升级各节点系统" class="headerlink" title="升级各节点系统"></a>升级各节点系统</h2><p>操作系统我们选择 CentOS 7 最新版（7.6.1810），如果不是最新版，可参考如下升级到最新版。</p><p>按如下内容，编辑 /etc/yum.repos.d/CentOS-Base.repo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"># CentOS-Base.repo</span><br><span class="line">#</span><br><span class="line"># The mirror system uses the connecting IP address of the client and the</span><br><span class="line"># update status of each mirror to pick mirrors that are updated to and</span><br><span class="line"># geographically close to the client.  You should use this for CentOS updates</span><br><span class="line"># unless you are manually picking other mirrors.</span><br><span class="line">#</span><br><span class="line"># If the mirrorlist= does not work for you, as a fall back you can try the</span><br><span class="line"># remarked out baseurl= line instead.</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">[base]</span><br><span class="line">name=CentOS-$releasever - Base</span><br><span class="line">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=os&amp;infra=$infra</span><br><span class="line">baseurl=http://mirrors.163.com/centos/7.6.1810/os/$basearch/</span><br><span class="line">#baseurl=http://mirror.centos.org/centos/$releasever/os/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class="line">#released updates</span><br><span class="line">[updates]</span><br><span class="line">name=CentOS-$releasever - Updates</span><br><span class="line">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=updates&amp;infra=$infra</span><br><span class="line">baseurl=http://mirrors.163.com/centos/7.6.1810/updates/$basearch/</span><br><span class="line">#baseurl=http://mirror.centos.org/centos/$releasever/updates/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line">#additional packages that may be useful</span><br><span class="line">[extras]</span><br><span class="line">name=CentOS-$releasever - Extras</span><br><span class="line">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=extras&amp;infra=$infra</span><br><span class="line">baseurl=http://mirrors.163.com/centos/7.6.1810/extras/$basearch/</span><br><span class="line">#baseurl=http://mirror.centos.org/centos/$releasever/extras/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line">#additional packages that extend functionality of existing packages</span><br><span class="line">[centosplus]</span><br><span class="line">name=CentOS-$releasever - Plus</span><br><span class="line">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=centosplus&amp;infra=$infra</span><br><span class="line">baseurl=http://mirrors.163.com/centos/7.6.1810/centosplus/$basearch/</span><br><span class="line">#baseurl=http://mirror.centos.org/centos/$releasever/centosplus/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure><p>升级系统并重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yum update -y</span><br><span class="line">$ reboot</span><br></pre></td></tr></table></figure><p>关闭SELinux，编辑 /etc/sysconfig/selinux，设置SELINUX=disabled</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ setenforce 0</span><br></pre></td></tr></table></figure><p>配置内核参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cat &lt;&lt;EOF &gt;  /etc/sysctl.d/k8s.conf</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">vm.swappiness = 0</span><br><span class="line">EOF</span><br><span class="line">$ sysctl --system</span><br></pre></td></tr></table></figure><p>Kubernetes v1.8+ 要求关闭系统 Swap，请在所有节点利用以下指令关闭：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ swapoff -a &amp;&amp; sysctl -w vm.swappiness=0</span><br><span class="line"></span><br><span class="line">$ vi /etc/fstab</span><br><span class="line">注释swap相关的行</span><br></pre></td></tr></table></figure><p>设置各节点主机名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl <span class="built_in">set</span>-hostname k8s-m1</span><br><span class="line">hostnamectl <span class="built_in">set</span>-hostname k8s-m2</span><br><span class="line">hostnamectl <span class="built_in">set</span>-hostname k8s-m3</span><br><span class="line">hostnamectl <span class="built_in">set</span>-hostname k8s-s1</span><br><span class="line">hostnamectl <span class="built_in">set</span>-hostname k8s-s2</span><br></pre></td></tr></table></figure><p>修改hosts，添加如下行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">172.16.10.48 k8s-m001</span><br><span class="line">172.16.10.49 k8s-m002</span><br><span class="line">172.16.10.50 k8s-m003</span><br><span class="line">172.16.10.51 k8s-s001</span><br><span class="line">172.16.10.52 k8s-s002</span><br><span class="line">172.16.10.53 k8s-s002</span><br></pre></td></tr></table></figure><h2 id="配置所有节点加载ipvs相关模块（kube-proxy-使用ipvs模式）"><a href="#配置所有节点加载ipvs相关模块（kube-proxy-使用ipvs模式）" class="headerlink" title="配置所有节点加载ipvs相关模块（kube-proxy 使用ipvs模式）"></a>配置所有节点加载ipvs相关模块（kube-proxy 使用ipvs模式）</h2><p>加载相关内核模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ cat &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt; EOF</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">modprobe -- ip_vs</span><br><span class="line">modprobe -- ip_vs_rr</span><br><span class="line">modprobe -- ip_vs_wrr</span><br><span class="line">modprobe -- ip_vs_sh</span><br><span class="line">modprobe -- nf_conntrack_ipv4</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">$ chmod 755 /etc/sysconfig/modules/ipvs.modules &amp;&amp; bash /etc/sysconfig/modules/ipvs.modules &amp;&amp; lsmod | grep -e ip_vs -e nf_conntrack_ipv4</span><br></pre></td></tr></table></figure><p>安装相关软件包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y ipset ipvsadm</span><br></pre></td></tr></table></figure><h2 id="配置ssh-key认证"><a href="#配置ssh-key认证" class="headerlink" title="配置ssh key认证"></a>配置ssh key认证</h2><p>在主节点1上执行生成公钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen</span><br></pre></td></tr></table></figure><p>拷贝 /root/.ssh/id_rsa.pub 内容到主节点2和主节点3上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /home/centos/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><h2 id="所有节点安装-Docker"><a href="#所有节点安装-Docker" class="headerlink" title="所有节点安装 Docker"></a>所有节点安装 Docker</h2><p>推荐安装 1.13.1, 17.03, 17.06, 17.09, 18.06, 18.09，但是18.09+是未经测试的，不推荐使用。</p><p>安装依赖包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y yum-utils \</span><br><span class="line">device-mapper-persistent-data \</span><br><span class="line">lvm2</span><br></pre></td></tr></table></figure><p>添加docker yum仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ yum-config-manager \</span><br><span class="line">--add-repo \</span><br><span class="line">https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>安装 Docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><p>配置 Docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ cat &lt;&lt; EOF &gt; /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"insecure-registry"</span>: [</span><br><span class="line">    <span class="string">"hub.hipstershop.cn"</span>,</span><br><span class="line">    <span class="string">"reg.hipstershop.cn"</span></span><br><span class="line">],</span><br><span class="line"><span class="string">"registry-mirror"</span>: <span class="string">"https://q00c7e05.mirror.aliyuncs.com"</span>,</span><br><span class="line"><span class="string">"graph"</span>: <span class="string">"/data1/docker"</span></span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>启动Docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl <span class="built_in">enable</span> docker &amp;&amp; systemctl start docker</span><br></pre></td></tr></table></figure><h2 id="所有节点安装kubeadm-kubelet-and-kubectl"><a href="#所有节点安装kubeadm-kubelet-and-kubectl" class="headerlink" title="所有节点安装kubeadm, kubelet and kubectl"></a>所有节点安装kubeadm, kubelet and kubectl</h2><p>kubelet版本要与待安装的Kubernetes版本相同，否则可能会出现一些难以预料的问题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg</span><br><span class="line">       http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>通过 yum 安装软件包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes</span><br></pre></td></tr></table></figure><p>设置开机自动启动kubelet</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl <span class="built_in">enable</span> kubelet.service</span><br></pre></td></tr></table></figure><h2 id="使用kubeadm创建高可用集群（数据平面和控制平面放置到一起）"><a href="#使用kubeadm创建高可用集群（数据平面和控制平面放置到一起）" class="headerlink" title="使用kubeadm创建高可用集群（数据平面和控制平面放置到一起）"></a>使用kubeadm创建高可用集群（数据平面和控制平面放置到一起）</h2><h3 id="创建第一个节点控制节点"><a href="#创建第一个节点控制节点" class="headerlink" title="创建第一个节点控制节点"></a>创建第一个节点控制节点</h3><p>创建配置文件 kubeadm-config.yaml：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeproxy.config.k8s.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeProxyConfiguration</span></span><br><span class="line"><span class="attr">mode:</span> <span class="string">"ipvs"</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterConfiguration</span></span><br><span class="line"><span class="attr">kubernetesVersion:</span> <span class="string">v1.14.3</span></span><br><span class="line"><span class="attr">apiServer:</span></span><br><span class="line"><span class="attr">    certSANs:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">"apiserver.hipstershop.cn"</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">"172.16.1.50"</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">"172.16.10.48"</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">"172.16.10.49"</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">"172.16.10.50"</span></span><br><span class="line"><span class="attr">    extraArgs:</span></span><br><span class="line"><span class="attr">        allow-privileged:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">        feature-gates:</span> <span class="string">"VolumeSnapshotDataSource=true,CSINodeInfo=true,    CSIDriverRegistry=true"</span></span><br><span class="line"><span class="attr">controlPlaneEndpoint:</span> <span class="string">"apiserver.hipstershop.cn:6443"</span></span><br><span class="line"><span class="attr">etcd:</span></span><br><span class="line"><span class="attr">    local:</span></span><br><span class="line"><span class="attr">        dataDir:</span> <span class="string">/data1/etcd</span></span><br><span class="line"><span class="attr">networking:</span></span><br><span class="line">    <span class="comment"># This CIDR is a Canal default. Substitute or remove for your CNI     provider.</span></span><br><span class="line"><span class="attr">    podSubnet:</span> <span class="string">"10.244.0.0/16"</span></span><br><span class="line"><span class="attr">controllerManager:</span></span><br><span class="line"><span class="attr">    extraArgs:</span></span><br><span class="line"><span class="attr">        address:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="attr">scheduler:</span></span><br><span class="line"><span class="attr">    extraArgs:</span></span><br><span class="line"><span class="attr">        address:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="attr">imageRepository:</span> <span class="string">gcr.azk8s.cn/google-containers</span></span><br></pre></td></tr></table></figure><blockquote><p>172.16.1.50 为APIServer的负载均衡IP，6443为负载均衡的端口。如果没有负载均可以通过 HaProxy自行搭建，参见<a href="https://github.com/findsec-cn/k200/raw/master/1.高可用性集群部署/kHaProxy负载均衡配置.md" target="_blank" rel="noopener">HaProxy负载均衡配置</a>。如果公司有硬件负载均衡如f5、Netscaler等可以直接使用；如果在各云平台可以使用各云平台的负载均衡（如阿里云的SLB）。<br>如果你不能直接访问gcr.io，需要设置imageRepository: gcr.azk8s.cn/google-containers。</p></blockquote><h3 id="初始化第一个节点"><a href="#初始化第一个节点" class="headerlink" title="初始化第一个节点"></a>初始化第一个节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ kubeadm init --config=kubeadm-config.yaml</span><br><span class="line">......</span><br><span class="line">[addons] Applied essential addon: CoreDNS</span><br><span class="line">[addons] Applied essential addon: kube-proxy</span><br><span class="line"></span><br><span class="line">Your Kubernetes master has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run <span class="string">"kubectl apply -f [podnetwork].yaml"</span> with one of the options listed at:</span><br><span class="line">https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">You can now join any number of machines by running the following on each node</span><br><span class="line">as root:</span><br><span class="line"></span><br><span class="line">kubeadm join apiserver.hipstershop.com:6443 --token skvqhu.b297uimw0omi26w0 --discovery-token-ca-cert-hash sha256:b3b23ae7aea87baa02eda31f7fdbd2604e4cfa20a9f9c278671816d630f30d22</span><br></pre></td></tr></table></figure><blockquote><p>注意：以上(kubeadm join)输出在其他节点加入时会使用，需要妥善保管</p></blockquote><h3 id="配置网络节点"><a href="#配置网络节点" class="headerlink" title="配置网络节点"></a>配置网络节点</h3><p>在此选择Canal网络组件，其他网络组建见：<a href="https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/" target="_blank" rel="noopener">https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">$ cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">$ chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">$ kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/canal/rbac.yaml</span><br><span class="line">$ kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/canal/canal.yaml</span><br></pre></td></tr></table></figure><p>等待第一个节点 pod 都变为运行状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pod -n kube-system</span><br><span class="line">NAME                                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">canal-xp9tm                                3/3     Running   0          79s</span><br><span class="line">coredns-86c58d9df4-d62mw                   1/1     Running   0          2m37s</span><br><span class="line">coredns-86c58d9df4-wq26g                   1/1     Running   0          2m37s</span><br><span class="line">etcd-k8s-m1.novalocal                      1/1     Running   0          2m3s</span><br><span class="line">kube-apiserver-k8s-m1.novalocal            1/1     Running   0          115s</span><br><span class="line">kube-controller-manager-k8s-m1.novalocal   1/1     Running   0          2m21s</span><br><span class="line">kube-proxy-t8x22                           1/1     Running   0          2m37s</span><br><span class="line">kube-scheduler-k8s-m1.novalocal            1/1     Running   0          2m12s</span><br></pre></td></tr></table></figure><h3 id="复制证书到其他控制节点"><a href="#复制证书到其他控制节点" class="headerlink" title="复制证书到其他控制节点"></a>复制证书到其他控制节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">USER=centos</span><br><span class="line">CONTROL_PLANE_IPS=<span class="string">"172.16.10.49 172.16.10.50"</span></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> <span class="variable">$&#123;CONTROL_PLANE_IPS&#125;</span>; <span class="keyword">do</span></span><br><span class="line">    scp /etc/kubernetes/pki/ca.crt <span class="string">"<span class="variable">$&#123;USER&#125;</span>"</span>@<span class="variable">$host</span>:</span><br><span class="line">    scp /etc/kubernetes/pki/ca.key <span class="string">"<span class="variable">$&#123;USER&#125;</span>"</span>@<span class="variable">$host</span>:</span><br><span class="line">    scp /etc/kubernetes/pki/sa.key <span class="string">"<span class="variable">$&#123;USER&#125;</span>"</span>@<span class="variable">$host</span>:</span><br><span class="line">    scp /etc/kubernetes/pki/sa.pub <span class="string">"<span class="variable">$&#123;USER&#125;</span>"</span>@<span class="variable">$host</span>:</span><br><span class="line">    scp /etc/kubernetes/pki/front-proxy-ca.crt <span class="string">"<span class="variable">$&#123;USER&#125;</span>"</span>@<span class="variable">$host</span>:</span><br><span class="line">    scp /etc/kubernetes/pki/front-proxy-ca.key <span class="string">"<span class="variable">$&#123;USER&#125;</span>"</span>@<span class="variable">$host</span>:</span><br><span class="line">    scp /etc/kubernetes/pki/etcd/ca.crt <span class="string">"<span class="variable">$&#123;USER&#125;</span>"</span>@<span class="variable">$host</span>:etcd-ca.crt</span><br><span class="line">    scp /etc/kubernetes/pki/etcd/ca.key <span class="string">"<span class="variable">$&#123;USER&#125;</span>"</span>@<span class="variable">$host</span>:etcd-ca.key</span><br><span class="line">    scp /etc/kubernetes/admin.conf <span class="string">"<span class="variable">$&#123;USER&#125;</span>"</span>@<span class="variable">$host</span>:</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="登录第二、三个控制节点移动证书到正确位置"><a href="#登录第二、三个控制节点移动证书到正确位置" class="headerlink" title="登录第二、三个控制节点移动证书到正确位置"></a>登录第二、三个控制节点移动证书到正确位置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">USER=centos</span><br><span class="line">mkdir -p /etc/kubernetes/pki/etcd</span><br><span class="line">mv /home/<span class="variable">$&#123;USER&#125;</span>/ca.crt /etc/kubernetes/pki/</span><br><span class="line">mv /home/<span class="variable">$&#123;USER&#125;</span>/ca.key /etc/kubernetes/pki/</span><br><span class="line">mv /home/<span class="variable">$&#123;USER&#125;</span>/sa.pub /etc/kubernetes/pki/</span><br><span class="line">mv /home/<span class="variable">$&#123;USER&#125;</span>/sa.key /etc/kubernetes/pki/</span><br><span class="line">mv /home/<span class="variable">$&#123;USER&#125;</span>/front-proxy-ca.crt /etc/kubernetes/pki/</span><br><span class="line">mv /home/<span class="variable">$&#123;USER&#125;</span>/front-proxy-ca.key /etc/kubernetes/pki/</span><br><span class="line">mv /home/<span class="variable">$&#123;USER&#125;</span>/etcd-ca.crt /etc/kubernetes/pki/etcd/ca.crt</span><br><span class="line">mv /home/<span class="variable">$&#123;USER&#125;</span>/etcd-ca.key /etc/kubernetes/pki/etcd/ca.key</span><br><span class="line">mv /home/<span class="variable">$&#123;USER&#125;</span>/admin.conf /etc/kubernetes/admin.conf</span><br></pre></td></tr></table></figure><h3 id="将第二、三个控制节点加入集群"><a href="#将第二、三个控制节点加入集群" class="headerlink" title="将第二、三个控制节点加入集群"></a>将第二、三个控制节点加入集群</h3><blockquote><p>注意：加入集群的命令请使用第一个节点安装完成后生生成的命令。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在第二个控制节点执行</span></span><br><span class="line">$ kubeadm join apiserver.hipstershop.cn:6443 --token skvqhu.b297uimw0omi26w0 --discovery-token-ca-cert-hash sha256:b3b23ae7aea87baa02eda31f7fdbd2604e4cfa20a9f9c278671816d630f30d22 --experimental-control-plane</span><br><span class="line"><span class="comment"># 在第三个控制节点执行</span></span><br><span class="line">$ kubeadm join apiserver.hipstershop.cn:6443 --token skvqhu.b297uimw0omi26w0 --discovery-token-ca-cert-hash sha256:b3b23ae7aea87baa02eda31f7fdbd2604e4cfa20a9f9c278671816d630f30d22 --experimental-control-plane</span><br></pre></td></tr></table></figure><h3 id="将从节点加入集群"><a href="#将从节点加入集群" class="headerlink" title="将从节点加入集群"></a>将从节点加入集群</h3><blockquote><p>注意：加入集群的命令请使用第一个节点安装完成后生生成的命令。</p></blockquote><p>在k8s-s001，k8s-s002，k8s-s003节点执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubeadm join apiserver.hipstershop.cn:6443 --token skvqhu.b297uimw0omi26w0 --discovery-token-ca-cert-hash sha256:b3b23ae7aea87baa02eda31f7fdbd2604e4cfa20a9f9c278671816d630f30d22</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;视频课程地址：&lt;/strong&gt;&lt;a href=&quot;https://www.bilibili.com/video/av49387629?from=search&amp;seid=4418298671230182069&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;戳我开始学习&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Kubernetes版本选择&quot;&gt;&lt;a href=&quot;#Kubernetes版本选择&quot; class=&quot;headerlink&quot; title=&quot;Kubernetes版本选择&quot;&gt;&lt;/a&gt;Kubernetes版本选择&lt;/h2&gt;&lt;p&gt;Kubernetes 1.14是2019年发布的第一个正式版本。新版本有31个增强功能：其中有10个功能进入了生产可用状态，12个进入了beta版本，另外，增加了7个新功能。1.14版本的主题是可扩展性，支持更多Kubernetes工作负载，其中三个主要功能正式推出，以及一个重要的安全功能转向beta。与之前发布的Kubernetes版本相比，1.14版本中的更多功能逐渐稳定，这是大家期望的重要里程碑。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;生产级别的Windwos节点支持&lt;/strong&gt; Kubernetes1.14版本正式支持将Windows节点添加为工作节点，这意味着可以在生产环境使用Windows容器了，使庞大的Windows应用生态系统能够利用Kubernetes平台的强大功能了。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kubectl的更新&lt;/strong&gt; 新版本Kubectl可以使用声明性Resource Config来管理资源。kubectl的文档也从头进行编写，可参考&lt;a href=&quot;https://kubectl.docs.kubernetes.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文档&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持久化本地Volumes&lt;/strong&gt; 本地SSD比远程磁盘能提供更好的性能。对性能要求比较高的数据库和分布式文件系统可以使用久化本地存储。
    
    </summary>
    
    
      <category term="docker" scheme="https://istone.dev/tags/docker/"/>
    
      <category term="container" scheme="https://istone.dev/tags/container/"/>
    
      <category term="kubernetes" scheme="https://istone.dev/tags/kubernetes/"/>
    
      <category term="k8s" scheme="https://istone.dev/tags/k8s/"/>
    
      <category term="kubeadm" scheme="https://istone.dev/tags/kubeadm/"/>
    
      <category term="kubectl" scheme="https://istone.dev/tags/kubectl/"/>
    
      <category term="helm" scheme="https://istone.dev/tags/helm/"/>
    
  </entry>
  
  <entry>
    <title>Docker Compose 搭建 PHP 开发环境</title>
    <link href="https://istone.dev/2018/09/11/Docker-Compose-PHP-ENV/"/>
    <id>https://istone.dev/2018/09/11/Docker-Compose-PHP-ENV/</id>
    <published>2018-09-11T06:32:23.000Z</published>
    <updated>2019-06-27T02:24:18.309Z</updated>
    
    <content type="html"><![CDATA[<p>Docker PHP 可以快速构建基于 Docker 的 PHP 本地开发环境，此套 LNMP 环境同时支持 PHP 5 和 PHP 7。请克隆此项目使用：<a href="https://github.com/ist0ne/docker-php.git" target="_blank" rel="noopener">https://github.com/ist0ne/docker-php.git</a></p><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><p>PHP/FPM 7.2/5.6、Nginx 1.12、Mysql 5.7、Redis 4.0、Memcached 1.5</p><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">├── add_project.sh  新建项目脚本（Linux）</span><br><span class="line">├── build  镜像构建目录</span><br><span class="line">│   ├── memcached</span><br><span class="line">│   │   └── Dockerfile</span><br><span class="line">│   ├── mysql</span><br><span class="line">│   │   └── Dockerfile</span><br><span class="line">│   ├── nginx</span><br><span class="line">│   │   └── Dockerfile</span><br><span class="line">│   ├── php5</span><br><span class="line">│   │   └── Dockerfile</span><br><span class="line">│   ├── php7</span><br><span class="line">│   │   └── Dockerfile</span><br><span class="line">│   └── redis</span><br><span class="line">│       └── Dockerfile</span><br><span class="line">├── config  服务配置目录</span><br><span class="line">│   ├── mysql</span><br><span class="line">│   │   ├── backup</span><br><span class="line">│   │   ├── config</span><br><span class="line">│   │   │   └── mysql.cnf</span><br><span class="line">│   │   ├── crontabs</span><br><span class="line">│   │   └── docker-entrypoint-initdb.d  数据库初始化脚本目录</span><br><span class="line">│   ├── nginx</span><br><span class="line">│   │   ├── conf.d</span><br><span class="line">│   │   │   ├── bar.example.com.conf</span><br><span class="line">│   │   │   ├── foo.example.com.conf</span><br><span class="line">│   │   │   └── example.com.conf.template</span><br><span class="line">│   │   ├── fastcgi_mysql</span><br><span class="line">│   │   ├── fastcgi_web</span><br><span class="line">│   │   └── nginx.conf</span><br><span class="line">│   ├── php5</span><br><span class="line">│   │   ├── php.ini</span><br><span class="line">│   │   └── php.ini-production</span><br><span class="line">│   ├── php7</span><br><span class="line">│   │   ├── php.ini</span><br><span class="line">│   │   └── php.ini-production</span><br><span class="line">│   └── redis</span><br><span class="line">│       └── redis.conf</span><br><span class="line">├── data 服务数据目录</span><br><span class="line">│   ├── mysql  数据库数据存储目录</span><br><span class="line">│   ├── nginx</span><br><span class="line">│   │   ├── cache  应用缓存目录</span><br><span class="line">│   │   └── data  应用数据目录</span><br><span class="line">│   └── redis  缓存数据目录</span><br><span class="line">├── docker-compose.yml  项目配置文件</span><br><span class="line">├── logs 服务日志目录</span><br><span class="line">│   ├── access  Nginx访问日志目录</span><br><span class="line">│   │   ├── bar.example.com</span><br><span class="line">│   │   │   └── bar.example.com.log</span><br><span class="line">│   │   └── foo.example.com</span><br><span class="line">│   │       └── foo.example.com.log</span><br><span class="line">│   ├── app  应用日志目录</span><br><span class="line">│   │   ├── bar.example.com</span><br><span class="line">│   │   └── foo.example.com</span><br><span class="line">│   └── srv  服务日志目录</span><br><span class="line">│       ├── memcached</span><br><span class="line">│       ├── mysql</span><br><span class="line">│       │   └── error.log</span><br><span class="line">│       ├── nginx</span><br><span class="line">│       │   └── nginx_error.log</span><br><span class="line">│       ├── php5</span><br><span class="line">│       │   └── php_errors.log</span><br><span class="line">│       ├── php7</span><br><span class="line">│       │   └── php_errors.log</span><br><span class="line">│       └── redis</span><br><span class="line">│           └── redis.log</span><br><span class="line">├── README.md</span><br><span class="line">└── webapps  应用代码目录</span><br><span class="line">    ├── bar.example.com</span><br><span class="line">    │   └── htdocs</span><br><span class="line">    │       └── index.php</span><br><span class="line">    └── foo.example.com</span><br><span class="line">        └── htdocs</span><br><span class="line">            └── index.php</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h3><p>需要先安装Docker，具体可参看：<a href="https://docs.docker.com/install/" target="_blank" rel="noopener">https://docs.docker.com/install/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/ist0ne/docker-php.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> docker-php</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置应用目录(重要)、数据库密码、端口等</span></span><br><span class="line">vim .env</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给组件文件夹可写权限</span></span><br><span class="line">sudo chmod -R 777 data logs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建镜像并启动容器</span></span><br><span class="line">sudo docker-compose up --build -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 仅启动容器</span></span><br><span class="line">sudo docker-compose up -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 单独编译PHP容器</span></span><br><span class="line">sudo docker-compose build php7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止开发环境</span></span><br><span class="line">sudo docker-compose stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动开发环境</span></span><br><span class="line">sudo docker-compose start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 销毁开发环境</span></span><br><span class="line">sudo docker-compose down</span><br></pre></td></tr></table></figure><h3 id="创建新项目"><a href="#创建新项目" class="headerlink" title="创建新项目"></a>创建新项目</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ./add_project.sh &lt;项目域名&gt; &lt;PHP 版本&gt;</span></span><br><span class="line"><span class="comment"># 默认新建PHP 7 项目</span></span><br><span class="line">./add_project.sh foo.example.com 5</span><br></pre></td></tr></table></figure><p>重启容器并访问项目访问:</p><p>修改hosts：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 foo.example.com</span><br></pre></td></tr></table></figure><p>访问地址：<a href="http://foo.example.com" target="_blank" rel="noopener">http://foo.example.com</a></p><h3 id="env配置文件"><a href="#env配置文件" class="headerlink" title=".env配置文件"></a>.env配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 项目放置目录（必须配置正确）</span></span><br><span class="line">GLOBAL_APP_PATH=/data1/docker-php</span><br><span class="line"></span><br><span class="line"><span class="comment"># HTTP 本地映射端口</span></span><br><span class="line">HTTP_PORT=80</span><br><span class="line">HTTPS_PORT=443</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL 密码及端口</span></span><br><span class="line">MYSQL_PASSWORD=DockerLNMP</span><br><span class="line">MYSQL_PORT=3306</span><br><span class="line"></span><br><span class="line"><span class="comment"># Reids 本地映射端口</span></span><br><span class="line">REDIS_PORT=6379</span><br><span class="line"></span><br><span class="line"><span class="comment"># Memcached 本地映射端口</span></span><br><span class="line">MEMCACHED_PORT=11211</span><br></pre></td></tr></table></figure><h3 id="docker-compose-yml配置文件"><a href="#docker-compose-yml配置文件" class="headerlink" title="docker-compose.yml配置文件"></a>docker-compose.yml配置文件</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'2'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  nginx:</span></span><br><span class="line"><span class="attr">      depends_on:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">php5</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">php7</span></span><br><span class="line"><span class="attr">      build:</span></span><br><span class="line"><span class="attr">        context:</span> <span class="string">./build/nginx</span></span><br><span class="line"><span class="attr">      privileged:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      ports:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">"$&#123;HTTP_PORT&#125;:80"</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">"$&#123;HTTPS_PORT&#125;:443"</span></span><br><span class="line"><span class="attr">      links:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">php5</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">php7</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/webapps:/data/webapps</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/config/nginx/conf.d:/etc/nginx/conf.d</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/config/nginx/nginx.conf:/etc/nginx/nginx.conf</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/config/nginx/fastcgi_web:/etc/nginx/fastcgi_web</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/config/nginx/fastcgi_mysql:/etc/nginx/fastcgi_mysql</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/logs:/data/logs</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/data/nginx/data:/data/data</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/data/nginx/cache:/data/cache</span></span><br><span class="line"><span class="attr">      restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">      networks:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">frontend</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  php5:</span></span><br><span class="line"><span class="attr">      depends_on:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">mysql</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">redis</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">memcached</span></span><br><span class="line"><span class="attr">      build:</span></span><br><span class="line"><span class="attr">        context:</span> <span class="string">./build/php5</span></span><br><span class="line"><span class="attr">      privileged:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      ports:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">"9000:9000"</span></span><br><span class="line"><span class="attr">      links:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">"mysql"</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">"redis"</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">"memcached"</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/webapps:/data/webapps</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/config/php5/php.ini:/usr/local/etc/php/php.ini</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/logs/srv/php5:/data/logs/srv/php</span></span><br><span class="line"><span class="attr">      restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">      networks:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">frontend</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  php7:</span></span><br><span class="line"><span class="attr">      depends_on:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">mysql</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">redis</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">memcached</span></span><br><span class="line"><span class="attr">      build:</span></span><br><span class="line"><span class="attr">        context:</span> <span class="string">./build/php7</span></span><br><span class="line"><span class="attr">      privileged:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      ports:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">"9001:9000"</span></span><br><span class="line"><span class="attr">      links:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">"mysql"</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">"redis"</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">"memcached"</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/webapps:/data/webapps</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/config/php7/php.ini:/usr/local/etc/php/php.ini</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/logs/srv/php7:/data/logs/srv/php</span></span><br><span class="line"><span class="attr">      restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">      networks:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">frontend</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  mysql:</span></span><br><span class="line"><span class="attr">      build:</span></span><br><span class="line"><span class="attr">        context:</span> <span class="string">./build/mysql</span></span><br><span class="line"><span class="attr">      privileged:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      ports:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">"$&#123;MYSQL_PORT&#125;:3306"</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/data/mysql:/var/lib/mysql</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/config/mysql/config/mysql.cnf:/etc/mysql/conf.d/mysql.cnf</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/logs/srv/mysql:/var/log/mysql</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/config/mysql/backup:/var/backup</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/config/mysql/crontabs:/var/spool/cron/crontabs</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/config/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d</span></span><br><span class="line"><span class="attr">      environment:</span></span><br><span class="line"><span class="attr">        MYSQL_ROOT_PASSWORD:</span> <span class="string">$&#123;MYSQL_PASSWORD&#125;</span></span><br><span class="line"><span class="attr">      restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">      networks:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">backend</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  redis:</span></span><br><span class="line"><span class="attr">      build:</span></span><br><span class="line"><span class="attr">        context:</span> <span class="string">./build/redis</span></span><br><span class="line"><span class="attr">      privileged:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      ports:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">"$&#123;REDIS_PORT&#125;:6379"</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/config/redis/redis.conf:/usr/local/etc/redis/redis.conf</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/logs/srv/redis:/var/log/redis</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/data/redis:/data</span></span><br><span class="line"><span class="attr">      restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">      networks:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">backend</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  memcached:</span></span><br><span class="line"><span class="attr">      build:</span></span><br><span class="line"><span class="attr">        context:</span> <span class="string">./build/memcached</span></span><br><span class="line"><span class="attr">      privileged:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      ports:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">"$&#123;MEMCACHED_PORT&#125;:11211"</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">$&#123;GLOBAL_APP_PATH&#125;/logs/srv/memcached:/var/log/memcached</span></span><br><span class="line"><span class="attr">      restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">      networks:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">backend</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  frontend:</span></span><br><span class="line"><span class="attr">    driver:</span> <span class="string">bridge</span></span><br><span class="line"><span class="attr">    ipam:</span></span><br><span class="line"><span class="attr">     config:</span></span><br><span class="line"><span class="attr">       - subnet:</span> <span class="number">172.28</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16</span></span><br><span class="line"><span class="attr">  backend:</span></span><br><span class="line"><span class="attr">    driver:</span> <span class="string">bridge</span></span><br><span class="line"><span class="attr">    ipam:</span></span><br><span class="line"><span class="attr">     config:</span></span><br><span class="line"><span class="attr">       - subnet:</span> <span class="number">172.29</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Docker PHP 可以快速构建基于 Docker 的 PHP 本地开发环境，此套 LNMP 环境同时支持 PHP 5 和 PHP 7。请克隆此项目使用：&lt;a href=&quot;https://github.com/ist0ne/docker-php.git&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/ist0ne/docker-php.git&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;启动服务&quot;&gt;&lt;a href=&quot;#启动服务&quot; class=&quot;headerlink&quot; title=&quot;启动服务&quot;&gt;&lt;/a&gt;启动服务&lt;/h3&gt;&lt;p&gt;PHP/FPM 7.2/5.6、Nginx 1.12、Mysql 5.7、Redis 4.0、Memcached 1.5&lt;/p&gt;
&lt;h3 id=&quot;目录结构&quot;&gt;&lt;a href=&quot;#目录结构&quot; class=&quot;headerlink&quot; title=&quot;目录结构&quot;&gt;&lt;/a&gt;目录结构&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;├── add_project.sh  新建项目脚本（Linux）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── build  镜像构建目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── memcached&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   └── Dockerfile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   └── Dockerfile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   └── Dockerfile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── php5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   └── Dockerfile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── php7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   └── Dockerfile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   └── redis&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       └── Dockerfile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── config  服务配置目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   ├── backup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   ├── config&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   │   └── mysql.cnf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   ├── crontabs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   └── docker-entrypoint-initdb.d  数据库初始化脚本目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   ├── conf.d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   │   ├── bar.example.com.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   │   ├── foo.example.com.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   │   └── example.com.conf.template&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   ├── fastcgi_mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   ├── fastcgi_web&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   └── nginx.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── php5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   ├── php.ini&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   └── php.ini-production&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── php7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   ├── php.ini&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   └── php.ini-production&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   └── redis&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       └── redis.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── data 服务数据目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── mysql  数据库数据存储目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   ├── cache  应用缓存目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   └── data  应用数据目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   └── redis  缓存数据目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── docker-compose.yml  项目配置文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── logs 服务日志目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── access  Nginx访问日志目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   ├── bar.example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   │   └── bar.example.com.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   └── foo.example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │       └── foo.example.com.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── app  应用日志目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   ├── bar.example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   └── foo.example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   └── srv  服务日志目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       ├── memcached&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       ├── mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       │   └── error.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       ├── nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       │   └── nginx_error.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       ├── php5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       │   └── php_errors.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       ├── php7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       │   └── php_errors.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       └── redis&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│           └── redis.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└── webapps  应用代码目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── bar.example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   └── htdocs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │       └── index.php&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    └── foo.example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        └── htdocs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            └── index.php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="docker" scheme="https://istone.dev/tags/docker/"/>
    
      <category term="container" scheme="https://istone.dev/tags/container/"/>
    
      <category term="compose" scheme="https://istone.dev/tags/compose/"/>
    
      <category term="develop" scheme="https://istone.dev/tags/develop/"/>
    
      <category term="php" scheme="https://istone.dev/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Docker Compose</title>
    <link href="https://istone.dev/2018/09/10/Docker-Compose/"/>
    <id>https://istone.dev/2018/09/10/Docker-Compose/</id>
    <published>2018-09-10T08:24:51.000Z</published>
    <updated>2019-06-27T02:24:18.310Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Compose 项目是 Docker 官方的开源项目，负责实现对 Docker 容器集群的快速编排。Compose 定位是 「定义和运行多个 Docker 容器化应用（Defining and running multi-container Docker applications）」，其前身是开源项目 Fig。</p><p>在日常工作中，经常会碰到需要多个容器相互配合来完成某项任务的情况。例如要实现一个 Web 项目，除了 Web 服务容器本身，往往还需要再加上缓存服务容器，已经后端的数据库服务容器。Compose 恰好满足了这样的需求。它允许用户通过一个单独的 docker-compose.yml 模板文件（YAML 格式）来定义一组相关联的应用容器为一个项目（project）。</p><p>Compose 中有两个重要的概念：</p><ul><li>服务 (service)：一个应用的容器，实际上可以包括若干运行相同镜像的容器实例。</li><li>项目 (project)：由一组关联的应用容器组成的一个完整业务单元，在 docker-compose.yml 文件中定义。<a id="more"></a></li></ul><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>Compose 支持 Linux、macOS、Windows 10 三大平台。参考官方文档：<a href="https://docs.docker.com/compose/overview/" target="_blank" rel="noopener">https://docs.docker.com/compose/overview/</a></p><p>Compose 可以通过 Python 的包管理工具 pip 进行安装，也可以直接下载编译好的二进制文件使用，甚至能够直接在 Docker 容器中运行。</p><p>前两种方式是传统方式，适合本地环境下安装使用；最后一种方式则不破坏系统环境，更适合云端场景。</p><p>Docker for Mac 、Docker for Windows 自带 docker-compose 二进制文件，安装 Docker 之后可以直接使用。</p><h4 id="二进制安装"><a href="#二进制安装" class="headerlink" title="二进制安装"></a>二进制安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L <span class="string">"https://github.com/docker/compose/releases/download/1.22.0/docker-compose-<span class="variable">$(uname -s)</span>-<span class="variable">$(uname -m)</span>"</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">sudo chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>最常见的项目是 web 网站，该项目应该包含 web 应用和缓存。<br>下面我们用 Python 来建立一个能够记录页面访问次数的 web 网站。</p><h4 id="web-应用"><a href="#web-应用" class="headerlink" title="web 应用"></a>web 应用</h4><p>新建文code件夹，在该目录中编写 app.py 文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> redis <span class="keyword">import</span> Redis</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">redis = Redis(host=<span class="string">'redis'</span>, port=<span class="number">6379</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    count = redis.incr(<span class="string">'hits'</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World! 该页面已被访问 &#123;&#125; 次。\n'</span>.format(count)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app.run(host=<span class="string">"0.0.0.0"</span>, debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h4 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h4><p>编写 Dockerfile 文件，内容为</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> python:<span class="number">3.6</span>-alpine</span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> . /code</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /code</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> pip install redis flask</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"python"</span>, <span class="string">"app.py"</span>]</span></span><br></pre></td></tr></table></figure><h4 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h4><p>编写 docker-compose.yml 文件，这个是 Compose 使用的主模板文件。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  web:</span></span><br><span class="line"><span class="attr">    build:</span> <span class="string">.</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">     -</span> <span class="string">"5000:5000"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  redis:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">"redis:alpine"</span></span><br></pre></td></tr></table></figure><p>运行 compose 项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker-compose up</span><br></pre></td></tr></table></figure><p>此时访问本地 5000 端口，每次刷新页面，计数就会加 1。</p><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><p>对于 Compose 来说，大部分命令的对象既可以是项目本身，也可以指定为项目中的服务或者容器。如果没有特别的说明，命令对象将是项目，这意味着项目中所有的服务都会受到命令影响。</p><p>执行 docker-compose [COMMAND] –help 或者 docker-compose help [COMMAND] 可以查看具体某个命令的使用格式。</p><p>docker-compose 命令的基本的使用格式是</p><p>docker-compose [-f=<arg>…] [options] [COMMAND] [ARGS…]</arg></p><p>常用命令：</p><p>docker-compose build [options] [SERVICE…] 构建（重新构建）项目中的服务容器<br>docker-compose up [options] [SERVICE…] 自动完成包括构建镜像，（重新）创建服务，启动服务，并关联服务相关容器的一系列操作<br>docker-compose start [SERVICE…] 启动已经存在的服务容器<br>docker-compose stop [options] [SERVICE…] 停止已经处于运行状态的容器，但不删除它。通过 docker-compose start 可以再次启动这些容器<br>docker-compose down 此命令将会停止 up 命令所启动的容器，并移除网络</p><h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><p>模板文件是使用 Compose 的核心，涉及到的指令关键字也比较多。这里面大部分指令跟 docker run 相关参数的含义都是类似的。</p><p>默认的模板文件名称为 docker-compose.yml，格式为 YAML 格式。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  webapp:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">examples/web</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"80:80"</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/data"</span></span><br></pre></td></tr></table></figure><p>注意每个服务都必须通过 image 指令指定镜像或 build 指令（需要 Dockerfile）等来自动构建生成镜像。</p><p>如果使用 build 指令，在 Dockerfile 中设置的选项(例如：CMD, EXPOSE, VOLUME, ENV 等) 将会自动被获取，无需在 docker-compose.yml 中再次设置。</p><p>下面分别介绍各个指令的用法。</p><h4 id="build"><a href="#build" class="headerlink" title="build"></a>build</h4><p>指定 Dockerfile 所在文件夹的路径（可以是绝对路径，或者相对 docker-compose.yml 文件的路径）。 Compose 将会利用它自动构建这个镜像，然后使用这个镜像。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  webapp:</span></span><br><span class="line"><span class="attr">    build:</span> <span class="string">./dir</span></span><br></pre></td></tr></table></figure><p>你也可以使用 context 指令指定 Dockerfile 所在文件夹的路径。</p><p>使用 dockerfile 指令指定 Dockerfile 文件名。</p><p>使用 arg 指令指定构建镜像时的变量。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  webapp:</span></span><br><span class="line"><span class="attr">    build:</span></span><br><span class="line"><span class="attr">      context:</span> <span class="string">./dir</span></span><br><span class="line"><span class="attr">      dockerfile:</span> <span class="string">Dockerfile-alternate</span></span><br><span class="line"><span class="attr">      args:</span></span><br><span class="line"><span class="attr">        buildno:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>使用 cache_from 指定构建镜像的缓存</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">build:</span></span><br><span class="line"><span class="attr">  context:</span> <span class="string">.</span></span><br><span class="line"><span class="attr">  cache_from:</span></span><br><span class="line"><span class="attr">    - alpine:</span><span class="string">latest</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">corp/web_app:3.14</span></span><br></pre></td></tr></table></figure><h4 id="cap-add-cap-drop"><a href="#cap-add-cap-drop" class="headerlink" title="cap_add, cap_drop"></a>cap_add, cap_drop</h4><p>指定容器的内核能力（capacity）分配。</p><p>例如，让容器拥有所有能力可以指定为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cap_add:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">ALL</span></span><br></pre></td></tr></table></figure><p>去掉 NET_ADMIN 能力可以指定为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cap_drop:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">NET_ADMIN</span></span><br></pre></td></tr></table></figure><h4 id="command"><a href="#command" class="headerlink" title="command"></a>command</h4><p>覆盖容器启动后默认执行的命令。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">command:</span> <span class="string">echo</span> <span class="string">"hello world"</span></span><br></pre></td></tr></table></figure><h4 id="configs"><a href="#configs" class="headerlink" title="configs"></a>configs</h4><p>仅用于 Swarm mode。</p><h4 id="cgroup-parent"><a href="#cgroup-parent" class="headerlink" title="cgroup_parent"></a>cgroup_parent</h4><p>指定父 cgroup 组，意味着将继承该组的资源限制。</p><p>例如，创建了一个 cgroup 组名称为 cgroups_1。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cgroup_parent:</span> <span class="string">cgroups_1</span></span><br></pre></td></tr></table></figure><h4 id="container-name"><a href="#container-name" class="headerlink" title="container_name"></a>container_name</h4><p>指定容器名称。默认将会使用 项目名称_服务名称_序号 这样的格式。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">container_name:</span> <span class="string">docker-web-container</span></span><br></pre></td></tr></table></figure><p>注意: 指定容器名称后，该服务将无法进行扩展（scale），因为 Docker 不允许多个容器具有相同的名称。</p><h4 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h4><p>仅用于 Swarm mode。</p><h4 id="devices"><a href="#devices" class="headerlink" title="devices"></a>devices</h4><p>指定设备映射关系。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">devices:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">"/dev/ttyUSB1:/dev/ttyUSB0"</span></span><br></pre></td></tr></table></figure><h4 id="depends-on"><a href="#depends-on" class="headerlink" title="depends_on"></a>depends_on</h4><p>解决容器的依赖、启动先后的问题。以下例子中会先启动 redis db 再启动 web</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  web:</span></span><br><span class="line"><span class="attr">    build:</span> <span class="string">.</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">db</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">redis</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  redis:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">redis</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  db:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">postgres</span></span><br></pre></td></tr></table></figure><p>注意：web 服务不会等待 redis db 「完全启动」之后才启动。</p><h4 id="dns"><a href="#dns" class="headerlink" title="dns"></a>dns</h4><p>自定义 DNS 服务器。可以是一个值，也可以是一个列表。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dns:</span> <span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dns:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span></span><br><span class="line"><span class="bullet">  -</span> <span class="number">114.114</span><span class="number">.114</span><span class="number">.114</span></span><br></pre></td></tr></table></figure><h4 id="dns-search"><a href="#dns-search" class="headerlink" title="dns_search"></a>dns_search</h4><p>配置 DNS 搜索域。可以是一个值，也可以是一个列表。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dns_search:</span> <span class="string">example.com</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dns_search:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">domain1.example.com</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">domain2.example.com</span></span><br></pre></td></tr></table></figure><h4 id="tmpfs"><a href="#tmpfs" class="headerlink" title="tmpfs"></a>tmpfs</h4><p>挂载一个 tmpfs 文件系统到容器。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tmpfs:</span> <span class="string">/run</span></span><br><span class="line"><span class="attr">tmpfs:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">/run</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">/tmp</span></span><br></pre></td></tr></table></figure><h4 id="env-file"><a href="#env-file" class="headerlink" title="env_file"></a>env_file</h4><p>从文件中获取环境变量，可以为单独的文件路径或列表。</p><p>如果通过 docker-compose -f FILE 方式来指定 Compose 模板文件，则 env_file 中变量的路径会基于模板文件路径。</p><p>如果有变量名称与 environment 指令冲突，则按照惯例，以后者为准。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">env_file:</span> <span class="string">.env</span></span><br><span class="line"></span><br><span class="line"><span class="attr">env_file:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">./common.env</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">./apps/web.env</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">/opt/secrets.env</span></span><br></pre></td></tr></table></figure><p>环境变量文件中每一行必须符合格式，支持 # 开头的注释行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># common.env: Set development environment</span></span><br><span class="line">PROG_ENV=development</span><br></pre></td></tr></table></figure><h4 id="environment"><a href="#environment" class="headerlink" title="environment"></a>environment</h4><p>设置环境变量。你可以使用数组或字典两种格式。</p><p>只给定名称的变量会自动获取运行 Compose 主机上对应变量的值，可以用来防止泄露不必要的数据。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">environment:</span></span><br><span class="line"><span class="attr">  RACK_ENV:</span> <span class="string">development</span></span><br><span class="line"><span class="attr">  SESSION_SECRET:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">environment:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">RACK_ENV=development</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">SESSION_SECRET</span></span><br></pre></td></tr></table></figure><p>如果变量名称或者值中用到 true|false，yes|no 等表达 布尔 含义的词汇，最好放到引号里，避免 YAML 自动解析某些内容为对应的布尔语义。这些特定词汇，包括</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y|Y|yes|Yes|YES|n|N|no|No|NO|<span class="literal">true</span>|True|TRUE|<span class="literal">false</span>|False|FALSE|on|On|ON|off|Off|OFF</span><br></pre></td></tr></table></figure><h4 id="expose"><a href="#expose" class="headerlink" title="expose"></a>expose</h4><p>暴露端口，但不映射到宿主机，只被连接的服务访问。</p><p>仅可以指定内部端口为参数</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">expose:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">"3000"</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">"8000"</span></span><br></pre></td></tr></table></figure><h4 id="external-links"><a href="#external-links" class="headerlink" title="external_links"></a>external_links</h4><p>注意：不建议使用该指令。</p><p>链接到 docker-compose.yml 外部的容器，甚至并非 Compose 管理的外部容器。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">external_links:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">redis_1</span></span><br><span class="line"><span class="attr">  - project_db_1:</span><span class="string">mysql</span></span><br><span class="line"><span class="attr">  - project_db_1:</span><span class="string">postgresql</span></span><br></pre></td></tr></table></figure><h4 id="extra-hosts"><a href="#extra-hosts" class="headerlink" title="extra_hosts"></a>extra_hosts</h4><p>类似 Docker 中的 –add-host 参数，指定额外的 host 名称映射信息。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">extra_hosts:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">"googledns:8.8.8.8"</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">"dockerhub:52.1.157.61"</span></span><br></pre></td></tr></table></figure><p>会在启动后的服务容器中 /etc/hosts 文件中添加如下两条条目。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">8.8.8.8 googledns</span><br><span class="line">52.1.157.61 dockerhub</span><br></pre></td></tr></table></figure><h4 id="healthcheck"><a href="#healthcheck" class="headerlink" title="healthcheck"></a>healthcheck</h4><p>通过命令检查容器是否健康运行。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">healthcheck:</span></span><br><span class="line"><span class="attr">  test:</span> <span class="string">["CMD",</span> <span class="string">"curl"</span><span class="string">,</span> <span class="string">"-f"</span><span class="string">,</span> <span class="string">"http://localhost"</span><span class="string">]</span></span><br><span class="line"><span class="attr">  interval:</span> <span class="number">1</span><span class="string">m30s</span></span><br><span class="line"><span class="attr">  timeout:</span> <span class="number">10</span><span class="string">s</span></span><br><span class="line"><span class="attr">  retries:</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><h4 id="image"><a href="#image" class="headerlink" title="image"></a>image</h4><p>指定为镜像名称或镜像 ID。如果镜像在本地不存在，Compose 将会尝试拉取这个镜像。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">image:</span> <span class="string">ubuntu</span></span><br><span class="line"><span class="attr">image:</span> <span class="string">orchardup/postgresql</span></span><br><span class="line"><span class="attr">image:</span> <span class="string">a4bc65fd</span></span><br></pre></td></tr></table></figure><h4 id="labels"><a href="#labels" class="headerlink" title="labels"></a>labels</h4><p>为容器添加 Docker 元数据（metadata）信息。例如可以为容器添加辅助说明信息。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">labels:</span></span><br><span class="line">  <span class="string">com.startupteam.description:</span> <span class="string">"webapp for a startup team"</span></span><br><span class="line">  <span class="string">com.startupteam.department:</span> <span class="string">"devops department"</span></span><br><span class="line">  <span class="string">com.startupteam.release:</span> <span class="string">"rc3 for v1.0"</span></span><br></pre></td></tr></table></figure><h4 id="links"><a href="#links" class="headerlink" title="links"></a>links</h4><p>注意：不推荐使用该指令。</p><h4 id="logging"><a href="#logging" class="headerlink" title="logging"></a>logging</h4><p>配置日志选项。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">logging:</span></span><br><span class="line"><span class="attr">  driver:</span> <span class="string">syslog</span></span><br><span class="line"><span class="attr">  options:</span></span><br><span class="line"><span class="attr">    syslog-address:</span> <span class="string">"tcp://192.168.0.42:123"</span></span><br></pre></td></tr></table></figure><p>目前支持三种日志驱动类型。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver:</span> <span class="string">"json-file"</span></span><br><span class="line"><span class="attr">driver:</span> <span class="string">"syslog"</span></span><br><span class="line"><span class="attr">driver:</span> <span class="string">"none"</span></span><br></pre></td></tr></table></figure><p>options 配置日志驱动的相关参数。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">options:</span></span><br><span class="line"><span class="attr">  max-size:</span> <span class="string">"200k"</span></span><br><span class="line"><span class="attr">  max-file:</span> <span class="string">"10"</span></span><br></pre></td></tr></table></figure><h4 id="network-mode"><a href="#network-mode" class="headerlink" title="network_mode"></a>network_mode</h4><p>设置网络模式。使用和 docker run 的 –network 参数一样的值。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">network_mode:</span> <span class="string">"bridge"</span></span><br><span class="line"><span class="attr">network_mode:</span> <span class="string">"host"</span></span><br><span class="line"><span class="attr">network_mode:</span> <span class="string">"none"</span></span><br><span class="line"><span class="attr">network_mode:</span> <span class="string">"service:[service name]"</span></span><br><span class="line"><span class="attr">network_mode:</span> <span class="string">"container:[container name/id]"</span></span><br></pre></td></tr></table></figure><h4 id="networks"><a href="#networks" class="headerlink" title="networks"></a>networks</h4><p>配置容器连接的网络。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  some-service:</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">     -</span> <span class="string">some-network</span></span><br><span class="line"><span class="bullet">     -</span> <span class="string">other-network</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  some-network:</span></span><br><span class="line"><span class="attr">  other-network:</span></span><br></pre></td></tr></table></figure><h4 id="pid"><a href="#pid" class="headerlink" title="pid"></a>pid</h4><p>跟主机系统共享进程命名空间。打开该选项的容器之间，以及容器和宿主机系统之间可以通过进程 ID 来相互访问和操作。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pid:</span> <span class="string">"host"</span></span><br></pre></td></tr></table></figure><h4 id="ports"><a href="#ports" class="headerlink" title="ports"></a>ports</h4><p>暴露端口信息。</p><p>使用宿主端口：容器端口 (HOST:CONTAINER) 格式，或者仅仅指定容器的端口（宿主将会随机选择端口）都可以。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ports:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">"3000"</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">"8000:8000"</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">"49100:22"</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">"127.0.0.1:8001:8001"</span></span><br></pre></td></tr></table></figure><p>注意：当使用 HOST:CONTAINER 格式来映射端口时，如果你使用的容器端口小于 60 并且没放到引号里，可能会得到错误结果，因为 YAML 会自动解析 xx:yy 这种数字格式为 60 进制。为避免出现这种问题，建议数字串都采用引号包括起来的字符串格式。</p><h4 id="secrets"><a href="#secrets" class="headerlink" title="secrets"></a>secrets</h4><p>存储敏感数据，例如 mysql 服务密码。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.1"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mysql:</span></span><br><span class="line"><span class="attr">  image:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">  environment:</span></span><br><span class="line"><span class="attr">    MYSQL_ROOT_PASSWORD_FILE:</span> <span class="string">/run/secrets/db_root_password</span></span><br><span class="line"><span class="attr">  secrets:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">db_root_password</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">my_other_secret</span></span><br><span class="line"></span><br><span class="line"><span class="attr">secrets:</span></span><br><span class="line"><span class="attr">  my_secret:</span></span><br><span class="line"><span class="attr">    file:</span> <span class="string">./my_secret.txt</span></span><br><span class="line"><span class="attr">  my_other_secret:</span></span><br><span class="line"><span class="attr">    external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="security-opt"><a href="#security-opt" class="headerlink" title="security_opt"></a>security_opt</h4><p>指定容器模板标签（label）机制的默认属性（用户、角色、类型、级别等）。例如配置标签的用户名和角色名。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">security_opt:</span></span><br><span class="line"><span class="attr">  - label:</span><span class="attr">user:USER</span></span><br><span class="line"><span class="attr">  - label:</span><span class="attr">role:ROLE</span></span><br></pre></td></tr></table></figure><h4 id="stop-signal"><a href="#stop-signal" class="headerlink" title="stop_signal"></a>stop_signal</h4><p>设置另一个信号来停止容器。在默认情况下使用的是 SIGTERM 停止容器。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stop_signal:</span> <span class="string">SIGUSR1</span></span><br></pre></td></tr></table></figure><h4 id="sysctls"><a href="#sysctls" class="headerlink" title="sysctls"></a>sysctls</h4><p>配置容器内核参数。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sysctls:</span></span><br><span class="line">  <span class="string">net.core.somaxconn:</span> <span class="number">1024</span></span><br><span class="line">  <span class="string">net.ipv4.tcp_syncookies:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sysctls:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">net.core.somaxconn=1024</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">net.ipv4.tcp_syncookies=0</span></span><br></pre></td></tr></table></figure><h4 id="ulimits"><a href="#ulimits" class="headerlink" title="ulimits"></a>ulimits</h4><p>指定容器的 ulimits 限制值。</p><p>例如，指定最大进程数为 65535，指定文件句柄数为 20000（软限制，应用可以随时修改，不能超过硬限制） 和 40000（系统硬限制，只能 root 用户提高）。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ulimits:</span></span><br><span class="line"><span class="attr">  nproc:</span> <span class="number">65535</span></span><br><span class="line"><span class="attr">  nofile:</span></span><br><span class="line"><span class="attr">    soft:</span> <span class="number">20000</span></span><br><span class="line"><span class="attr">    hard:</span> <span class="number">40000</span></span><br></pre></td></tr></table></figure><h4 id="volumes"><a href="#volumes" class="headerlink" title="volumes"></a>volumes</h4><p>数据卷所挂载路径设置。可以设置宿主机路径 （HOST:CONTAINER） 或加上访问模式 （HOST:CONTAINER:ro）。</p><p>该指令中路径支持相对路径。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">volumes:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">/var/lib/mysql</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">cache/:/tmp/cache</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">~/configs:/etc/configs/:ro</span></span><br></pre></td></tr></table></figure><p>其它指令<br>此外，还有包括 domainname, entrypoint, hostname, ipc, mac_address, privileged, read_only, shm_size, restart, stdin_open, tty, user, working_dir 等指令，基本跟 docker run 中对应参数的功能一致。</p><p>指定服务容器启动后执行的入口文件。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">entrypoint:</span> <span class="string">/code/entrypoint.sh</span></span><br></pre></td></tr></table></figure><p>指定容器中运行应用的用户名。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">user:</span> <span class="string">nginx</span></span><br></pre></td></tr></table></figure><p>指定容器中工作目录。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">working_dir:</span> <span class="string">/code</span></span><br></pre></td></tr></table></figure><p>指定容器中搜索域名、主机名、mac 地址等。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">domainname:</span> <span class="string">your_website.com</span></span><br><span class="line"><span class="attr">hostname:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">mac_address:</span> <span class="number">08</span><span class="bullet">-00</span><span class="bullet">-27</span><span class="bullet">-00</span><span class="bullet">-0</span><span class="string">C-0A</span></span><br></pre></td></tr></table></figure><p>允许容器中运行一些特权命令。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">privileged:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>指定容器退出后的重启策略为始终重启。该命令对保持服务始终运行十分有效，在生产环境中推荐配置为 always 或者 unless-stopped。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure><p>以只读模式挂载容器的 root 文件系统，意味着不能对容器内容进行修改。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">read_only:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>打开标准输入，可以接受外部输入。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stdin_open:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>模拟一个伪终端。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tty:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="读取变量"><a href="#读取变量" class="headerlink" title="读取变量"></a>读取变量</h4><p>Compose 模板文件支持动态读取主机的系统环境变量和当前目录下的 .env 文件中的变量。</p><p>例如，下面的 Compose 文件将从运行它的环境中读取变量 ${MONGO_VERSION} 的值，并写入执行的指令中。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">db:</span></span><br><span class="line"><span class="attr">  image:</span> <span class="string">"mongo:$&#123;MONGO_VERSION&#125;"</span></span><br></pre></td></tr></table></figure><p>如果执行 MONGO_VERSION=3.2 docker-compose up 则会启动一个 mongo:3.2 镜像的容器；如果执行 MONGO_VERSION=2.8 docker-compose up 则会启动一个 mongo:2.8 镜像的容器。</p><p>若当前目录存在 .env 文件，执行 docker-compose 命令时将从该文件中读取变量。</p><p>在当前目录新建 .env 文件并写入以下内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 支持 # 号注释</span></span><br><span class="line">MONGO_VERSION=3.6</span><br></pre></td></tr></table></figure><p>执行 docker-compose up 则会启动一个 mongo:3.6 镜像的容器。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;Compose 项目是 Docker 官方的开源项目，负责实现对 Docker 容器集群的快速编排。Compose 定位是 「定义和运行多个 Docker 容器化应用（Defining and running multi-container Docker applications）」，其前身是开源项目 Fig。&lt;/p&gt;
&lt;p&gt;在日常工作中，经常会碰到需要多个容器相互配合来完成某项任务的情况。例如要实现一个 Web 项目，除了 Web 服务容器本身，往往还需要再加上缓存服务容器，已经后端的数据库服务容器。Compose 恰好满足了这样的需求。它允许用户通过一个单独的 docker-compose.yml 模板文件（YAML 格式）来定义一组相关联的应用容器为一个项目（project）。&lt;/p&gt;
&lt;p&gt;Compose 中有两个重要的概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务 (service)：一个应用的容器，实际上可以包括若干运行相同镜像的容器实例。&lt;/li&gt;
&lt;li&gt;项目 (project)：由一组关联的应用容器组成的一个完整业务单元，在 docker-compose.yml 文件中定义。
    
    </summary>
    
    
      <category term="docker" scheme="https://istone.dev/tags/docker/"/>
    
      <category term="container" scheme="https://istone.dev/tags/container/"/>
    
      <category term="compose" scheme="https://istone.dev/tags/compose/"/>
    
  </entry>
  
  <entry>
    <title>Docker 存储</title>
    <link href="https://istone.dev/2018/09/10/Docker-Volume/"/>
    <id>https://istone.dev/2018/09/10/Docker-Volume/</id>
    <published>2018-09-10T03:59:34.000Z</published>
    <updated>2019-06-27T02:24:18.313Z</updated>
    
    <content type="html"><![CDATA[<p>Docker 为容器提供了两种存放数据的资源：</p><ul><li>由 Storage Driver 管理的镜像层和容器层</li><li>Data Volume</li></ul><h3 id="Storage-Driver"><a href="#Storage-Driver" class="headerlink" title="Storage Driver"></a>Storage Driver</h3><p><img src="/imgs/201809/docker_image_layer.png" alt="镜像分层结构"></p><p>容器由最上面一个可写的容器层，以及若干只读的镜像层组成，容器的数据就存放在这些层中。这样的分层结构最大的特性是 Copy-on-Write：</p><ul><li>新数据会直接存放在最上面的容器层</li><li>修改现有数据会先从镜像层将数据复制到容器层，修改后的数据直接保存在容器层中，镜像层保持不变</li><li>如果多个层中有命名相同的文件，用户只能看到最上面那层中的文件</li></ul><p>分层结构使镜像和容器的创建、共享以及分发变得非常高效，而这些都要归功于 Docker storage driver。正是 storage driver 实现了多层数据的堆叠并为用户提供一个单一的合并之后的统一视图。</p><p>Docker 支持多种 storage driver，有 AUFS、Device Mapper、Btrfs、OverlayFS、VFS 和 ZFS。它们都能实现分层的架构，同时又有各自的特性。对于 Docker 用户来说，具体选择使用哪个 storage driver 是一个难题，不过 Docker 官方给出了一个简单的答案：优先使用 Linux 发行版默认的 storage driver。Docker 安装时会根据当前系统的配置选择默认的 driver。默认 driver 具有最好的稳定性，因为默认 driver 在发行版上经过了严格的测试。</p><p><strong>Docker CE on Ubuntu</strong> aufs, devicemapper, overlay2 (Ubuntu 14.04.4 or later, 16.04 or later), overlay, zfs, vfs<br><strong>Docker CE on Debian</strong> aufs, devicemapper, overlay2 (Debian Stretch), overlay, vfs<br><strong>Docker CE on CentOS</strong> devicemapper, vfs<br><strong>Docker CE on Fedora</strong> devicemapper, overlay2 (Fedora 26 or later, experimental), overlay (experimental), vfs</p><a id="more"></a><p>在CentOS 7 中默认选择使用 devicemapper。</p><p>对于某些容器，直接将数据放在由 storage driver 维护的层中是很好的选择，比如那些无状态的应用。无状态意味着容器没有需要持久化的数据，随时可以从镜像直接创建。</p><p>比如 busybox，它是一个工具箱，我们启动 busybox 是为了执行诸如 wget，ping 之类的命令，不需要保存数据供以后使用，使用完直接退出，容器删除时存放在容器层中的工作数据也一起被删除，这没问题，下次再启动新容器即可。</p><p>但对于另一类应用这种方式就不合适了，它们有持久化数据的需求，容器启动时需要加载已有的数据，容器销毁时希望保留产生的新数据，也就是说，这类容器是有状态的。这就要用到 Docker 的另一种存储机制：Data Volume。</p><h3 id="Data-Volume"><a href="#Data-Volume" class="headerlink" title="Data Volume"></a>Data Volume</h3><p>Data Volume 本质上是 Docker Host 文件系统中的目录或文件，能够直接被 mount 到容器的文件系统中。Data Volume 有以下特点：</p><ul><li>Data Volume 是目录或文件，而非没有格式化的磁盘（块设备）</li><li>容器可以读写 volume 中的数据</li><li>volume 数据可以被永久的保存，即使使用它的容器已经销毁</li></ul><p>在具体的使用上，docker 提供了两种类型的 volume：</p><ul><li>bind mount</li><li>docker managed volume</li></ul><p><img src="/imgs/201809/docker_volume.png" alt="容器volume"></p><h4 id="bind-mount"><a href="#bind-mount" class="headerlink" title="bind mount"></a>bind mount</h4><p>bind mount 是将 host 上已存在的目录或文件 mount 到容器，容器不会将挂载目录下已存在的文件拷贝到宿主机目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -tid -name apache -p 80:80 -v /data1/code:/usr/<span class="built_in">local</span>/apache2/htdocs httpd</span><br></pre></td></tr></table></figure><p>通过 -v 将其 mount 到 httpd 容器，-v 的格式为 <host path>:<container path>。/usr/local/apache2/htdocs 就是 apache server 存放静态文件的地方。由于 /usr/local/apache2/htdocs 已经存在，原有数据会被隐藏起来，取而代之的是 host /data1/code/ 中的数据，这与 linux mount 命令的行为是一致的。另外，bind mount 时还可以指定数据的读写权限，默认是可读可写，可以通过 –v /data1/code:/usr/local/apache2/htdocs:ro，设置了只读权限，在容器中是无法对 bind mount 数据进行修改的。只有 host 有权修改数据，提高了安全性。</container></host></p><h4 id="docker-managed-volume"><a href="#docker-managed-volume" class="headerlink" title="docker managed volume"></a>docker managed volume</h4><p>Docker managed volume 不需要指定 mount 源，指明 mount point 就行了。容器会将挂载目录下已存在的文件拷贝到宿主机目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -tid --name apache2 -p 8080:80 -v /usr/<span class="built_in">local</span>/apache2/htdocs httpd</span><br></pre></td></tr></table></figure><p>docker managed volume 的创建过程：</p><ul><li>容器启动时，简单的告诉 docker “我需要一个 volume 存放数据，帮我 mount 到目录 /usr/local/apache2/htdocs”</li><li>docker 在 /var/lib/docker/volumes 中生成一个随机目录作为 mount 源</li><li>如果 /usr/local/apache2/htdocs 已经存在，则将数据复制到 mount 源</li><li>将 volume mount 到 /usr/local/apache2/htdocs</li></ul><p>我们可以通过 docker inspect 查看容器挂载的 volume，也可以用 docker volume inspect命令查看。docker volume ls 只能列出Docker managed volume。</p><h3 id="数据共享"><a href="#数据共享" class="headerlink" title="数据共享"></a>数据共享</h3><p>数据共享是 volume 的关键特性，通过 volume 可以在容器与 host 之间，容器与容器之间共享数据。</p><h4 id="容器与-host-共享数据"><a href="#容器与-host-共享数据" class="headerlink" title="容器与 host 共享数据"></a>容器与 host 共享数据</h4><p>通过将宿主机目录挂载到容器，实现在容器与 host 之间共享数据。也可以通过 docker cp 在容器和 host 之间拷贝数据。</p><h4 id="容器之间共享数据"><a href="#容器之间共享数据" class="headerlink" title="容器之间共享数据"></a>容器之间共享数据</h4><h5 id="多个容器挂载相同的宿主机目录"><a href="#多个容器挂载相同的宿主机目录" class="headerlink" title="多个容器挂载相同的宿主机目录"></a>多个容器挂载相同的宿主机目录</h5><p><img src="/imgs/201809/docker_volume_share_1.png" alt="容器volume共享"></p><h5 id="用-volume-container-共享数据"><a href="#用-volume-container-共享数据" class="headerlink" title="用 volume container 共享数据"></a>用 volume container 共享数据</h5><p>volume container 是专门为其他容器提供 volume 的容器。它提供的卷可以是 bind mount，也可以是 docker managed volume。首先通过docker create 创建 volume container，然后其他容器可以通过 –volumes-from 使用这个 volume container。</p><p><img src="/imgs/201809/docker_volume_share_2.png" alt="容器volume共享"></p><h3 id="volume-生命周期管理"><a href="#volume-生命周期管理" class="headerlink" title="volume 生命周期管理"></a>volume 生命周期管理</h3><p>Data Volume 中存放的是重要的应用数据，如何管理 volume 对应用至关重要。</p><p>docker 不会销毁 bind mount。对于 docker managed volume，在执行 docker rm 删除容器时可以带上 -v 参数，docker 会将容器使用到的 volume 一并删除，但前提是没有其他容器 mount 该 volume，目的是保护数据，非常合理。</p><p>如果删除容器时没有带 -v 呢？这样就会产生孤儿 volume，好在 docker 提供了 volume 子命令可以对 docker managed volume 进行维护。。对于这样的孤儿 volume，可以用 docker volume rm 删除。如果想批量删除孤儿 volume，可以执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume rm $(docker volume ls -q)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Docker 为容器提供了两种存放数据的资源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由 Storage Driver 管理的镜像层和容器层&lt;/li&gt;
&lt;li&gt;Data Volume&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Storage-Driver&quot;&gt;&lt;a href=&quot;#Storage-Driver&quot; class=&quot;headerlink&quot; title=&quot;Storage Driver&quot;&gt;&lt;/a&gt;Storage Driver&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/imgs/201809/docker_image_layer.png&quot; alt=&quot;镜像分层结构&quot;&gt;&lt;/p&gt;
&lt;p&gt;容器由最上面一个可写的容器层，以及若干只读的镜像层组成，容器的数据就存放在这些层中。这样的分层结构最大的特性是 Copy-on-Write：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新数据会直接存放在最上面的容器层&lt;/li&gt;
&lt;li&gt;修改现有数据会先从镜像层将数据复制到容器层，修改后的数据直接保存在容器层中，镜像层保持不变&lt;/li&gt;
&lt;li&gt;如果多个层中有命名相同的文件，用户只能看到最上面那层中的文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;分层结构使镜像和容器的创建、共享以及分发变得非常高效，而这些都要归功于 Docker storage driver。正是 storage driver 实现了多层数据的堆叠并为用户提供一个单一的合并之后的统一视图。&lt;/p&gt;
&lt;p&gt;Docker 支持多种 storage driver，有 AUFS、Device Mapper、Btrfs、OverlayFS、VFS 和 ZFS。它们都能实现分层的架构，同时又有各自的特性。对于 Docker 用户来说，具体选择使用哪个 storage driver 是一个难题，不过 Docker 官方给出了一个简单的答案：优先使用 Linux 发行版默认的 storage driver。Docker 安装时会根据当前系统的配置选择默认的 driver。默认 driver 具有最好的稳定性，因为默认 driver 在发行版上经过了严格的测试。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Docker CE on Ubuntu&lt;/strong&gt; aufs, devicemapper, overlay2 (Ubuntu 14.04.4 or later, 16.04 or later), overlay, zfs, vfs&lt;br&gt;&lt;strong&gt;Docker CE on Debian&lt;/strong&gt; aufs, devicemapper, overlay2 (Debian Stretch), overlay, vfs&lt;br&gt;&lt;strong&gt;Docker CE on CentOS&lt;/strong&gt; devicemapper, vfs&lt;br&gt;&lt;strong&gt;Docker CE on Fedora&lt;/strong&gt; devicemapper, overlay2 (Fedora 26 or later, experimental), overlay (experimental), vfs&lt;/p&gt;
    
    </summary>
    
    
      <category term="docker" scheme="https://istone.dev/tags/docker/"/>
    
      <category term="container" scheme="https://istone.dev/tags/container/"/>
    
      <category term="volume" scheme="https://istone.dev/tags/volume/"/>
    
  </entry>
  
  <entry>
    <title>Docker 网络</title>
    <link href="https://istone.dev/2018/07/02/Docker-Network/"/>
    <id>https://istone.dev/2018/07/02/Docker-Network/</id>
    <published>2018-07-02T06:05:45.000Z</published>
    <updated>2019-06-27T02:24:18.312Z</updated>
    
    <content type="html"><![CDATA[<h2 id="容器的三种本地网络"><a href="#容器的三种本地网络" class="headerlink" title="容器的三种本地网络"></a>容器的三种本地网络</h2><h3 id="none-网络"><a href="#none-网络" class="headerlink" title="none 网络"></a>none 网络</h3><p>故名思议，none 网络就是什么都没有的网络。挂在这个网络下的容器除了 lo，没有其他任何网卡。容器创建时，可以通过 --network=none 指定使用 none 网络。</p><p><img src="/imgs/201807/docker_network_none.png" alt="docker network none"></p><h3 id="host-网络"><a href="#host-网络" class="headerlink" title="host 网络"></a>host 网络</h3><p>连接到 host 网络的容器共享 Docker host 的网络栈，容器的网络配置与 host 完全一样。可以通过 --network=host 指定使用 host 网络。使用 host 网络，容器和宿主机共用 host 网络，当启动服务时应该避免端口冲突。</p><p><img src="/imgs/201807/docker_network_host.png" alt="docker network host"></p><h3 id="Bridge-网络"><a href="#Bridge-网络" class="headerlink" title="Bridge 网络"></a>Bridge 网络</h3><p>Docker 安装时会创建一个命名为 docker0 的 linux bridge。如果不指定--network，创建的容器默认都会挂到 docker0 上。</p><p><img src="/imgs/201807/docker_network_bridge.png" alt="docker network bridge"></p><a id="more"></a><p>Bridge 网络拓扑：<br>Docker Daemon启动后默认创建 docker0 网桥，起初 docker0 启动时网桥上没有任何端口，当启动容器后，docker0 网桥上也创建了一个端口，他跟容器内的 eth0 网卡形成一个 veth pair。</p><p><img src="/imgs/201807/docker_network_bridge_veth.png" alt="docker network bridge"></p><p>Docker 桥接网络拓扑图如下：</p><p><img src="/imgs/201807/docker_network_bridge_veth2.png" alt="docker network bridge"></p><h2 id="自定义容器网络"><a href="#自定义容器网络" class="headerlink" title="自定义容器网络"></a>自定义容器网络</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker network create --driver=bridge --subnet=172.88.0.0/16 net1</span><br><span class="line">docker run -tid --name box --network=net1 busybox</span><br></pre></td></tr></table></figure><p><img src="/imgs/201807/docker_network_create.png" alt="docker network create"></p><p>通过如上命令可以自定义网络，使用新建网络启动容器后，同样会创建一个 veth pair 与新网桥联通。</p><p>我想让box容器（自定义网络 net1）和httpd容器（默认网络 docker0）通信该怎么弄？</p><p>在 box 里 ping httpd 容器 ip 不通，这是因为 Docker 默认是隔离所有网络之间的通信的</p><p><img src="/imgs/201807/docker_network_isolation.png" alt="docker network isolation"></p><p>为了能够通信只需要给 box 容器添加 docker0 网络</p><p><img src="/imgs/201807/docker_network_connect.png" alt="docker network connect"></p><p>net1 与 docker0 网络拓扑：</p><p><img src="/imgs/201807/docker_network_bridge_to_bridge.png" alt="docker network"></p><h2 id="多主机网络"><a href="#多主机网络" class="headerlink" title="多主机网络"></a>多主机网络</h2><p>为了支持跨主机间的容器通信，Docker 支持多种跨主机网络。</p><p>Docker原生网络方案：</p><ul><li>overlay</li><li>macvlan</li></ul><p>第三方网络方案：</p><ul><li>Flannel</li><li>Weave</li><li>Calico</li></ul><h3 id="配置Overlay网络"><a href="#配置Overlay网络" class="headerlink" title="配置Overlay网络"></a>配置Overlay网络</h3><p>Docerk overlay 网络需要一个 key-value 数据库用于保存网络状态信息，包括 Network、Endpoint、IP 等。Consul、Etcd 和 ZooKeeper 都是 Docker 支持的 key-vlaue 软件，我们这里使用 Consul。</p><p>1、部署Consul</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8500:8500 -h consul --name consul progrium/consul -server -bootstrap</span><br></pre></td></tr></table></figure><p>2、接下来修改 host1 和 host2 的 docker daemon 的配置文件/etc/systemd/system/docker.service.d/10-machine.conf<br>–registry-mirror=<a href="https://m9sl8pb5.mirror.aliyuncs.com" target="_blank" rel="noopener">https://m9sl8pb5.mirror.aliyuncs.com</a> –cluster-store=consul://192.168.115.20:8500 –cluster-advertise=ens3:2376<br>–cluster-store 指定 consul 的地址–cluster-advertise 告知 consul 自己的连接地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker.service</span><br></pre></td></tr></table></figure><p>3、创建 overlay 网络 ov_net1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network create -d overlay ov_net1</span><br></pre></td></tr></table></figure><p>4、在 host1 和 host2 上分别启动容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -tid --name box1 --network=ov_net1 busybox</span><br><span class="line">docker run -tid --name box2 --network=ov_net1 busybox</span><br></pre></td></tr></table></figure><p>5、联通性测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -ti box2 sh</span><br><span class="line">ping 10.0.0.2</span><br></pre></td></tr></table></figure><h3 id="Overlay网络连通性"><a href="#Overlay网络连通性" class="headerlink" title="Overlay网络连通性"></a>Overlay网络连通性</h3><p>docker 会为每个 overlay 网络创建一个独立的 network namespace，其中会有一个 linux bridge br0，endpoint 还是由 veth pair 实现，一端连接到容器中（即 eth0），另一端连接到 namespace 的 br0 上。</p><p>br0 除了连接所有的 endpoint，还会连接一个 vxlan 设备，用于与其他 host 建立 vxlan tunnel。容器之间的数据就是通过这个 tunnel 通信的。逻辑网络拓扑结构如图所示：</p><p><img src="/imgs/201807/docker_network_overlay.png" alt="docker network"></p><h2 id="容器的通信机制"><a href="#容器的通信机制" class="headerlink" title="容器的通信机制"></a>容器的通信机制</h2><h3 id="容器访问外部世界"><a href="#容器访问外部世界" class="headerlink" title="容器访问外部世界"></a>容器访问外部世界</h3><p>a、busybox 发送 ping 包：172.17.0.2 &gt; <a href="http://www.bing.com" target="_blank" rel="noopener">www.bing.com</a></p><p>b、docker0 收到包，发现是发送到外网的，交给 NAT 处理</p><p>c、NAT 将源地址换成 enp0s3 的 IP：10.0.2.15 &gt; <a href="http://www.bing.com" target="_blank" rel="noopener">www.bing.com</a></p><p>d、ping 包从 enp0s3 发送出去，到达 <a href="http://www.bing.com" target="_blank" rel="noopener">www.bing.com</a></p><h3 id="外部世界访问容器"><a href="#外部世界访问容器" class="headerlink" title="外部世界访问容器"></a>外部世界访问容器</h3><p>外部网络通过端口映射访问到容器服务，将容器的80端口映射到宿主机的32773端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -tid --name httpd -p 32773:80 httpd</span><br></pre></td></tr></table></figure><p>a、docker-proxy 监听 host 的 32773 端口</p><p>b、当 curl 访问 10.0.2.15:32773 时，docker-proxy 转发给容器 172.17.0.2:80</p><p>c、httpd 容器响应请求并返回结果</p><p><img src="/imgs/201807/docker_network_access.png" alt="docker network"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;容器的三种本地网络&quot;&gt;&lt;a href=&quot;#容器的三种本地网络&quot; class=&quot;headerlink&quot; title=&quot;容器的三种本地网络&quot;&gt;&lt;/a&gt;容器的三种本地网络&lt;/h2&gt;&lt;h3 id=&quot;none-网络&quot;&gt;&lt;a href=&quot;#none-网络&quot; class=&quot;headerlink&quot; title=&quot;none 网络&quot;&gt;&lt;/a&gt;none 网络&lt;/h3&gt;&lt;p&gt;故名思议，none 网络就是什么都没有的网络。挂在这个网络下的容器除了 lo，没有其他任何网卡。容器创建时，可以通过 --network=none 指定使用 none 网络。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/201807/docker_network_none.png&quot; alt=&quot;docker network none&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;host-网络&quot;&gt;&lt;a href=&quot;#host-网络&quot; class=&quot;headerlink&quot; title=&quot;host 网络&quot;&gt;&lt;/a&gt;host 网络&lt;/h3&gt;&lt;p&gt;连接到 host 网络的容器共享 Docker host 的网络栈，容器的网络配置与 host 完全一样。可以通过 --network=host 指定使用 host 网络。使用 host 网络，容器和宿主机共用 host 网络，当启动服务时应该避免端口冲突。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/201807/docker_network_host.png&quot; alt=&quot;docker network host&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Bridge-网络&quot;&gt;&lt;a href=&quot;#Bridge-网络&quot; class=&quot;headerlink&quot; title=&quot;Bridge 网络&quot;&gt;&lt;/a&gt;Bridge 网络&lt;/h3&gt;&lt;p&gt;Docker 安装时会创建一个命名为 docker0 的 linux bridge。如果不指定--network，创建的容器默认都会挂到 docker0 上。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/201807/docker_network_bridge.png&quot; alt=&quot;docker network bridge&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="docker" scheme="https://istone.dev/tags/docker/"/>
    
      <category term="container" scheme="https://istone.dev/tags/container/"/>
    
      <category term="network" scheme="https://istone.dev/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>Docker 生命周期管理</title>
    <link href="https://istone.dev/2018/06/22/Run-Docker/"/>
    <id>https://istone.dev/2018/06/22/Run-Docker/</id>
    <published>2018-06-22T03:13:58.000Z</published>
    <updated>2019-06-27T02:24:18.317Z</updated>
    
    <content type="html"><![CDATA[<h2 id="运行容器"><a href="#运行容器" class="headerlink" title="运行容器"></a>运行容器</h2><p>docker run 是启动容器的方法，容器启动后返回的是 “长ID”，我们可以通过这个长ID去访问这个容器，也可以通过启动时指定的名字访问这个容器。docker ps 能够看到容器的“短ID”，通过短ID同样可以访问这个容器，甚至只要能够唯一标识这个容器也可使用更短的ID。</p><p><img src="/imgs/201806/docker_run.jpg" alt="docker run"></p><p>-d 指定容器以后台方式运行；–restart 指定容器的重启策略，默认值no，容器退出时不要重启，on-failure[:max-retries] 只在容器以非0状态码退出时重启。max-retries可以指定尝试重启容器的次数；always 不管退出状态码是什么始终重启容器。当指定容器退出后，docker daemon将无限次数地重启容器。–name 指定容器的名称。</p><p>容器的生命周期依赖于启动时执行的命令，只要该命令不结束，容器也就不会退出。理解了这个原理，我们就可以通过执行一个长期运行的命令来保持容器的运行状态。</p><a id="more"></a><h2 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h2><p>我们经常需要进到容器里去做一些工作，比如查看日志、调试、启动其他进程等。有两种方法进入容器：attach 和 exec。</p><h3 id="docker-attach"><a href="#docker-attach" class="headerlink" title="docker attach"></a>docker attach</h3><p>通过 docker attach 可以 attach 到容器启动命令的终端，可通过 Ctrl+p 然后 Ctrl+q 组合键退出 attach 终端。</p><h3 id="docker-exec"><a href="#docker-exec" class="headerlink" title="docker exec"></a>docker exec</h3><p>通过 docker exec 进入相同的容器。docker exec -ti <container id> bash|sh 是执行 exec 最常用的方式。-ti 以交互模式打开 pseudo-TTY，执行 bash，其结果就是打开了一个 bash 终端。</container></p><p><img src="/imgs/201806/docker_attach_exec.jpg" alt="docker exec"></p><h3 id="attach-VS-exec"><a href="#attach-VS-exec" class="headerlink" title="attach VS exec"></a>attach VS exec</h3><p>attach 与 exec 主要区别如下:</p><ul><li>attach 直接进入容器 启动命令 的终端，不会启动新的进程。</li><li>exec 则是在容器中打开新的终端，并且可以启动新的进程。</li></ul><h2 id="容器的常用操作"><a href="#容器的常用操作" class="headerlink" title="容器的常用操作"></a>容器的常用操作</h2><p><img src="/imgs/201806/docker_cmd.jpg" alt="docker cmd"></p><h3 id="stop-start-restart-kill-容器"><a href="#stop-start-restart-kill-容器" class="headerlink" title="stop/start/restart|kill 容器"></a>stop/start/restart|kill 容器</h3><p>启动、停止、重启、杀死容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start|stop|restart|<span class="built_in">kill</span> [容器名|容器ID]</span><br></pre></td></tr></table></figure><h3 id="pause-unpause-容器"><a href="#pause-unpause-容器" class="headerlink" title="pause/unpause 容器"></a>pause/unpause 容器</h3><p>有时我们只是希望暂时让容器暂停工作一段时间，比如要对容器的文件系统打个快照，这时可以执行 docker pause。</p><p>挂起、唤醒容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pause/unpause [容器名|容器ID]</span><br></pre></td></tr></table></figure><h3 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f [容器名|容器ID]</span><br></pre></td></tr></table></figure><p>-f 参数可以强制删除运行中的容器。</p><p>可以用如下命令删除所有已退出的容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm $(docker ps -a -q -f status=exited)</span><br></pre></td></tr></table></figure><p>可以用如下命令强制删除所有容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f $(docker ps -a -q)</span><br></pre></td></tr></table></figure><blockquote><p>注意：docker rm 是删除容器，而 docker rmi 是删除镜像。</p></blockquote><h2 id="容器的生命周期"><a href="#容器的生命周期" class="headerlink" title="容器的生命周期"></a>容器的生命周期</h2><p>对容器的生命周期有了大致的理解，下面这张状态机很好地总结了容器各种状态之间是如何转换的。容器有五种状态：已创建、运行中、已挂起、已停止、已销毁，我们可以通过执行命令让docker在这五种状态间转换。</p><p><img src="/imgs/201806/docker_run_stats.png" alt="docker 状态"></p><p>docker run 是docker pull（如果镜像不存在）、docker create、docker start的复合命令。</p><h2 id="容器资源限制"><a href="#容器资源限制" class="headerlink" title="容器资源限制"></a>容器资源限制</h2><h3 id="限制内存资源"><a href="#限制内存资源" class="headerlink" title="限制内存资源"></a>限制内存资源</h3><p>与操作系统类似，容器可使用的内存包括两部分：物理内存和 swap。 Docker 通过下面两组参数来控制容器内存的使用量。</p><ul><li>-m 或 –memory：设置内存的使用限额，例如 100M, 2G。</li><li>–memory-swap：设置 <strong>内存+swap</strong> 的使用限额。</li></ul><p>当我们执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -m 200M --memory-swap=300M ubuntu</span><br></pre></td></tr></table></figure><p>其含义是允许该容器最多使用 200M 的内存和 100M 的 swap。默认情况下，上面两组参数为 -1，即对容器内存和 swap 的使用没有限制。如果在启动容器时只指定 -m 而不指定 –memory-swap，那么 –memory-swap 默认为 -m 的两倍。</p><p>内存限额测试：<br>docker run -it -m 300M progrium/stress –vm 1 –vm-bytes 280M  未超过限额，容器启动成功</p><p><img src="/imgs/201806/docker_mem_success.jpg" alt="docker mem"></p><p>docker run -it -m 300M progrium/stress –vm 1 –vm-bytes 320M  超过限额，容器失败退出</p><p><img src="/imgs/201806/docker_mem_fail.jpg" alt="docker mem"></p><h3 id="限制CPU资源"><a href="#限制CPU资源" class="headerlink" title="限制CPU资源"></a>限制CPU资源</h3><p>Docker 可以通过 -c 或 –cpu-shares 设置容器使用 CPU 的权重。如果不指定，默认值为 1024。</p><p>与内存限额不同，通过 -c 设置的 cpu share 并不是 CPU 资源的绝对数量，而是一个相对的权重值。某个容器最终能分配到的 CPU 资源取决于它的 cpu share 占所有容器 cpu share 总和的比例。</p><p>CPU限额测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动cpu_a，--cpu-shares为1024</span></span><br><span class="line"><span class="comment"># --cpu 用来设置工作线程的数量，宿主机是4核CPU，设置为4表示使用所有CPU</span></span><br><span class="line">docker run --name cpu_a -it -c 1024 -d progrium/stress --cpu 4</span><br><span class="line"><span class="comment"># 启动cpu_b，cpu-shares为512</span></span><br><span class="line"><span class="comment"># --cpu 用来设置工作线程的数量，宿主机是4核CPU，设置为4表示使用所有CPU</span></span><br><span class="line">docker run --name cpu_b -it -c 512 -d progrium/stress --cpu 4</span><br></pre></td></tr></table></figure><p><img src="/imgs/201806/docker_cpu.jpg" alt="docker cpu"><br>CPU资源使用对比：<br><img src="/imgs/201806/docker_stats.jpg" alt="docker cpu stats"></p><p>当CPU资源紧张时，–cpu-shares设置为1024的容器占用CPU的时间大约是设置为512的容器的<strong>两倍</strong>。</p><h3 id="限制磁盘IO"><a href="#限制磁盘IO" class="headerlink" title="限制磁盘IO"></a>限制磁盘IO</h3><p>Block IO 是另一种可以限制容器使用的资源。Block IO 指的是磁盘的读写，docker 可通过设置权重、限制 bps 和 iops 的方式控制容器读写磁盘的带宽。</p><blockquote><p>注意：目前 Block IO 限额只对 direct IO（不使用文件缓存）有效。</p></blockquote><h4 id="block-IO-权重"><a href="#block-IO-权重" class="headerlink" title="block IO 权重"></a>block IO 权重</h4><p>默认情况下，所有容器能平等地读写磁盘，可以通过设置 –blkio-weight 参数来改变容器 block IO 的优先级。</p><p>–blkio-weight 与 –cpu-shares 类似，设置的是相对权重值，默认为 500。在下面的例子中，blockio_a 读写磁盘的带宽是 blockio_b 的两倍。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name blockio_a --blkio-weight 600 ubuntu</span><br><span class="line">docker run -it --name blockio_b --blkio-weight 300 ubuntu</span><br></pre></td></tr></table></figure><h4 id="限制-bps-和-iops"><a href="#限制-bps-和-iops" class="headerlink" title="限制 bps 和 iops"></a>限制 bps 和 iops</h4><p>可通过以下参数控制容器的 bps 和 iops：</p><ul><li>–device-read-bps，限制读某个设备的 bps</li><li>–device-write-bps，限制写某个设备的 bps</li><li>–device-read-iops，限制读某个设备的 iops</li><li>–device-write-iops，限制写某个设备的 iops</li></ul><p>磁盘IO限额测试：</p><p><img src="/imgs/201806/docker_io.png" alt="docker IO"></p><p>限制容器写 /dev/vda 的速率为 30 MB/s，通过 dd 测试在容器中写磁盘的速度。因为容器的文件系统是在 host /dev/vda 上的，在容器中写文件相当于对 host /dev/vda 进行写操作。另外，oflag=direct 指定用 direct IO 方式写文件，这样 –device-write-bps 才能生效。当去掉oflag=direct后–device-write-bps设置并没有生效，磁盘写入速度达到了 1.4 GB/s。</p><h2 id="容器底层实现"><a href="#容器底层实现" class="headerlink" title="容器底层实现"></a>容器底层实现</h2><p>cgroup实现资源限额：</p><ul><li>通过 cgroup 可以设置进程使用 CPU、内存 和 IO 资源的限额</li><li>–cpu-shares、-m、–device-write-bps 实际上就是在配置 cgroup</li><li>cgroup配置目录：/sys/fs/cgroup/cpu|memory|blkio/docker</li></ul><p>namespace实现资源隔离：</p><ul><li>Mount     让容器看上去拥有整个文件系统</li><li>UTS          让容器有自己hostname</li><li>IPC           让容器有自己的共享内存和信号量</li><li>PID           让容器有自己的进程空间</li><li>Network  让容器有自己的网络空间</li><li>User         让容器有自己的用户</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;运行容器&quot;&gt;&lt;a href=&quot;#运行容器&quot; class=&quot;headerlink&quot; title=&quot;运行容器&quot;&gt;&lt;/a&gt;运行容器&lt;/h2&gt;&lt;p&gt;docker run 是启动容器的方法，容器启动后返回的是 “长ID”，我们可以通过这个长ID去访问这个容器，也可以通过启动时指定的名字访问这个容器。docker ps 能够看到容器的“短ID”，通过短ID同样可以访问这个容器，甚至只要能够唯一标识这个容器也可使用更短的ID。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/201806/docker_run.jpg&quot; alt=&quot;docker run&quot;&gt;&lt;/p&gt;
&lt;p&gt;-d 指定容器以后台方式运行；–restart 指定容器的重启策略，默认值no，容器退出时不要重启，on-failure[:max-retries] 只在容器以非0状态码退出时重启。max-retries可以指定尝试重启容器的次数；always 不管退出状态码是什么始终重启容器。当指定容器退出后，docker daemon将无限次数地重启容器。–name 指定容器的名称。&lt;/p&gt;
&lt;p&gt;容器的生命周期依赖于启动时执行的命令，只要该命令不结束，容器也就不会退出。理解了这个原理，我们就可以通过执行一个长期运行的命令来保持容器的运行状态。&lt;/p&gt;
    
    </summary>
    
    
      <category term="docker" scheme="https://istone.dev/tags/docker/"/>
    
      <category term="container" scheme="https://istone.dev/tags/container/"/>
    
  </entry>
  
  <entry>
    <title>Docker 镜像</title>
    <link href="https://istone.dev/2018/06/11/Docker-Images/"/>
    <id>https://istone.dev/2018/06/11/Docker-Images/</id>
    <published>2018-06-11T06:20:40.000Z</published>
    <updated>2019-06-27T02:24:18.310Z</updated>
    
    <content type="html"><![CDATA[<h2 id="最小镜像"><a href="#最小镜像" class="headerlink" title="最小镜像"></a>最小镜像</h2><p>镜像是 Docker 容器的基石，容器是镜像的实例，有了镜像才能启动容器。</p><p>镜像到底包含什么呢？容器为什么是轻量级的虚拟化呢？</p><p><img src="/imgs/201806/run_hello_world.png" alt="运行hello world"></p><p>首先从一个最小的镜像hello-world讲起，hello-world镜像仅有1.85kB，根据经验它肯定是不包括Linux的内核的，因为现在Linux内核大小至少100MB以上。</p><p>这么小的镜像，它能运行，是一个完整的镜像，他是怎么构建出来的呢？</p><p><img src="/imgs/201806/dockerfile_hello_world.png" alt="hello world dockerfile"></p><p>这个镜像的构建文件仅有三行，第一行从空白镜像开始构建，第二行拷贝二进制hello程序，第三行运行hello程序。</p><p>/hello 就是文件系统的全部内容，连最基本的 /bin，/usr, /lib, /dev 都没有。</p><a id="more"></a><h2 id="Base镜像"><a href="#Base镜像" class="headerlink" title="Base镜像"></a>Base镜像</h2><p>hello-world 虽然是一个完整的镜像，但它并没有什么实际用途。通常来说，我们希望镜像能提供一个基本的操作系统环境，用户可以根据需要安装和配置软件。这样的镜像我们称作 base 镜像。</p><p>什么是base镜像？Base镜像指不依赖其他镜像，从scratch构建，其他镜像可以以之为基础镜像进行扩展。</p><p>能称作 base 镜像的通常都是各种 Linux 发行版的 Docker 镜像，比如 Ubuntu, Debian, CentOS 等。</p><p><img src="/imgs/201806/centos_image.png" alt="CentOS Image"></p><p>一个CentOS镜像为什么还不到200MB？</p><p>Linux 操作系统由内核空间和用户空间组成。内核空间是 kernel，Linux 刚启动时会加载 bootfs 文件系统，之后 bootfs 会被卸载掉，rootfs被加载。用户空间的文件系统是 rootfs，包含我们熟悉的 /dev, /proc, /bin 等目录。</p><p><img src="/imgs/201806/linux_1.png" alt="Linux bootfs or rootfs"></p><p>不同 Linux 发行版的区别主要就是 rootfs。比如 Ubuntu 14.04 使用 upstart 管理服务，apt 管理软件包；而 CentOS 7 使用 systemd 和 yum。这些都是用户空间上的区别，Linux kernel 差别不大。</p><p><img src="/imgs/201806/linux_2.png" alt="容器共享Linux kernel"></p><p>对于 base 镜像来说，底层直接用 Host 的 kernel，自己只需要提供 rootfs 就行了。而对于一个精简的 OS，rootfs 可以很小，只需要包括最基本的命令、工具和程序库就可以了。</p><p>相比其他 Linux 发行版，CentOS 的 rootfs 已经算臃肿的了，alpine 还不到 10MB。</p><p>如下，在CentOS 7宿主机上运行 Ubuntu 16.04容器，看到容器的内核和宿主机的内核相同，容器复用了宿主机的内核：</p><p><img src="/imgs/201806/run_docker_ubuntu.png" alt="容器共用宿主机内核"></p><h2 id="镜像的分层结构"><a href="#镜像的分层结构" class="headerlink" title="镜像的分层结构"></a>镜像的分层结构</h2><p>如下图所示，镜像是分层存储：</p><p><img src="/imgs/201806/image_layer.jpg" alt="镜像分层"></p><p>为什么镜像采用分层结构呢？</p><p>最大的好处就是资源共享，比如有多个镜像从同一个base镜像构建而来，宿主机上只需要有一份base镜像就可以了，多个镜像共用同一个base镜像。</p><p>多个容器共用同一个base镜像，当某个容器修改配置时，其他容器也会修改吗？</p><p>答案是不会，因为最上面的容器层是可写的，下面的其他层（镜像层）都是只读，当需要修改下层的文件时，会先复制此文件到上面的容器层，然后再修改。容器层记录对镜像的修改，所有镜像层都是只读的，不会被容器修改，所以镜像可以被多个容器共享。</p><h2 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h2><p>Docker支持两种方法构建镜像，一是手动构建，二是通过Dockerfile构建。</p><ol><li>通过Docker commit命令手动构建镜像</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker run -ti --name ubuntu-vi ubuntu:16.04 bash</span></span><br><span class="line"><span class="comment"># apt-get update &amp;&amp; apt-get install -y vim</span></span><br><span class="line"><span class="comment"># 开启另一终端，提交构建的镜像</span></span><br><span class="line"><span class="comment"># docker commit ubuntu-vi ubuntu-with-vi</span></span><br></pre></td></tr></table></figure><ol start="2"><li>通过Dockerfile构建镜像</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编写Dockerfile</span></span><br><span class="line"><span class="comment"># vi Dockerfile</span></span><br><span class="line">FROM ubuntu:16.04</span><br><span class="line">RUN apt-get update &amp;&amp; apt-get install -y vim</span><br><span class="line">CMD [<span class="string">"/bin/bash"</span>]</span><br><span class="line"><span class="comment"># 构建镜像</span></span><br><span class="line"><span class="comment"># docker build -t ubuntu-with-vi-dockerfile</span></span><br></pre></td></tr></table></figure><p>Docker 并不建议用户通过这种方式构建镜像。原因如下：</p><ol><li>这是一种手工创建镜像的方式，容易出错，效率低且可重复性弱。比如要在 debian base 镜像中也加入 vi，还得重复前面的所有步骤。</li><li>使用者并不知道镜像是如何创建出来的，里面是否有恶意程序。也就是说无法对镜像进行审计，存在安全隐患。docker history 会显示镜像的构建历史，也就是 Dockerfile 的执行过程。手工创建镜像的方式无法获取history。</li></ol><p>通过两种方式构建好的镜像如下：</p><p><img src="/imgs/201806/docker_build.png" alt="镜像"></p><h2 id="Dockerfile常用指令"><a href="#Dockerfile常用指令" class="headerlink" title="Dockerfile常用指令"></a>Dockerfile常用指令</h2><p>Dockerfile常用指令如下：</p><blockquote><p>FROM 指定基础镜像<br>MAINTAINER 设置镜像维护者<br>COPY 将文件从构建上下文复制到镜像<br>ADD 同COPY，如果源文件是压缩文件自动解压缩<br>ENV 设置环境变量<br>EXPOSE 指定容器监听的端口<br>VOLUME 定义匿名卷<br>WORKDIR 为RUN、CMD、ENTRYPOINT等命令设置工作目录<br>RUN 在容器中运行指定命令<br>CMD 指定容器启动时运行的命令，可被替换<br>ENTRYPOINT指定容器启动时运行的命令<br>HEALTHCHECK 健康检查</p></blockquote><p>我们通常使用 RUN 指令安装应用和软件包，构建镜像。如果 Docker 镜像的用途是运行应用程序或服务，比如运行一个 MySQL，应该优先使用 Exec 格式的 ENTRYPOINT 指令。CMD 可为 ENTRYPOINT 提供额外的默认参数，同时可利用 docker run 命令行替换默认参数。<br>如果想为容器设置默认的启动命令，可使用 CMD 指令。用户可在 docker run 命令行中替换此默认命令。</p><h2 id="镜像仓库"><a href="#镜像仓库" class="headerlink" title="镜像仓库"></a>镜像仓库</h2><p>编译好的镜像只能在本地使用，如果想给其他人使用，最好是将容器上传到镜像仓库。容器仓库又分为公共仓库和私有仓库，hub.docker.com 是 Docker 公司提供的公有仓库，所有用户均可拉取公有仓库中的镜像，为了安全起见，通常公司会搭建自己的私有仓库。</p><h2 id="镜像生命周期管理"><a href="#镜像生命周期管理" class="headerlink" title="镜像生命周期管理"></a>镜像生命周期管理</h2><p>如下是容器镜像的生命周期，包括镜像的构建、镜像打标签、推送到镜像仓库、从镜像仓库拉取镜像、镜像导入、导出、镜像删除等操作：</p><p><img src="/imgs/201806/docker_registry.png" alt="镜像生命周期"></p><p>容器镜像常用命令小结：</p><blockquote><p>docker images    显示镜像列表<br>docker history   显示镜像构建历史<br>docker commit    从容器创建新镜像<br>docker build     从 Dockerfile 构建镜像<br>docker tag       给镜像打 tag<br>docker pull      从 registry 下载镜像<br>docker push      将镜像上传到 registry<br>docker rmi       删除 Docker host 中的镜像<br>docker search    搜索 Docker Hub 中的镜像</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;最小镜像&quot;&gt;&lt;a href=&quot;#最小镜像&quot; class=&quot;headerlink&quot; title=&quot;最小镜像&quot;&gt;&lt;/a&gt;最小镜像&lt;/h2&gt;&lt;p&gt;镜像是 Docker 容器的基石，容器是镜像的实例，有了镜像才能启动容器。&lt;/p&gt;
&lt;p&gt;镜像到底包含什么呢？容器为什么是轻量级的虚拟化呢？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/201806/run_hello_world.png&quot; alt=&quot;运行hello world&quot;&gt;&lt;/p&gt;
&lt;p&gt;首先从一个最小的镜像hello-world讲起，hello-world镜像仅有1.85kB，根据经验它肯定是不包括Linux的内核的，因为现在Linux内核大小至少100MB以上。&lt;/p&gt;
&lt;p&gt;这么小的镜像，它能运行，是一个完整的镜像，他是怎么构建出来的呢？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/201806/dockerfile_hello_world.png&quot; alt=&quot;hello world dockerfile&quot;&gt;&lt;/p&gt;
&lt;p&gt;这个镜像的构建文件仅有三行，第一行从空白镜像开始构建，第二行拷贝二进制hello程序，第三行运行hello程序。&lt;/p&gt;
&lt;p&gt;/hello 就是文件系统的全部内容，连最基本的 /bin，/usr, /lib, /dev 都没有。&lt;/p&gt;
    
    </summary>
    
    
      <category term="docker" scheme="https://istone.dev/tags/docker/"/>
    
      <category term="container" scheme="https://istone.dev/tags/container/"/>
    
      <category term="image" scheme="https://istone.dev/tags/image/"/>
    
  </entry>
  
  <entry>
    <title>Hello Docker</title>
    <link href="https://istone.dev/2018/06/07/Hello-Docker/"/>
    <id>https://istone.dev/2018/06/07/Hello-Docker/</id>
    <published>2018-06-07T10:41:33.000Z</published>
    <updated>2019-06-27T02:24:18.313Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境选择"><a href="#环境选择" class="headerlink" title="环境选择"></a>环境选择</h2><p>容器需要管理工具、运行时和操作系统，我们的选择如下：</p><ul><li><p>管理工具 - Docker Engine<br>因为 Docker 最流行使用最广泛</p></li><li><p>运行时 - runc<br>Docker 的默认 runtime</p></li><li><p>操作系统 - Ubuntu<br>选择大家熟悉的操作系统</p></li></ul><h2 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h2><p>我们将在 ubuntu 16.04 虚拟机中安装 Docker。因为安装过程需要访问 internet， 所以虚拟机必须能够上网。</p><p>Docker 支持几乎所有的 Linux 发行版，也支持 Mac 和 Windows。各操作系统的安装方法可以访问：<a href="https://docs.docker.com/install/" target="_blank" rel="noopener">https://docs.docker.com/install/</a></p><p>Docker 分为开源免费的 CE（Community Edition）版本和收费的 EE（Enterprise Edition）版本。下面我们将按照文档，通过以下步骤在 Ubuntu 16.04 上安装 Docker CE 版本。</p><a id="more"></a><h3 id="配置-Docker-的-apt-源"><a href="#配置-Docker-的-apt-源" class="headerlink" title="配置 Docker 的 apt 源"></a>配置 Docker 的 apt 源</h3><ol><li>安装包，允许 apt 命令 HTTPS 访问 Docker 源。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install \</span><br><span class="line">  apt-transport-https \</span><br><span class="line">  ca-certificates \</span><br><span class="line">  curl \</span><br><span class="line">  software-properties-common</span><br></pre></td></tr></table></figure><ol start="2"><li>添加 Docker 官方的 GPG</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><ol start="3"><li>将 Docker 的源添加到 /etc/apt/sources.list</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo add-apt-repository \</span><br><span class="line">  <span class="string">"deb [arch=amd64] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string">  <span class="variable">$(lsb_release -cs)</span> \</span></span><br><span class="line"><span class="string">  stable"</span></span><br></pre></td></tr></table></figure><h3 id="安装-Docker-1"><a href="#安装-Docker-1" class="headerlink" title="安装 Docker"></a>安装 Docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install docker-ce</span><br></pre></td></tr></table></figure><h2 id="运行第一个容器"><a href="#运行第一个容器" class="headerlink" title="运行第一个容器"></a>运行第一个容器</h2><p>环境就绪，马上运行第一个容器，执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker run -d -p 80:80 httpd</span><br></pre></td></tr></table></figure><p>其过程可以简单的描述为：</p><ul><li>从 Docker Hub 下载 httpd 镜像。镜像中已经安装好了 Apache HTTP Server</li><li>启动 httpd 容器，并将容器的 80 端口映射到 host 的 80 端口</li></ul><p>下面我们可以通过浏览器验证容器是否正常工作。在浏览器中输入 http://[your ubuntu host IP]</p><p><img src="/imgs/201806/httd_run.jpg" alt="成功访问"></p><p>可以访问容器的 http 服务了，第一个容器运行成功！我们轻轻松松就拥有了一个 WEB 服务器。随着学习的深入，会看到容器技术带给我们更多的价值。</p><h2 id="镜像下载加速"><a href="#镜像下载加速" class="headerlink" title="镜像下载加速"></a>镜像下载加速</h2><p>由于 Docker Hub 的服务器在国外，下载镜像会比较慢。我们可以去阿里巴巴或 DaoCloud 申请一个国内镜像地址。</p><p><img src="/imgs/201806/ali_registry_mirrors.jpg" alt="阿里镜像下载加速"></p><p>配置镜像下载加速并重启docker服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mkdir -p /etc/docker</span><br><span class="line">$ sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://xxxl8pb5.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">$ sudo systemctl daemon-reload</span><br><span class="line">$ sudo systemctl restart docker</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;环境选择&quot;&gt;&lt;a href=&quot;#环境选择&quot; class=&quot;headerlink&quot; title=&quot;环境选择&quot;&gt;&lt;/a&gt;环境选择&lt;/h2&gt;&lt;p&gt;容器需要管理工具、运行时和操作系统，我们的选择如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;管理工具 - Docker Engine&lt;br&gt;因为 Docker 最流行使用最广泛&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运行时 - runc&lt;br&gt;Docker 的默认 runtime&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;操作系统 - Ubuntu&lt;br&gt;选择大家熟悉的操作系统&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;安装-Docker&quot;&gt;&lt;a href=&quot;#安装-Docker&quot; class=&quot;headerlink&quot; title=&quot;安装 Docker&quot;&gt;&lt;/a&gt;安装 Docker&lt;/h2&gt;&lt;p&gt;我们将在 ubuntu 16.04 虚拟机中安装 Docker。因为安装过程需要访问 internet， 所以虚拟机必须能够上网。&lt;/p&gt;
&lt;p&gt;Docker 支持几乎所有的 Linux 发行版，也支持 Mac 和 Windows。各操作系统的安装方法可以访问：&lt;a href=&quot;https://docs.docker.com/install/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.docker.com/install/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Docker 分为开源免费的 CE（Community Edition）版本和收费的 EE（Enterprise Edition）版本。下面我们将按照文档，通过以下步骤在 Ubuntu 16.04 上安装 Docker CE 版本。&lt;/p&gt;
    
    </summary>
    
    
      <category term="docker" scheme="https://istone.dev/tags/docker/"/>
    
      <category term="container" scheme="https://istone.dev/tags/container/"/>
    
  </entry>
  
  <entry>
    <title>Openstack 使用</title>
    <link href="https://istone.dev/2014/09/10/openstack-use/"/>
    <id>https://istone.dev/2014/09/10/openstack-use/</id>
    <published>2014-09-10T03:00:00.000Z</published>
    <updated>2019-06-27T02:18:40.551Z</updated>
    
    <content type="html"><![CDATA[<p>OpenStack作为基础设施即服务（简称IaaS）资源的通用前端。首要任务是简化云的部署过程并为其带来良好的可扩展性。本文希望通过提供必要的指导信息，帮助大家利用OpenStack前端来设置及管理自己的私有云。</p><h2 id="导入虚拟机镜像"><a href="#导入虚拟机镜像" class="headerlink" title="导入虚拟机镜像"></a>导入虚拟机镜像</h2><p>如下列出了一下虚拟机镜像，可以在本地下载后通过Openstack界面导入。</p><p><a href="https://openstack.redhat.com/Image_resources" target="_blank" rel="noopener">https://openstack.redhat.com/Image_resources</a></p><p>也可以参考如下文档自己制作镜像：</p><p><a href="https://www.ibm.com/developerworks/community/wikis/home?lang=en#!/wiki/OpenStack/page/Creating%20qcow2%20CentOS%20Image%20for%20OpenStack" target="_blank" rel="noopener">https://www.ibm.com/developerworks/community/wikis/home?lang=en#!/wiki/OpenStack/page/Creating%20qcow2%20CentOS%20Image%20for%20OpenStack</a></p><p>导入镜像：</p><p>点击左侧的镜像 选项卡，可以看到已经导入的镜像，点击创建镜像 按钮创建镜像。</p><p><img src="/images/14-09-10/openstack_images.png" alt="Openstack镜像"></p><p>填写 镜像名称，镜像源选择—镜像文件，格式选择 QCOW2，勾选 公有 框（这样你上传得镜像其他人也能使用），然后点击创建镜像。</p><a id="more"></a><p><img src="/images/14-09-10/openstack_create_image.png" alt="Openstack创建镜像"></p><h2 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h2><p>点击左侧的 实例 选项卡，可以看到已创建的虚拟机，点击右上角的启动云主机创建 虚拟机。</p><p><img src="/images/14-09-10/openstack_create_vm_1.png" alt="Openstack创建虚拟机1"></p><p>在详情选项卡填写云主机名称、选择云主机的规格类型、云主机数量、云主机启动的源，本文从镜像启动，然后选择镜像名称，点击 访问 &amp; 安全选项卡。</p><p><img src="/images/14-09-10/openstack_create_vm_2.png" alt="Openstack创建虚拟机2"></p><p>选择一个秘钥对，如果没有需要点击加按钮进行创建，此秘钥对用于登陆创建的虚拟主机（在Openstack中虚拟主机的登陆一般不是通过用户名密码登陆的）。安全组选择default（用于设置防火墙规则）。</p><p><img src="/images/14-09-10/openstack_create_vm_3.png" alt="Openstack创建虚拟机3"></p><p>如下创建秘钥对：</p><p><img src="/images/14-09-10/openstack_create_vm_4.png" alt="Openstack创建虚拟机4"></p><p>点击 网络 选项卡，点击网络框中的+为虚拟机选择私有网络。</p><p><img src="/images/14-09-10/openstack_create_vm_5.png" alt="Openstack创建虚拟机5"></p><p>以上设置完成后点击运行，开始创建虚拟机。</p><p><img src="/images/14-09-10/openstack_create_vm_6.png" alt="Openstack创建虚拟机6"></p><p>点击更多，分配浮动IP地址，虚拟机只能通过浮动IP地址进行登陆。</p><p><img src="/images/14-09-10/openstack_create_vm_7.png" alt="Openstack创建虚拟机7"></p><h2 id="访问-amp-安全"><a href="#访问-amp-安全" class="headerlink" title="访问 &amp; 安全"></a>访问 &amp; 安全</h2><p>默认情况下，创建的虚拟机不能被ping 通和进行ssh 连接，需要修改默认安全规则。点击 管理规则。</p><p><img src="/images/14-09-10/openstack_access_1.png" alt="Openstack访问 &amp; 安全1"></p><p>然后点击添加规则。</p><p><img src="/images/14-09-10/openstack_access_2.png" alt="Openstack访问 &amp; 安全2"></p><p>如下添加ICMP规则，允许虚拟机被ping通。</p><p><img src="/images/14-09-10/openstack_access_3_icmp.png" alt="Openstack访问 &amp; 安全3"></p><p>添加SSH规则，允许虚拟机通过SSH客户端进行连接。</p><p><img src="/images/14-09-10/openstack_access_4_ssh.png" alt="Openstack访问 &amp; 安全4"></p><p>分配完浮动IP地址并设置好安全规则就可以登陆虚拟机了（必须在生成ssh key的机器上进行登陆）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@fuel ~]<span class="comment"># ssh centos@172.16.200.133</span></span><br><span class="line">[centos@vm-centos-7 ~]$ sudo su -</span><br><span class="line">[root@vm-centos-7 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="为虚拟机挂载数据盘"><a href="#为虚拟机挂载数据盘" class="headerlink" title="为虚拟机挂载数据盘"></a>为虚拟机挂载数据盘</h2><p>点击 左侧的 云硬盘 选项卡，点击 创建云硬盘 按钮，然后如下填写 创建云硬盘。</p><p><img src="/images/14-09-10/openstack_vdisk_1.png" alt="Openstack云硬盘1"></p><p>然后点击更多，选择 编辑挂载。</p><p><img src="/images/14-09-10/openstack_vdisk_2.png" alt="Openstack云硬盘2"></p><p>选择要连接到的虚拟机，然后连接数据盘。</p><p><img src="/images/14-09-10/openstack_vdisk_3.png" alt="Openstack云硬盘3"></p><p>登陆虚拟机，对已挂在的数据盘进行分区。</p><p><img src="/images/14-09-10/openstack_vdisk_4.png" alt="Openstack云硬盘4"></p><p><img src="/images/14-09-10/openstack_vdisk_5.png" alt="Openstack云硬盘5"></p><p>格式化数据盘并挂载。</p><p><img src="/images/14-09-10/openstack_vdisk_6.png" alt="Openstack云硬盘6"></p><p>将需要挂载的数据盘 写入/etc/fstab文件，以便开机自动挂载。</p><p><img src="/images/14-09-10/openstack_vdisk_7.png" alt="Openstack云硬盘7"></p><h2 id="为admin租户新增网段"><a href="#为admin租户新增网段" class="headerlink" title="为admin租户新增网段"></a>为admin租户新增网段</h2><p># 设置认证信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># cat creds-admin</span></span><br><span class="line"><span class="built_in">export</span> OS_TENANT_NAME=admin</span><br><span class="line"><span class="built_in">export</span> OS_USERNAME=admin</span><br><span class="line"><span class="built_in">export</span> OS_PASSWORD=admin</span><br><span class="line"><span class="built_in">export</span> OS_AUTH_URL=<span class="string">"http://172.16.200.2:5000/v2.0/“</span></span><br></pre></td></tr></table></figure><p># 使认证信息生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># . creds-admin</span></span><br></pre></td></tr></table></figure><p># 列出所有租户信息，admin的租户ID为：f51b22163f504dd6a6014f4700e9ee48</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># keystone tenant-list</span></span><br><span class="line">+----------------------------------+----------+---------+</span><br><span class="line">|                id                |   name   | enabled |</span><br><span class="line">+----------------------------------+----------+---------+</span><br><span class="line">| f51b22163f504dd6a6014f4700e9ee48 |  admin   |   True  |</span><br><span class="line">| 8dc964cb23414e1497a74db79ddb563f | services |   True  |</span><br><span class="line">+----------------------------------+----------+---------+</span><br></pre></td></tr></table></figure><p># 为admin租户添加网络net_admin，net_admin网络ID为：284d3f00-042b-41b2-bec4-f5bc7dcee037</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># neutron net-create --tenant-id f51b22163f504dd6a6014f4700e9ee48 net_admin</span></span><br><span class="line">Created a new network:</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| Field                     | Value                                |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| admin_state_up            | True                                 |</span><br><span class="line">| id                        | 284d3f00-042b-41b2-bec4-f5bc7dcee037 |</span><br><span class="line">| name                      | net_admin                            |</span><br><span class="line">| provider:network_type     | vlan                                 |</span><br><span class="line">| provider:physical_network | physnet2                             |</span><br><span class="line">| provider:segmentation_id  | 511                                  |</span><br><span class="line">| shared                    | False                                |</span><br><span class="line">| status                    | ACTIVE                               |</span><br><span class="line">| subnets                   |                                      |</span><br><span class="line">| tenant_id                 | f51b22163f504dd6a6014f4700e9ee48     |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br></pre></td></tr></table></figure><p># 为net_admin网络添加子网，子网ID：31896641-28e4-4983-b24d-f37348286a85</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># neutron subnet-create --name net_admin__subnet --tenant-id f51b22163f504dd6a6014f4700e9ee48 net_admin 192.168.101.0/24</span></span><br><span class="line">Created a new subnet:</span><br><span class="line">+------------------+------------------------------------------------------+</span><br><span class="line">| Field            | Value                                                |</span><br><span class="line">+------------------+------------------------------------------------------+</span><br><span class="line">| allocation_pools | &#123;<span class="string">"start"</span>: <span class="string">"192.168.101.2"</span>, <span class="string">"end"</span>: <span class="string">"192.168.101.254"</span>&#125; |</span><br><span class="line">| cidr             | 192.168.101.0/24                                     |</span><br><span class="line">| dns_nameservers  |                                                      |</span><br><span class="line">| enable_dhcp      | True                                                 |</span><br><span class="line">| gateway_ip       | 192.168.101.1                                        |</span><br><span class="line">| host_routes      |                                                      |</span><br><span class="line">| id               | 31896641-28e4-4983-b24d-f37348286a85                 |</span><br><span class="line">| ip_version       | 4                                                    |</span><br><span class="line">| name             | net_admin__subnet                                    |</span><br><span class="line">| network_id       | 284d3f00-042b-41b2-bec4-f5bc7dcee037                 |</span><br><span class="line">| tenant_id        | f51b22163f504dd6a6014f4700e9ee48                     |</span><br><span class="line">+------------------+------------------------------------------------------+</span><br></pre></td></tr></table></figure><p># 修改子网dns地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># neutron subnet-update 31896641-28e4-4983-b24d-f37348286a85 --dns_nameservers list=true 8.8.4.4 8.8.8.8</span></span><br><span class="line">Updated subnet: 31896641-28e4-4983-b24d-f37348286a85</span><br></pre></td></tr></table></figure><p># 列出路由器信息，路由器ID为：dfcf3d90-2409-4505-a020-58b8ed3c9e67</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># neutron router-list</span></span><br><span class="line">+--------------------------------------+----------+-----------------------------------------------------------------------------+</span><br><span class="line">| id                                   | name     | external_gateway_info                                                       |</span><br><span class="line">+--------------------------------------+----------+-----------------------------------------------------------------------------+</span><br><span class="line">| dfcf3d90-2409-4505-a020-58b8ed3c9e67 | router04 | &#123;<span class="string">"network_id"</span>: <span class="string">"c4448c0d-f633-449a-861a-a39a304cad21"</span>, <span class="string">"enable_snat"</span>: <span class="literal">true</span>&#125; |</span><br><span class="line">+--------------------------------------+----------+-----------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure><p># 将子网（31896641-28e4-4983-b24d-f37348286a85）连接到路由器（dfcf3d90-2409-4505-a020-58b8ed3c9e67）上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># neutron router-interface-add dfcf3d90-2409-4505-a020-58b8ed3c9e67 31896641-28e4-4983-b24d-f37348286a85</span></span><br><span class="line">Added interface a8e6c89f-45a4-4b20-876c-844e46f09a46 to router dfcf3d90-2409-4505-a020-58b8ed3c9e67.</span><br></pre></td></tr></table></figure><p># 列出代理信息，DHCP代理ID为：75a25941-0b13-4efc-aea8-ad7150d3e89e</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># neutron agent-list</span></span><br><span class="line">+--------------------------------------+--------------------+------------------+-------+----------------+</span><br><span class="line">| id                                   | agent_type         | host             | alive | admin_state_up |</span><br><span class="line">+--------------------------------------+--------------------+------------------+-------+----------------+</span><br><span class="line">| 1544e83b-a495-4a46-b43c-b050596ecc9a | Open vSwitch agent | node-11.example.com | :-)   | True           |</span><br><span class="line">| 2117339e-039d-4eb7-b7f0-6e645c50c69d | Metadata agent     | node-9.example.com  | :-)   | True           |</span><br><span class="line">| 75a25941-0b13-4efc-aea8-ad7150d3e89e | DHCP agent         | node-9.example.com  | :-)   | True           |</span><br><span class="line">| c8701380-1705-436f-858d-2b79a17dcff8 | L3 agent           | node-9.example.com  | :-)   | True           |</span><br><span class="line">| fa010ebe-db3b-4251-9c89-59c864d54971 | Open vSwitch agent | node-9.example.com  | :-)   | True           |</span><br><span class="line">+--------------------------------------+--------------------+------------------+-------+----------------+</span><br></pre></td></tr></table></figure><p># 为net_admin网络添加DHCP代理，以便此网段能够自动分配IP地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># neutron dhcp-agent-network-add 75a25941-0b13-4efc-aea8-ad7150d3e89e net_admin</span></span><br><span class="line">Added network net_admin to DHCP agent</span><br></pre></td></tr></table></figure><p># 完成后网络拓扑如图所示(net_admin和net04都是是通过router04与net04_ext相连的，Openstack控制界面上显示异常)：</p><p><img src="/images/14-09-10/openstack_tuopu.png" alt="Openstack网络拓扑"></p><h2 id="添加租户并设置网络"><a href="#添加租户并设置网络" class="headerlink" title="添加租户并设置网络"></a>添加租户并设置网络</h2><p>添加租户op.example.com，并为租户添加网络：</p><p># 使认证信息生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># . creds-admin</span></span><br></pre></td></tr></table></figure><p># 创建op.example.com租户，租户ID为：2e8def45720343fb9d648bd561a99c06</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># keystone tenant-create --name op.example.com</span></span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">|   Property  |              Value               |</span><br><span class="line">+-------------+----------------------------------+</span><br><span class="line">| description |                                  |</span><br><span class="line">|   enabled   |               True               |</span><br><span class="line">|      id     | 2e8def45720343fb9d648bd561a99c06 |</span><br><span class="line">|     name    |          op.example.com          |</span><br><span class="line">+-------------+----------------------------------+</span><br></pre></td></tr></table></figure><p># 为租户创建用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># keystone user-create --name=dongliang --pass=123456 --tenant-id=2e8def45720343fb9d648bd561a99c06 --email=dongliang@example.com</span></span><br><span class="line">+----------+----------------------------------+</span><br><span class="line">| Property |              Value               |</span><br><span class="line">+----------+----------------------------------+</span><br><span class="line">|  email   |      dongliang@example.com       |</span><br><span class="line">| enabled  |               True               |</span><br><span class="line">|    id    | 181390a3b29d4e3fa9938aa7d65bb0b3 |</span><br><span class="line">|   name   |            dongliang             |</span><br><span class="line">| tenantId | 2e8def45720343fb9d648bd561a99c06 |</span><br><span class="line">| username |            dongliang             |</span><br><span class="line">+----------+----------------------------------+</span><br></pre></td></tr></table></figure><p># 列出角色信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># keystone role-list</span></span><br><span class="line">+----------------------------------+-----------------+</span><br><span class="line">|                id                |       name      |</span><br><span class="line">+----------------------------------+-----------------+</span><br><span class="line">| d6284307ed704c9da4ab426f123e3c9f |      Member     |</span><br><span class="line">| 9fe2ff9ee4384b1894a90878d3e92bab |     _member_    |</span><br><span class="line">| f44b81985a3849f1ae98e36357cdad0d |      admin      |</span><br><span class="line">| e45948cda56f4306b17cb408c7d33b9b | heat_stack_user |</span><br><span class="line">+----------------------------------+-----------------+</span><br></pre></td></tr></table></figure><p># 为dongliang用户添加角色</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># keystone user-role-add --tenant-id 2e8def45720343fb9d648bd561a99c06 --user-id 181390a3b29d4e3fa9938aa7d65bb0b3 --role-id d6284307ed704c9da4ab426f123e3c9f</span></span><br></pre></td></tr></table></figure><p># 为op.example.com 租户添加网络 net_op_leju_com，具体参见为admin租户新增网段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># neutron net-create --tenant-id 2e8def45720343fb9d648bd561a99c06 net_op_leju_com</span></span><br><span class="line">Created a new network:</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| Field                     | Value                                |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| admin_state_up            | True                                 |</span><br><span class="line">| id                        | 429f5040-ca24-42ff-9260-a5148ff47391 |</span><br><span class="line">| name                      | net_op_leju_com                      |</span><br><span class="line">| provider:network_type     | vlan                                 |</span><br><span class="line">| provider:physical_network | physnet2                             |</span><br><span class="line">| provider:segmentation_id  | 512                                  |</span><br><span class="line">| shared                    | False                                |</span><br><span class="line">| status                    | ACTIVE                               |</span><br><span class="line">| subnets                   |                                      |</span><br><span class="line">| tenant_id                 | 2e8def45720343fb9d648bd561a99c06     |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line"></span><br><span class="line">[root@node-9 ~]<span class="comment"># neutron subnet-create --tenant-id 2e8def45720343fb9d648bd561a99c06 net_op_leju_com 172.16.102.0/24</span></span><br><span class="line">Created a new subnet:</span><br><span class="line">+------------------+----------------------------------------------------+</span><br><span class="line">| Field            | Value                                              |</span><br><span class="line">+------------------+----------------------------------------------------+</span><br><span class="line">| allocation_pools | &#123;<span class="string">"start"</span>: <span class="string">"172.16.102.2"</span>, <span class="string">"end"</span>: <span class="string">"172.16.102.254"</span>&#125; |</span><br><span class="line">| cidr             | 172.16.102.0/24                                    |</span><br><span class="line">| dns_nameservers  |                                                    |</span><br><span class="line">| enable_dhcp      | True                                               |</span><br><span class="line">| gateway_ip       | 172.16.102.1                                       |</span><br><span class="line">| host_routes      |                                                    |</span><br><span class="line">| id               | e13718ef-58a0-4741-9fed-963f393202c1               |</span><br><span class="line">| ip_version       | 4                                                  |</span><br><span class="line">| name             |                                                    |</span><br><span class="line">| network_id       | 429f5040-ca24-42ff-9260-a5148ff47391               |</span><br><span class="line">| tenant_id        | 2e8def45720343fb9d648bd561a99c06                   |</span><br><span class="line">+------------------+----------------------------------------------------+</span><br></pre></td></tr></table></figure><p># 修改子网dns地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># neutron subnet-update e13718ef-58a0-4741-9fed-963f393202c1 --dns_nameservers list=true 8.8.4.4 8.8.8.8</span></span><br><span class="line">Updated subnet: e13718ef-58a0-4741-9fed-963f393202c1</span><br><span class="line"></span><br><span class="line">[root@node-9 ~]<span class="comment"># neutron router-list</span></span><br><span class="line">+--------------------------------------+----------+-----------------------------------------------------------------------------+</span><br><span class="line">| id                                   | name     | external_gateway_info                                                       |</span><br><span class="line">+--------------------------------------+----------+-----------------------------------------------------------------------------+</span><br><span class="line">| dfcf3d90-2409-4505-a020-58b8ed3c9e67 | router04 | &#123;<span class="string">"network_id"</span>: <span class="string">"c4448c0d-f633-449a-861a-a39a304cad21"</span>, <span class="string">"enable_snat"</span>: <span class="literal">true</span>&#125; |</span><br><span class="line">+--------------------------------------+----------+-----------------------------------------------------------------------------+</span><br><span class="line"></span><br><span class="line">[root@node-9 ~]<span class="comment"># neutron router-interface-add dfcf3d90-2409-4505-a020-58b8ed3c9e67 e13718ef-58a0-4741-9fed-963f393202c1</span></span><br><span class="line">Added interface 4d978e71-1b97-46d3-9f6a-7ace3aa54b3d to router dfcf3d90-2409-4505-a020-58b8ed3c9e67.</span><br><span class="line"></span><br><span class="line">[root@node-9 ~]<span class="comment"># neutron agent-list</span></span><br><span class="line">+--------------------------------------+--------------------+------------------+-------+----------------+</span><br><span class="line">| id                                   | agent_type         | host             | alive | admin_state_up |</span><br><span class="line">+--------------------------------------+--------------------+------------------+-------+----------------+</span><br><span class="line">| 1544e83b-a495-4a46-b43c-b050596ecc9a | Open vSwitch agent | node-11.example.com | :-)   | True           |</span><br><span class="line">| 2117339e-039d-4eb7-b7f0-6e645c50c69d | Metadata agent     | node-9.example.com  | :-)   | True           |</span><br><span class="line">| 75a25941-0b13-4efc-aea8-ad7150d3e89e | DHCP agent         | node-9.example.com  | :-)   | True           |</span><br><span class="line">| c8701380-1705-436f-858d-2b79a17dcff8 | L3 agent           | node-9.example.com  | :-)   | True           |</span><br><span class="line">| fa010ebe-db3b-4251-9c89-59c864d54971 | Open vSwitch agent | node-9.example.com  | :-)   | True           |</span><br><span class="line">+--------------------------------------+--------------------+------------------+-------+----------------+</span><br><span class="line"></span><br><span class="line">[root@node-9 ~]<span class="comment"># neutron dhcp-agent-network-add 75a25941-0b13-4efc-aea8-ad7150d3e89e net_op_leju_com</span></span><br><span class="line">Added network net_op_leju_com to DHCP agent</span><br><span class="line"></span><br><span class="line">[root@node-9 ~]<span class="comment"># neutron net-list</span></span><br><span class="line">+--------------------------------------+-----------------+-------------------------------------------------------+</span><br><span class="line">| id                                   | name            | subnets                                               |</span><br><span class="line">+--------------------------------------+-----------------+-------------------------------------------------------+</span><br><span class="line">| 284d3f00-042b-41b2-bec4-f5bc7dcee037 | net_admin       | 31896641-28e4-4983-b24d-f37348286a85 192.168.101.0/24 |</span><br><span class="line">| 35030315-0abb-4321-bd2d-fa02ecebe4a4 | net04           | 33fec45a-5a55-4e66-b5d0-d243a63b5b52 192.168.100.0/24 |</span><br><span class="line">| 429f5040-ca24-42ff-9260-a5148ff47391 | net_op_leju_com | e13718ef-58a0-4741-9fed-963f393202c1 172.16.102.0/24  |</span><br><span class="line">| c4448c0d-f633-449a-861a-a39a304cad21 | net04_ext       | fc9caac9-d9a9-43f4-9fec-feebc14038cd 172.16.200.0/24  |</span><br><span class="line">+--------------------------------------+-----------------+-------------------------------------------------------+</span><br><span class="line"></span><br><span class="line">[root@node-9 ~]<span class="comment"># neutron net-show c4448c0d-f633-449a-861a-a39a304cad21</span></span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| Field                     | Value                                |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| admin_state_up            | True                                 |</span><br><span class="line">| id                        | c4448c0d-f633-449a-861a-a39a304cad21 |</span><br><span class="line">| name                      | net04_ext                            |</span><br><span class="line">| provider:network_type     | flat                                 |</span><br><span class="line">| provider:physical_network | physnet1                             |</span><br><span class="line">| provider:segmentation_id  |                                      |</span><br><span class="line">| router:external           | True                                 |</span><br><span class="line">| shared                    | *False*                              |</span><br><span class="line">| status                    | ACTIVE                               |</span><br><span class="line">| subnets                   | fc9caac9-d9a9-43f4-9fec-feebc14038cd |</span><br><span class="line">| tenant_id                 | f51b22163f504dd6a6014f4700e9ee48     |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br></pre></td></tr></table></figure><p># 修改net04_ext网络为共享模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># neutron net-update c4448c0d-f633-449a-861a-a39a304cad21 --shared</span></span><br><span class="line">Updated network: c4448c0d-f633-449a-861a-a39a304cad21</span><br><span class="line"></span><br><span class="line">[root@node-9 ~]<span class="comment"># neutron net-show c4448c0d-f633-449a-861a-a39a304cad21</span></span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| Field                     | Value                                |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| admin_state_up            | True                                 |</span><br><span class="line">| id                        | c4448c0d-f633-449a-861a-a39a304cad21 |</span><br><span class="line">| name                      | net04_ext                            |</span><br><span class="line">| provider:network_type     | flat                                 |</span><br><span class="line">| provider:physical_network | physnet1                             |</span><br><span class="line">| provider:segmentation_id  |                                      |</span><br><span class="line">| router:external           | True                                 |</span><br><span class="line">| shared                    | *True*                               |</span><br><span class="line">| status                    | ACTIVE                               |</span><br><span class="line">| subnets                   | fc9caac9-d9a9-43f4-9fec-feebc14038cd |</span><br><span class="line">| tenant_id                 | f51b22163f504dd6a6014f4700e9ee48     |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br></pre></td></tr></table></figure><p># 完成后网络拓扑如图所示(net_op_leju_com是通过router04与net04_ext相连的，Openstack控制界面上显示异常)：</p><blockquote><p>注意： 以上租户和网络创建都是通过命令行添加的，Openstack界面也可以实现部分功能，但有时添加会有问题，建议使用命令行添加。</p></blockquote><p># 如需要修改网络端口IP，可以如下修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">root@node-15:~<span class="comment"># neutron port-list</span></span><br><span class="line">+--------------------------------------+------+-------------------+--------------------------------------------------------------------------------------+</span><br><span class="line">| id                                   | name | mac_address       | fixed_ips                                                                            |</span><br><span class="line">+--------------------------------------+------+-------------------+--------------------------------------------------------------------------------------+</span><br><span class="line">| 03ecb6fc-a695-4151-aef8-87a64c863be3 |      | fa:16:3e:0c:e0:60 | &#123;<span class="string">"subnet_id"</span>: <span class="string">"2f286f76-3532-41ab-81d8-6273ed5a3c6a"</span>, <span class="string">"ip_address"</span>: <span class="string">"172.16.0.132"</span>&#125;  |</span><br><span class="line">| 194d33d5-5184-41cb-9a30-09e580bc4d3f |      | fa:16:3e:1a:20:66 | &#123;<span class="string">"subnet_id"</span>: <span class="string">"5dd3709e-3171-40a5-891c-bc2d73c0a9a0"</span>, <span class="string">"ip_address"</span>: <span class="string">"192.168.111.3"</span>&#125; |</span><br><span class="line">| 29c50618-af2d-401b-bfe3-3ef38d2292c4 |      | fa:16:3e:71:c4:d0 | &#123;<span class="string">"subnet_id"</span>: <span class="string">"2f286f76-3532-41ab-81d8-6273ed5a3c6a"</span>, <span class="string">"ip_address"</span>: <span class="string">"172.16.0.137"</span>&#125;  |</span><br><span class="line">| 2bf7f2e0-3172-4c52-bcc1-40750492bca6 |      | fa:16:3e:ec:8f:87 | &#123;<span class="string">"subnet_id"</span>: <span class="string">"2f286f76-3532-41ab-81d8-6273ed5a3c6a"</span>, <span class="string">"ip_address"</span>: <span class="string">"172.16.0.136"</span>&#125;  |</span><br><span class="line">| 3299792b-07b3-48a0-9213-506034c05744 |      | fa:16:3e:88:ae:10 | &#123;<span class="string">"subnet_id"</span>: <span class="string">"2f286f76-3532-41ab-81d8-6273ed5a3c6a"</span>, <span class="string">"ip_address"</span>: <span class="string">"172.16.0.133"</span>&#125;  |</span><br><span class="line">| 421171b2-1abc-4423-8a46-c9ffa1ad11a0 |      | fa:16:3e:f0:d7:93 | &#123;<span class="string">"subnet_id"</span>: <span class="string">"2f286f76-3532-41ab-81d8-6273ed5a3c6a"</span>, <span class="string">"ip_address"</span>: <span class="string">"172.16.0.138"</span>&#125;  |</span><br><span class="line">| 421682b0-d76c-4d64-8cf7-a62c40733109 |      | fa:16:3e:fa:30:e4 | &#123;<span class="string">"subnet_id"</span>: <span class="string">"956d685c-e7b3-420c-a127-3eedda941e4b"</span>, <span class="string">"ip_address"</span>: <span class="string">"192.168.112.2"</span>&#125; |</span><br><span class="line">| 55b5a275-7db8-4a31-8c84-089af254d3e1 |      | fa:16:3e:28:<span class="built_in">cd</span>:fd | &#123;<span class="string">"subnet_id"</span>: <span class="string">"2f286f76-3532-41ab-81d8-6273ed5a3c6a"</span>, <span class="string">"ip_address"</span>: <span class="string">"172.16.0.135"</span>&#125;  |</span><br><span class="line">| 6948a94a-b90d-4cbd-b8e5-a25ea78fc407 |      | fa:16:3e:17:1f:98 | &#123;<span class="string">"subnet_id"</span>: <span class="string">"2f286f76-3532-41ab-81d8-6273ed5a3c6a"</span>, <span class="string">"ip_address"</span>: <span class="string">"172.16.0.131"</span>&#125;  |</span><br><span class="line">| 70ef22b5-dd3a-4efe-9335-3c67a096fa22 |      | fa:16:3e:78:43:60 | &#123;<span class="string">"subnet_id"</span>: <span class="string">"2f286f76-3532-41ab-81d8-6273ed5a3c6a"</span>, <span class="string">"ip_address"</span>: <span class="string">"172.16.0.140"</span>&#125;  |</span><br><span class="line">| 7c1286e7-e606-46f5-976e-508de1872c8b |      | fa:16:3e:01:20:c4 | &#123;<span class="string">"subnet_id"</span>: <span class="string">"2f286f76-3532-41ab-81d8-6273ed5a3c6a"</span>, <span class="string">"ip_address"</span>: <span class="string">"172.16.0.134"</span>&#125;  |</span><br><span class="line">| 80bb3f49-8cf5-4841-afe1-fa60379bfeef |      | fa:16:3e:a5:14:61 | &#123;<span class="string">"subnet_id"</span>: <span class="string">"5dd3709e-3171-40a5-891c-bc2d73c0a9a0"</span>, <span class="string">"ip_address"</span>: <span class="string">"192.168.111.1"</span>&#125; |</span><br><span class="line">| 99b119c9-5062-48e9-a0f4-55b36c70596f |      | fa:16:3e:<span class="built_in">fc</span>:8e:c9 | &#123;<span class="string">"subnet_id"</span>: <span class="string">"956d685c-e7b3-420c-a127-3eedda941e4b"</span>, <span class="string">"ip_address"</span>: <span class="string">"192.168.112.3"</span>&#125; |</span><br><span class="line">| a7863873-60b7-4372-9cd5-3a8a934a5ace |      | fa:16:3e:2f:23:69 | &#123;<span class="string">"subnet_id"</span>: <span class="string">"2f286f76-3532-41ab-81d8-6273ed5a3c6a"</span>, <span class="string">"ip_address"</span>: <span class="string">"172.16.0.139"</span>&#125;  |</span><br><span class="line">| bc753c4c-ad8b-4a62-aebf-4432e2376db4 |      | fa:16:3e:76:da:b7 | &#123;<span class="string">"subnet_id"</span>: <span class="string">"5dd3709e-3171-40a5-891c-bc2d73c0a9a0"</span>, <span class="string">"ip_address"</span>: <span class="string">"192.168.111.2"</span>&#125; |</span><br><span class="line">| de4bb0a0-24ad-4aa6-9263-665bc9ff633b |      | fa:16:3e:75:c5:00 | &#123;<span class="string">"subnet_id"</span>: <span class="string">"2f286f76-3532-41ab-81d8-6273ed5a3c6a"</span>, <span class="string">"ip_address"</span>: <span class="string">"172.16.0.130"</span>&#125;  |</span><br><span class="line">+--------------------------------------+------+-------------------+--------------------------------------------------------------------------------------+</span><br><span class="line"></span><br><span class="line">root@node-15:~<span class="comment"># neutron port-update 421682b0-d76c-4d64-8cf7-a62c40733109 -- --fixed_ips type=dict list=true ip_address=192.168.112.1</span></span><br><span class="line">Updated port: 421682b0-d76c-4d64-8cf7-a62c40733109</span><br></pre></td></tr></table></figure><h2 id="在Openstack上启动CoreOS集群"><a href="#在Openstack上启动CoreOS集群" class="headerlink" title="在Openstack上启动CoreOS集群"></a>在Openstack上启动CoreOS集群</h2><p># 设置认证权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># cat creds-admin</span></span><br><span class="line"><span class="built_in">export</span> OS_TENANT_NAME=admin</span><br><span class="line"><span class="built_in">export</span> OS_USERNAME=admin</span><br><span class="line"><span class="built_in">export</span> OS_PASSWORD=admin</span><br><span class="line"><span class="built_in">export</span> OS_AUTH_URL=<span class="string">"http://172.16.200.2:5000/v2.0/“</span></span><br></pre></td></tr></table></figure><p># 使认证权限生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># . creds-admin</span></span><br></pre></td></tr></table></figure><p># 下载CoreOS镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># wget http://alpha.release.core-os.net/amd64-usr/current/coreos_production_openstack_image.img.bz2</span></span><br></pre></td></tr></table></figure><p># 解压CoreOS镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># bunzip2 coreos_production_openstack_image.img.bz2</span></span><br></pre></td></tr></table></figure><p># 通过glance将镜像导入Openstack中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># glance image-create --name "CoreOS Stable 410.0.0" \</span></span><br><span class="line">--container-format bare \</span><br><span class="line">--disk-format qcow2 \</span><br><span class="line">--file coreos_production_openstack_image.img \</span><br><span class="line">--is-public True</span><br><span class="line">+------------------+--------------------------------------+</span><br><span class="line">| Property         | Value                                |</span><br><span class="line">+------------------+--------------------------------------+</span><br><span class="line">| checksum         | 2dc4d85f15f1de1c945cd2363418512b     |</span><br><span class="line">| container_format | bare                                 |</span><br><span class="line">| created_at       | 2014-09-03T05:08:26                  |</span><br><span class="line">| deleted          | False                                |</span><br><span class="line">| deleted_at       | None                                 |</span><br><span class="line">| disk_format      | qcow2                                |</span><br><span class="line">| id               | c3c0b86d-b2a6-4129-9bbd-b27fa4f88e06 |</span><br><span class="line">| is_public        | True                                 |</span><br><span class="line">| min_disk         | 0                                    |</span><br><span class="line">| min_ram          | 0                                    |</span><br><span class="line">| name             | CoreOS Stable 410.0.0                |</span><br><span class="line">| owner            | f51b22163f504dd6a6014f4700e9ee48     |</span><br><span class="line">| protected        | False                                |</span><br><span class="line">| size             | 448790528                            |</span><br><span class="line">| status           | active                               |</span><br><span class="line">| updated_at       | 2014-09-03T05:08:41                  |</span><br><span class="line">| virtual_size     | None                                 |</span><br><span class="line">+------------------+--------------------------------------+</span><br></pre></td></tr></table></figure><p># 获取etcd token</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># curl https://discovery.etcd.io/new</span></span><br><span class="line">https://discovery.etcd.io/c964af3ff154db796db834fedae038d4</span><br></pre></td></tr></table></figure><p># 修改cloud-config.yaml文件，填入获取的token和要登录机器的ssh key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># cat cloud-config.yaml</span></span><br><span class="line"><span class="comment">#cloud-config</span></span><br><span class="line">coreos:</span><br><span class="line">  etcd:</span><br><span class="line">    <span class="comment"># generate a new token for each unique cluster from https://discovery.etcd.io/new</span></span><br><span class="line">    discovery: https://discovery.etcd.io/c964af3ff154db796db834fedae038d4</span><br><span class="line">    <span class="comment"># multi-region and multi-cloud deployments need to use $public_ipv4</span></span><br><span class="line">    addr: <span class="variable">$private_ipv4</span>:4001</span><br><span class="line">    peer-addr: <span class="variable">$private_ipv4</span>:7001</span><br><span class="line">  units:</span><br><span class="line">    - name: etcd.service</span><br><span class="line">      <span class="built_in">command</span>: start</span><br><span class="line">    - name: fleet.service</span><br><span class="line">      <span class="built_in">command</span>: start</span><br><span class="line">ssh_authorized_keys:</span><br><span class="line">  <span class="comment"># include one or more SSH public keys</span></span><br><span class="line">  - ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA2DwT6v5NUUBNBOjC4Z9ZCLLQW0efG+0gpLP5Axi9uslrfCIpVt4MwMktXFegI4eulqATlA+la7pw65MYF8Gm0H9binmqJkDyPilhQkgHltrHOibRww3SddBrQtPddzcD3UPMAWyOiq/3LUhHutMguoKvp2KFoMoakofy6LBsD2xrSnavqycVqw2yb9RDg3c4VVECnVpgDiPPxo8woBWL3PooWZDxEnTqNhm37NXrpRw0xOqLy0x44/1fucwBWpzTXLD2fGLz4JAcgJ8oZHv8hhgadMYMqRRrlYpq0Sx2HiTY/0Co3AzyzQ8kRK0gVLIm3eLE3yzEVEVsa2Bm7LUq4w== root@fuel.example.com</span><br></pre></td></tr></table></figure><p># 以上user-data会通过Openstack Metadata服务注入虚拟机，在虚拟机里访问Metadata接口可以看到注入的用户数据：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># curl http://169.254.169.254/openstack/2012-08-10/user_data</span></span><br><span class="line"><span class="comment">#cloud-config</span></span><br><span class="line">coreos:</span><br><span class="line">  etcd:</span><br><span class="line">    <span class="comment"># generate a new token for each unique cluster from https://discovery.etcd.io/new</span></span><br><span class="line">    discovery: https://discovery.etcd.io/c964af3ff154db796db834fedae038d4</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p># 列出网络信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># nova net-list</span></span><br><span class="line">+--------------------------------------+-----------------+------+</span><br><span class="line">| ID                                   | Label           | CIDR |</span><br><span class="line">+--------------------------------------+-----------------+------+</span><br><span class="line">| 284d3f00-042b-41b2-bec4-f5bc7dcee037 | net_admin       | -    |</span><br><span class="line">| 35030315-0abb-4321-bd2d-fa02ecebe4a4 | net04           | -    |</span><br><span class="line">| 429f5040-ca24-42ff-9260-a5148ff47391 | net_op_leju_com | -    |</span><br><span class="line">| c4448c0d-f633-449a-861a-a39a304cad21 | net04_ext       | -    |</span><br><span class="line">+--------------------------------------+-----------------+------+</span><br></pre></td></tr></table></figure><p># 列出虚拟机规格信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># nova flavor-list</span></span><br><span class="line">+----+-----------+-----------+------+-----------+------+-------+-------------+-----------+</span><br><span class="line">| ID | Name      | Memory_MB | Disk | Ephemeral | Swap | VCPUs | RXTX_Factor | Is_Public |</span><br><span class="line">+----+-----------+-----------+------+-----------+------+-------+-------------+-----------+</span><br><span class="line">| 1  | m1.tiny   | 512       | 1    | 0         |      | 1     | 1.0         | True      |</span><br><span class="line">| 2  | m1.small  | 2048      | 20   | 0         |      | 1     | 1.0         | True      |</span><br><span class="line">| 3  | m1.medium | 4096      | 40   | 0         |      | 2     | 1.0         | True      |</span><br><span class="line">| 4  | m1.large  | 8192      | 80   | 0         |      | 4     | 1.0         | True      |</span><br><span class="line">| 5  | m1.xlarge | 16384     | 160  | 0         |      | 8     | 1.0         | True      |</span><br><span class="line">+----+-----------+-----------+------+-----------+------+-------+-------------+-----------+</span><br></pre></td></tr></table></figure><p># 通过nova boot命令启动三个CoreOS虚拟机实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># nova boot \  </span></span><br><span class="line">--user-data ./cloud-config.yaml \  </span><br><span class="line">--image c3c0b86d-b2a6-4129-9bbd-b27fa4f88e06 \  </span><br><span class="line">--key-name fuel \  </span><br><span class="line">--flavor m1.small \  </span><br><span class="line">--num-instances 3 \  </span><br><span class="line">--nic net-id=284d3f00-042b-41b2-bec4-f5bc7dcee037 \  </span><br><span class="line">--security-groups default coreos</span><br><span class="line">+--------------------------------------+--------------------------------------------------------------+</span><br><span class="line">| Property                             | Value                                                        |</span><br><span class="line">+--------------------------------------+--------------------------------------------------------------+</span><br><span class="line">| OS-DCF:diskConfig                    | MANUAL                                                       |</span><br><span class="line">| OS-EXT-AZ:availability_zone          | nova                                                         |</span><br><span class="line">| OS-EXT-SRV-ATTR:host                 | -                                                            |</span><br><span class="line">| OS-EXT-SRV-ATTR:hypervisor_hostname  | -                                                            |</span><br><span class="line">| OS-EXT-SRV-ATTR:instance_name        | instance-00000031                                            |</span><br><span class="line">| OS-EXT-STS:power_state               | 0                                                            |</span><br><span class="line">| OS-EXT-STS:task_state                | scheduling                                                   |</span><br><span class="line">| OS-EXT-STS:vm_state                  | building                                                     |</span><br><span class="line">| OS-SRV-USG:launched_at               | -                                                            |</span><br><span class="line">| OS-SRV-USG:terminated_at             | -                                                            |</span><br><span class="line">| accessIPv4                           |                                                              |</span><br><span class="line">| accessIPv6                           |                                                              |</span><br><span class="line">| adminPass                            | UWDaX8vxvzZn                                                 |</span><br><span class="line">| config_drive                         |                                                              |</span><br><span class="line">| created                              | 2014-09-03T06:14:10Z                                         |</span><br><span class="line">| flavor                               | m1.small (2)                                                 |</span><br><span class="line">| hostId                               |                                                              |</span><br><span class="line">| id                                   | a51d1492-9352-4979-8049-6e089af4fa65                         |</span><br><span class="line">| image                                | CoreOS Stable 410.0.0 (c3c0b86d-b2a6-4129-9bbd-b27fa4f88e06) |</span><br><span class="line">| key_name                             | fuel                                                         |</span><br><span class="line">| metadata                             | &#123;&#125;                                                           |</span><br><span class="line">| name                                 | coreos-a51d1492-9352-4979-8049-6e089af4fa65                  |</span><br><span class="line">| os-extended-volumes:volumes_attached | []                                                           |</span><br><span class="line">| progress                             | 0                                                            |</span><br><span class="line">| security_groups                      | default                                                      |</span><br><span class="line">| status                               | BUILD                                                        |</span><br><span class="line">| tenant_id                            | f51b22163f504dd6a6014f4700e9ee48                             |</span><br><span class="line">| updated                              | 2014-09-03T06:14:10Z                                         |</span><br><span class="line">| user_id                              | 8ad92b9cf95c4468b7718bbce22a39e0                             |</span><br><span class="line">+--------------------------------------+--------------------------------------------------------------+</span><br></pre></td></tr></table></figure><p># 列出浮动IP地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># nova floating-ip-list</span></span><br><span class="line">+----------------+-----------+----------------+-----------+</span><br><span class="line">| Ip             | Server Id | Fixed Ip       | Pool      |</span><br><span class="line">+----------------+-----------+----------------+-----------+</span><br><span class="line">| 172.16.200.138 |           | -              | net04_ext |</span><br><span class="line">| 172.16.200.134 |           | -              | net04_ext |</span><br><span class="line">| 172.16.200.137 |           | -              | net04_ext |</span><br><span class="line">| 172.16.200.135 |           | -              | net04_ext |</span><br><span class="line">| 172.16.200.131 |           | -              | net04_ext |</span><br><span class="line">| 172.16.200.132 |           | -              | net04_ext |</span><br><span class="line">| 172.16.200.136 |           | -              | net04_ext |</span><br><span class="line">| 172.16.200.139 |           | -              | net04_ext |</span><br><span class="line">| 172.16.200.133 |           | -              | net04_ext |</span><br><span class="line">| 172.16.200.140 |           | -              | net04_ext |</span><br><span class="line">+----------------+-----------+----------------+-----------+</span><br></pre></td></tr></table></figure><p># 列出虚拟机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># nova list</span></span><br><span class="line">+--------------------------------------+---------------------------------------------+--------+------------+-------------+------------------------------------------+</span><br><span class="line">| ID                                   | Name                                        | Status | Task State | Power State | Networks                                 |</span><br><span class="line">+--------------------------------------+---------------------------------------------+--------+------------+-------------+------------------------------------------+</span><br><span class="line">| 3198baad-9a01-469f-af5b-13665b01c7f0 | coreos-3198baad-9a01-469f-af5b-13665b01c7f0 | ACTIVE | -          | Running     | net_admin=192.168.101.22                 |</span><br><span class="line">| 71a03186-1327-4608-bd66-b59f6c49c85c | coreos-71a03186-1327-4608-bd66-b59f6c49c85c | ACTIVE | -          | Running     | net_admin=192.168.101.23                 |</span><br><span class="line">| a51d1492-9352-4979-8049-6e089af4fa65 | coreos-a51d1492-9352-4979-8049-6e089af4fa65 | ACTIVE | -          | Running     | net_admin=192.168.101.21                 |</span><br><span class="line">| e2a5901b-cfd7-41d7-bd7f-f8e4e18cfc0f | vm_centos_7                                 | ACTIVE | -          | Running     | net04=192.168.100.12, 172.16.200.134     |</span><br><span class="line">+--------------------------------------+---------------------------------------------+--------+------------+-------------+------------------------------------------+</span><br></pre></td></tr></table></figure><p># 为虚拟机绑定浮动IP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># nova add-floating-ip coreos-a51d1492-9352-4979-8049-6e089af4fa65 172.16.200.131</span></span><br><span class="line">[root@node-9 ~]<span class="comment"># nova add-floating-ip coreos-3198baad-9a01-469f-af5b-13665b01c7f0 172.16.200.132</span></span><br><span class="line">[root@node-9 ~]<span class="comment"># nova add-floating-ip coreos-71a03186-1327-4608-bd66-b59f6c49c85c 172.16.200.133</span></span><br></pre></td></tr></table></figure><p># 界面中查看虚拟机情况</p><p><img src="/images/14-09-10/openstack_coreos.png" alt="Openstack CoreOS"></p><p># 通过浮动IP登录CoreOS虚拟机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@fuel ~]<span class="comment"># ssh core@172.16.200.131</span></span><br><span class="line">CoreOS (stable)</span><br><span class="line">core@coreos-a51d1492-9352-4979-8049-6e089af4fa65 ~ $ sudo su -</span><br><span class="line">coreos-a51d1492-9352-4979-8049-6e089af4fa65 ~ <span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="强制删除非正常状态的卷"><a href="#强制删除非正常状态的卷" class="headerlink" title="强制删除非正常状态的卷"></a>强制删除非正常状态的卷</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># . creds-admin</span></span><br><span class="line">[root@node-9 ~]<span class="comment"># cinder list</span></span><br><span class="line">+--------------------------------------+----------+----------------------------+------+-------------+----------+--------------------------------------+</span><br><span class="line">|                  ID                  |  Status  |        Display Name        | Size | Volume Type | Bootable |             Attached to              |</span><br><span class="line">+--------------------------------------+----------+----------------------------+------+-------------+----------+--------------------------------------+</span><br><span class="line">| 2f1219c1-9081-4a1e-ac4f-3b9e77b71bbb | creating | ost1_test-volume1530754005 |  1   |     None    |  <span class="literal">false</span>   |                                      |</span><br><span class="line">| 524bb475-d63f-4479-9a94-4d7eef87cf9a | creating |        domino_data         |  3   |     None    |  <span class="literal">false</span>   |                                      |</span><br><span class="line">| 937fedef-f9c0-4d8c-aca8-fc1aa6de27ab | creating |          vd_test           |  10  |     None    |  <span class="literal">false</span>   |                                      |</span><br><span class="line">| fcfc1fb1-5884-4ed9-a0f7-dd084c953ce4 |  <span class="keyword">in</span>-use  |       vd_domino_test       |  3   |     None    |   <span class="literal">true</span>   | b46e1c74-f442-41ae-b480-fdd4d376dca5 |</span><br><span class="line">+--------------------------------------+----------+----------------------------+------+-------------+----------+--------------------------------------+</span><br><span class="line"></span><br><span class="line">[root@node-9 ~]<span class="comment"># cinder reset-state --state available 937fedef-f9c0-4d8c-aca8-fc1aa6de27ab</span></span><br><span class="line">[root@node-9 ~]<span class="comment"># cinder delete 937fedef-f9c0-4d8c-aca8-fc1aa6de27ab</span></span><br><span class="line">[root@node-9 ~]<span class="comment"># cinder list</span></span><br><span class="line">+--------------------------------------+----------+----------------------------+------+-------------+----------+--------------------------------------+</span><br><span class="line">|                  ID                  |  Status  |        Display Name        | Size | Volume Type | Bootable |             Attached to              |</span><br><span class="line">+--------------------------------------+----------+----------------------------+------+-------------+----------+--------------------------------------+</span><br><span class="line">| 2f1219c1-9081-4a1e-ac4f-3b9e77b71bbb | creating | ost1_test-volume1530754005 |  1   |     None    |  <span class="literal">false</span>   |                                      |</span><br><span class="line">| 524bb475-d63f-4479-9a94-4d7eef87cf9a | creating |        domino_data         |  3   |     None    |  <span class="literal">false</span>   |                                      |</span><br><span class="line">| fcfc1fb1-5884-4ed9-a0f7-dd084c953ce4 |  <span class="keyword">in</span>-use  |       vd_domino_test       |  3   |     None    |   <span class="literal">true</span>   | b46e1c74-f442-41ae-b480-fdd4d376dca5 |</span><br><span class="line">+--------------------------------------+----------+----------------------------+------+-------------+----------+--------------------------------------+</span><br></pre></td></tr></table></figure><h2 id="强制删除ERROR状态的虚拟机"><a href="#强制删除ERROR状态的虚拟机" class="headerlink" title="强制删除ERROR状态的虚拟机"></a>强制删除ERROR状态的虚拟机</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[root@node-9 ~]<span class="comment"># nova list</span></span><br><span class="line">+--------------------------------------+--------------+--------+------------+-------------+----------------------------------------------+</span><br><span class="line">| ID                                   | Name         | Status | Task State | Power State | Networks                                     |</span><br><span class="line">+--------------------------------------+--------------+--------+------------+-------------+----------------------------------------------+</span><br><span class="line">| c915770b-b2d3-4196-bb68-fc19aa2a6da9 | vm_cirros_op | ERROR  | deleting   | Shutdown    | net_op_leju_com=172.16.102.4, 172.16.200.142 |</span><br><span class="line">+--------------------------------------+--------------+--------+------------+-------------+----------------------------------------------+</span><br><span class="line"></span><br><span class="line">[root@node-9 ~]<span class="comment"># nova reset-state --active c915770b-b2d3-4196-bb68-fc19aa2a6da9</span></span><br><span class="line">[root@node-9 ~]<span class="comment"># nova show c915770b-b2d3-4196-bb68-fc19aa2a6da9</span></span><br><span class="line">+--------------------------------------+----------------------------------------------------------+</span><br><span class="line">| Property                             | Value                                                    |</span><br><span class="line">+--------------------------------------+----------------------------------------------------------+</span><br><span class="line">| OS-DCF:diskConfig                    | AUTO                                                     |</span><br><span class="line">| OS-EXT-AZ:availability_zone          | nova                                                     |</span><br><span class="line">| OS-EXT-SRV-ATTR:host                 | node-11.example.com                                         |</span><br><span class="line">| OS-EXT-SRV-ATTR:hypervisor_hostname  | node-11.example.com                                         |</span><br><span class="line">| OS-EXT-SRV-ATTR:instance_name        | instance-00000014                                        |</span><br><span class="line">| OS-EXT-STS:power_state               | 4                                                        |</span><br><span class="line">| OS-EXT-STS:task_state                | -                                                        |</span><br><span class="line">| OS-EXT-STS:vm_state                  | active                                                   |</span><br><span class="line">| OS-SRV-USG:launched_at               | 2014-09-02T07:46:46.000000                               |</span><br><span class="line">| OS-SRV-USG:terminated_at             | -                                                        |</span><br><span class="line">| accessIPv4                           |                                                          |</span><br><span class="line">| accessIPv6                           |                                                          |</span><br><span class="line">| config_drive                         |                                                          |</span><br><span class="line">| created                              | 2014-09-02T07:46:38Z                                     |</span><br><span class="line">| flavor                               | m1.tiny (1)                                              |</span><br><span class="line">| hostId                               | b51d791c8cc535dc723deed170df51ca5c415932f01b2c6b3fb67508 |</span><br><span class="line">| id                                   | c915770b-b2d3-4196-bb68-fc19aa2a6da9                     |</span><br><span class="line">| image                                | TestVM (722f1732-8a7a-4024-bd99-e039c2681360)            |</span><br><span class="line">| key_name                             | fuel                                                     |</span><br><span class="line">| metadata                             | &#123;&#125;                                                       |</span><br><span class="line">| name                                 | vm_cirros_op                                             |</span><br><span class="line">| net_op_leju_com network              | 172.16.102.4, 172.16.200.142                             |</span><br><span class="line">| os-extended-volumes:volumes_attached | []                                                       |</span><br><span class="line">| progress                             | 0                                                        |</span><br><span class="line">| status                               | ACTIVE                                                   |</span><br><span class="line">| tenant_id                            | 2e8def45720343fb9d648bd561a99c06                         |</span><br><span class="line">| updated                              | 2014-09-12T03:39:08Z                                     |</span><br><span class="line">| user_id                              | 181390a3b29d4e3fa9938aa7d65bb0b3                         |</span><br><span class="line">+--------------------------------------+----------------------------------------------------------+</span><br><span class="line"></span><br><span class="line">[root@node-9 ~]<span class="comment"># nova delete c915770b-b2d3-4196-bb68-fc19aa2a6da9</span></span><br><span class="line">[root@node-9 ~]<span class="comment"># nova list</span></span><br><span class="line">+----+------+--------+------------+-------------+----------+</span><br><span class="line">| ID | Name | Status | Task State | Power State | Networks |</span><br><span class="line">+----+------+--------+------------+-------------+----------+</span><br><span class="line">+----+------+--------+------------+-------------+----------+</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      OpenStack作为基础设施即服务（简称IaaS）资源的通用前端。首要任务是简化云的部署过程并为其带来良好的可扩展性。本文希望通过提供必要的指导信息，帮助大家利用OpenStack前端来设置及管理自己的私有云。
    
    </summary>
    
      <category term="虚拟化" scheme="https://istone.dev/categories/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
    
      <category term="Openstack" scheme="https://istone.dev/tags/Openstack/"/>
    
      <category term="KVM" scheme="https://istone.dev/tags/KVM/"/>
    
      <category term="Ceph" scheme="https://istone.dev/tags/Ceph/"/>
    
      <category term="CoreOS" scheme="https://istone.dev/tags/CoreOS/"/>
    
  </entry>
  
  <entry>
    <title>Openstack 安装</title>
    <link href="https://istone.dev/2014/09/10/openstack-install/"/>
    <id>https://istone.dev/2014/09/10/openstack-install/</id>
    <published>2014-09-10T02:00:00.000Z</published>
    <updated>2019-06-27T02:18:19.984Z</updated>
    
    <content type="html"><![CDATA[<p>OpenStack 是由 Rackspace 和 NASA 共同开发的云计算平台，帮助服务商和企业内部实现类似于 Amazon EC2 和 S3 的云基础架构服务(Infrastructure as a Service, IaaS)。OpenStack 包含两个主要模块：Nova 和 Swift，前者是 NASA 开发的虚拟服务器部署和业务计算模块；后者是Rackspace开发的分布式云存储模块，两者可以一起用，也可以分开单独用。OpenStack 是开源项目，除了有 Rackspace 和 NASA 的大力支持外，后面还有包括 Dell、Citrix、 Cisco、 Canonical 这些重量级公司的贡献和支持，发展速度非常快。</p><p>Openstack集群搭建使用5台机器，一台Fuel管理机，一台Controller，一台Compute，两台Storage。这是一个最小化的安装，安装完成后可以对集群进行扩容。</p><h2 id="1-网络环境准备"><a href="#1-网络环境准备" class="headerlink" title="1. 网络环境准备"></a>1. 网络环境准备</h2><p>网络规划：</p><ul><li>Floating/Public 网络 172.16.200.0/24 in VLAN 100 (untagged on servers) • Floating IP range 172.16.200.130 - 254  # 用于集群公网和虚拟机浮动IP，需要能与外网通信</li><li>Internal network (private) 192.168.100.0/24  # 用于虚拟机间通信</li><li>Gateway 192.168.100.1  # 虚拟机的网关地址</li><li>DNS 8.8.4.4, 8.8.8.8  # DNS地址</li><li>Management network 192.168.0.0/24 in VLAN 501 # 管理网络</li><li>Storage network 192.168.1.0/24 in VLAN 502  # 存储网络</li><li>Administrative network (for Fuel) 10.20.0.0/24 in VLAN 503  # Fuel集群管理网络<a id="more"></a></li></ul><p>服务器网卡配置：</p><p>Fuel管理节点（Openstack集群管理）：</p><ul><li>eth0 10.20.0.2 — 插到交换机5 - 10口上</li><li>eth1 172.16.200.128  — 插到交换机11 - 16口上</li></ul><p>控制节点，计算节点，存储节点：</p><ul><li>eth0  10.20.0.0/24   — 插到交换机5 - 10口上</li><li>eth1 公有网络172.16.200.0/24，管理网络192.168.0.0/24， 存储网络192.168.1.0/24  — 插到交换机11 - 16口上</li><li>eth2 私有网络，192.168.100.0/24  — 插到交换机17 - 21口上</li></ul><p>使用一台Cisco 2960交换机，配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">switch<span class="comment">#configure t</span></span><br><span class="line">Enter configuration commands, one per line.  End with CNTL/Z.</span><br><span class="line">switch(config)<span class="comment">#vlan 500</span></span><br><span class="line">switch(config-vlan)<span class="comment">#name cloud_public</span></span><br><span class="line">switch(config-vlan)<span class="comment">#exit</span></span><br><span class="line">switch(config)<span class="comment">#vlan 501</span></span><br><span class="line">switch(config-vlan)<span class="comment">#name cloud_management</span></span><br><span class="line">switch(config-vlan)<span class="comment">#exit</span></span><br><span class="line">switch(config)<span class="comment">#vlan 502</span></span><br><span class="line">switch(config-vlan)<span class="comment">#name cloud_storage</span></span><br><span class="line">switch(config-vlan)<span class="comment">#exit</span></span><br><span class="line">switch(config)<span class="comment">#vlan 503</span></span><br><span class="line">switch(config-vlan)<span class="comment">#name cloud_admin</span></span><br><span class="line">switch(config-vlan)<span class="comment">#exit</span></span><br><span class="line">switch(config)<span class="comment">#vlan 510-530</span></span><br><span class="line">switch(config-vlan)<span class="comment">#exit</span></span><br><span class="line">switch(config)<span class="comment">#interface range gigabitethernet1/0/5 - 10</span></span><br><span class="line">switch(config-if-range)<span class="comment">#switchport access vlan 503</span></span><br><span class="line">switch(config-if-range)<span class="comment">#switchport mode access</span></span><br><span class="line">switch(config-if-range)<span class="comment">#spanning-tree portfast</span></span><br><span class="line">switch(config-if-range)<span class="comment">#no shut</span></span><br><span class="line">switch(config-if-range)<span class="comment">#exit</span></span><br><span class="line">switch(config)<span class="comment">#interface range gigabitethernet1/0/11 - 16</span></span><br><span class="line">switch(config-if-range)<span class="comment">#switchport trunk native vlan 500</span></span><br><span class="line">switch(config-if-range)<span class="comment">#switchport trunk allowed vlan 500-503</span></span><br><span class="line">switch(config-if-range)<span class="comment">#switchport mode trunk</span></span><br><span class="line">switch(config-if-range)<span class="comment">#no shut</span></span><br><span class="line">switch(config-if-range)<span class="comment">#spanning-tree portfast trunk</span></span><br><span class="line">%Warning: portfast should only be enabled on ports connected to a single</span><br><span class="line"> host. Connecting hubs, concentrators, switches, bridges, etc... to this</span><br><span class="line"> interface  when portfast is enabled, can cause temporary bridging loops.</span><br><span class="line"> Use with CAUTION</span><br><span class="line"></span><br><span class="line">switch(config-if-range)<span class="comment">#exit</span></span><br><span class="line">switch(config)<span class="comment">#interface range gigabitethernet1/0/17 - 22</span></span><br><span class="line">switch(config-if-range)<span class="comment">#switchport trunk allowed vlan 510-530</span></span><br><span class="line">switch(config-if-range)<span class="comment">#switchport mode trunk</span></span><br><span class="line">switch(config-if-range)<span class="comment">#no shut</span></span><br><span class="line">switch(config-if-range)<span class="comment">#spanning-tree portfast trunk</span></span><br><span class="line">switch(config-if-range)<span class="comment">#exit</span></span><br><span class="line"></span><br><span class="line">switch<span class="comment">#copy running-config startup-config</span></span><br></pre></td></tr></table></figure><h2 id="2-Fuel管理节点安装"><a href="#2-Fuel管理节点安装" class="headerlink" title="2. Fuel管理节点安装"></a>2. Fuel管理节点安装</h2><p>从Mirantis下载镜像：<a href="https://software.mirantis.com/，本次安装使用MirantisOpenStack-5.0.1.iso镜像。" target="_blank" rel="noopener">https://software.mirantis.com/，本次安装使用MirantisOpenStack-5.0.1.iso镜像。</a></p><p>通过远程管理卡进行安装，打开虚拟介质，挂载下载好的镜像，从虚拟镜像启动服务器。</p><p>到如下界面时按tab键，修改参数，hostname改为你的主机名，showmenu改为yes，回车继续：</p><p><img src="/images/14-09-10/openstack_k.png" alt="Openstack Fuel内核参数设置"></p><p>到如下界面，设置网络、PXE启动、DNS&amp;主机名、root密码等，网络配置界面，每配置一块网卡都需要Apply，然后再配置下一块网卡，都配置完成后保存退出。</p><p><img src="/images/14-09-10/openstack_fuel_setting.png" alt="Openstack Fuel设置"></p><p>安装完成后通过浏览访问<a href="http://10.20.0.2:8000/#clusters，点击新建Openstack环境，填写名称，并选择Openstack版本，然后点前进。" target="_blank" rel="noopener">http://10.20.0.2:8000/#clusters，点击新建Openstack环境，填写名称，并选择Openstack版本，然后点前进。</a></p><p><img src="/images/14-09-10/openstack_env_1.png" alt="新建Openstack环境1"></p><p>选择部署模式，本文使用多节点，非HA模式，然后点前进。</p><p><img src="/images/14-09-10/openstack_env_2.png" alt="新建Openstack环境2"></p><p>选择虚拟化管理器类型，本文选择KVM，然后点前进。</p><p><img src="/images/14-09-10/openstack_env_3.png" alt="新建Openstack环境3"></p><p>选择网络模式，本文选择Neutron VLAN模式，然后点前进。</p><p><img src="/images/14-09-10/openstack_env_4.png" alt="新建Openstack环境4"></p><p>选择存储类型，本文使用Ceph做后端存储，然后点前进。</p><p><img src="/images/14-09-10/openstack_env_5.png" alt="新建Openstack环境5"></p><p>附加服务，不选择，直接点前进。</p><p><img src="/images/14-09-10/openstack_env_6.png" alt="新建Openstack环境6"></p><p>点击完成，完成环境设置。</p><p><img src="/images/14-09-10/openstack_env_7.png" alt="新建Openstack环境7"></p><h2 id="3-Openstack部署"><a href="#3-Openstack部署" class="headerlink" title="3. Openstack部署"></a>3. Openstack部署</h2><p>启动各节点设置磁盘Raid：</p><p>控制节点和计算节点使用Raid 5；存储节点两块磁盘做Raid 1，剩下四块磁盘做单盘Raid 0（每块磁盘启动一个Ceph进程，以保证性能）。</p><p>计算节点需要在BIOS中打开虚拟化选项，否则在创建虚拟机时会报如下错误：</p><pre><code>Error: No valid host was found.</code></pre><p>查看Nova日志中有如下报错：</p><pre><code>libvirtError: internal error no supported architecture for os type ‘hvm&apos;</code></pre><p>配置完成后从网卡启动服务器，启动完成后，回到管理界面，四台服务器已经被发现。</p><p>点击 网络 选选卡，对网络进行如下配置：</p><p><img src="/images/14-09-10/openstack_network_1.png" alt="Openstack网络设置1"></p><p><img src="/images/14-09-10/openstack_network_2.png" alt="Openstack网络设置2"></p><p><img src="/images/14-09-10/openstack_network_3.png" alt="Openstack网络设置3"></p><p>修改完成后点 保存设置，然后点 验证网络，如果网络配置正确会显示验证成功。</p><p>点击 设置 选项卡，如下进行设置：</p><p><img src="/images/14-09-10/openstack_setting_1.png" alt="Openstack设置1"></p><p>勾选Nova quotas，这样可以对虚拟资源做配额。</p><p><img src="/images/14-09-10/openstack_setting_2.png" alt="Openstack设置2"></p><p>CentOS 6.5 需要设置OVS VLAN splinters特性。</p><p><img src="/images/14-09-10/openstack_setting_3.png" alt="Openstack设置3"></p><p>存储勾选以上四个选项，其中 Ceph RBD选项运行虚拟机进行热迁移，完成后点 保存设置。</p><p>以上设置完成后，点击 节点 选项卡，然后点 增加节点。</p><p><img src="/images/14-09-10/openstack_addnode_1.png" alt="Openstack添加节点1"></p><p>依次选择控制节点、计算节点、和存储节点。</p><p><img src="/images/14-09-10/openstack_addnode_2_compute.png" alt="Openstack添加节点2"></p><p><img src="/images/14-09-10/openstack_addnode_3_storage_ceph_osd.png" alt="Openstack添加节点3"></p><p>选择完成后配置各角色 磁盘，以存储节点为例：</p><p><img src="/images/14-09-10/openstack_dist_1.png" alt="Openstack磁盘1"></p><p><img src="/images/14-09-10/openstack_dist_2.png" alt="Openstack磁盘2"></p><p><img src="/images/14-09-10/openstack_dist_3.png" alt="Openstack磁盘3"></p><p>配置各角色 网络，以存储节点为例：</p><p><img src="/images/14-09-10/openstack_network_1.png" alt="Openstack网络1"></p><p><img src="/images/14-09-10/openstack_network_2.png" alt="Openstack网络2"></p><p><img src="/images/14-09-10/openstack_network_3.png" alt="Openstack网络3"></p><p>根据上图配置网络，配置完成后返回 节点 选项卡，点 部署变更，开始部署节点：</p><p>部署操作系统：</p><p><img src="/images/14-09-10/openstack_dist_1.png" alt="Openstack部署1"></p><p>部署Openstack：</p><p><img src="/images/14-09-10/openstack_dist_2.png" alt="Openstack部署2"></p><p>完成部署：</p><p><img src="/images/14-09-10/openstack_dist_3.png" alt="Openstack部署3"></p><p>可以点击日志选项卡，查看安装日志；点击健康检查选项卡进行健康检查：</p><p><img src="/images/14-09-10/openstack_h.png" alt="Openstack健康检查"></p><p>访问Openstack 管理控制台<a href="http://10.20.0.10/：" target="_blank" rel="noopener">http://10.20.0.10/：</a></p><p><img src="/images/14-09-10/openstack_c.png" alt="Openstack控制台"></p><h2 id="4-参考文档"><a href="#4-参考文档" class="headerlink" title="4. 参考文档"></a>4. 参考文档</h2><ul><li><a href="http://ceph.com/cloud/ceph-and-mirantis-openstack/" target="_blank" rel="noopener">Ceph and Mirantis OpenStack</a></li><li><a href="http://docs.mirantis.com/openstack/fuel/fuel-5.0/" target="_blank" rel="noopener">Mirantis OpenStack Documentation</a></li></ul>]]></content>
    
    <summary type="html">
    
      Openstack集群搭建使用5台机器，一台Fuel管理机，一台Controller，一台Compute，两台Storage。这是一个最小化的安装，安装完成后可以对集群进行扩容。
    
    </summary>
    
      <category term="虚拟化" scheme="https://istone.dev/categories/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
    
      <category term="Openstack" scheme="https://istone.dev/tags/Openstack/"/>
    
      <category term="KVM" scheme="https://istone.dev/tags/KVM/"/>
    
      <category term="Ceph" scheme="https://istone.dev/tags/Ceph/"/>
    
  </entry>
  
  <entry>
    <title>Saltstack：Salt模块的扩展</title>
    <link href="https://istone.dev/2014/06/17/saltstack-expand/"/>
    <id>https://istone.dev/2014/06/17/saltstack-expand/</id>
    <published>2014-06-17T02:00:00.000Z</published>
    <updated>2019-06-27T02:20:57.824Z</updated>
    
    <content type="html"><![CDATA[<p>对Salt进行模块化设计就是为了扩展，另外将变量抽象出来放到pillar中也是为了模块可以重用。当你需要配置两个web平台，而这两个平台又有些许不同时你该怎么办？需要重新再写个nginx模块适配新的平台吗？</p><p>对于上面问题的回答是否定的，我们无需再重新写一个nginx模块，我们只需要对新的平台传递新的配置文件或者使用同一个模板传递不同的参数。</p><h4 id="使用不同的配置文件"><a href="#使用不同的配置文件" class="headerlink" title="使用不同的配置文件"></a>使用不同的配置文件</h4><p>当两个平台配置相差比较大时可能传递一个不同的配置文件会更合适，如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">/etc/rsyncd.conf:</span></span><br><span class="line">  <span class="string">file.managed:</span></span><br><span class="line"><span class="attr">    - source:</span> <span class="attr">salt://rsync/files/etc/&#123;&#123;salt['pillar.get']('rsync_template',</span> <span class="string">'rsyncd.conf'</span><span class="string">)&#125;&#125;</span></span><br><span class="line"><span class="attr">    - template:</span> <span class="string">jinja</span></span><br><span class="line"><span class="attr">    - user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - group:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - mode:</span> <span class="number">644</span></span><br></pre></td></tr></table></figure><p>为不同的节点在pillar中配置不同的rsync_template变量即可。</p><a id="more"></a><h4 id="使用同一个模板传递不同的参数"><a href="#使用同一个模板传递不同的参数" class="headerlink" title="使用同一个模板传递不同的参数"></a>使用同一个模板传递不同的参数</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">/etc/keepalived/keepalived.conf:</span></span><br><span class="line">  <span class="string">file.managed:</span></span><br><span class="line"><span class="attr">    - source:</span> <span class="attr">salt://keepalived/files/etc/keepalived/keepalived.conf</span></span><br><span class="line"><span class="attr">    - template:</span> <span class="string">jinja</span></span><br><span class="line"><span class="attr">    - user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - group:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - mode:</span> <span class="number">644</span></span><br></pre></td></tr></table></figure><p>对于主服务器(/srv/salt/pillar/nodes/ha1.sls )使用如下pillar变量：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">keepalived:</span></span><br><span class="line"><span class="attr">  notification_email:</span> <span class="string">'dongliang@mall.com'</span></span><br><span class="line"><span class="attr">  notification_email_from:</span> <span class="string">'haproxy@mall.com'</span></span><br><span class="line"><span class="attr">  smtp_server:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="attr">  state:</span> <span class="string">MASTER</span></span><br><span class="line"><span class="attr">  priority:</span> <span class="number">100</span></span><br><span class="line"><span class="attr">  auth_type:</span> <span class="string">PASS</span></span><br><span class="line"><span class="attr">  auth_pass:</span> <span class="string">mall</span></span><br><span class="line"><span class="attr">  virtual_ipaddress_internal:</span> <span class="number">172.16</span><span class="number">.100</span><span class="number">.100</span></span><br><span class="line"><span class="attr">  virtual_ipaddress_external:</span> <span class="number">60.60</span><span class="number">.60</span><span class="number">.100</span></span><br></pre></td></tr></table></figure><p>对于从服务器(/srv/salt/pillar/nodes/ha2.sls )使用如下pillar变量：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">keepalived:</span></span><br><span class="line"><span class="attr">  notification_email:</span> <span class="string">'dongliang@mall.com'</span></span><br><span class="line"><span class="attr">  notification_email_from:</span> <span class="string">'haproxy@mall.com'</span></span><br><span class="line"><span class="attr">  smtp_server:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="attr">  state:</span> <span class="string">BACKUP</span></span><br><span class="line"><span class="attr">  priority:</span> <span class="number">99</span></span><br><span class="line"><span class="attr">  auth_type:</span> <span class="string">PASS</span></span><br><span class="line"><span class="attr">  auth_pass:</span> <span class="string">mall</span></span><br><span class="line"><span class="attr">  virtual_ipaddress_internal:</span> <span class="number">172.16</span><span class="number">.100</span><span class="number">.100</span></span><br><span class="line"><span class="attr">  virtual_ipaddress_external:</span> <span class="number">60.60</span><span class="number">.60</span><span class="number">.100</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      本文以一个小的电商网站（www.mall.com）为例，讲述Saltstack在真实场景中的应用。
    
    </summary>
    
      <category term="Saltstack" scheme="https://istone.dev/categories/Saltstack/"/>
    
    
      <category term="devops" scheme="https://istone.dev/tags/devops/"/>
    
      <category term="saltstack" scheme="https://istone.dev/tags/saltstack/"/>
    
      <category term="salt" scheme="https://istone.dev/tags/salt/"/>
    
  </entry>
  
  <entry>
    <title>Saltstack：自动化监控</title>
    <link href="https://istone.dev/2014/06/16/saltstack-zabbix-monitor/"/>
    <id>https://istone.dev/2014/06/16/saltstack-zabbix-monitor/</id>
    <published>2014-06-16T02:00:00.000Z</published>
    <updated>2019-06-27T02:21:59.800Z</updated>
    
    <content type="html"><![CDATA[<p>本节参考了<a href="http://pengyao.org/" target="_blank" rel="noopener">绿肥</a>的《记saltstack和zabbix的一次联姻》，对zabbix添加监控脚本（add_monitors.py）进行部分修改而成，此脚本基于@超大杯摩卡星冰乐 同学的zapi进行更高级别的封装而成，在此表示感谢。</p><p>自动化监控的过程如下：</p><ol><li>通过Saltstack部署Zabbix server、Zabbix web、Zabbix api；</li><li>完成安装后需要手动导入Zabbix监控模板；</li><li>通过Saltstack部署服务及Zabbix agent；</li><li>Saltstack在安装完服务后通过Salt Mine将服务角色汇报给Salt Master；</li><li>Zabbix api拿到各服务角色后添加相应监控到Zabbix server。</li></ol><p><a href="http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.mine.html" target="_blank" rel="noopener">Salt Mine</a>用于将Salt Minion的信息存储到Salt Master，供其他Salt Minion使用。</p><p>下面以对nginx模块的监控为例讲述整个监控过程，其中Zabbix服务（Zabbix server、Zabbix web、Zabbix api）安装使用/srv/salt/zabbix进行管理，服务部署在admin.grid.mall.com上。Zabbix agent使用/srv/salt/zabbix进行管理。nginx使用/srv/salt/nginx模块进行管理。</p><p>安装完nginx和php后定义相应的角色：</p><a id="more"></a><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nginx-role:</span></span><br><span class="line">  <span class="string">file.append:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">/etc/salt/roles</span></span><br><span class="line"><span class="attr">    - text:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">'nginx'</span></span><br><span class="line"><span class="attr">    - require:</span></span><br><span class="line"><span class="attr">      - file:</span> <span class="string">roles</span></span><br><span class="line"><span class="attr">      - service:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">      - service:</span> <span class="string">salt-minion</span></span><br><span class="line"><span class="attr">    - watch_in:</span></span><br><span class="line"><span class="attr">      - module:</span> <span class="string">sync_grains</span></span><br><span class="line"></span><br><span class="line"><span class="attr">php-fpm-role:</span>  <span class="comment"># 定义php-fpm角色</span></span><br><span class="line">  <span class="string">file.append:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">/etc/salt/roles</span></span><br><span class="line"><span class="attr">    - text:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">'php-fpm'</span></span><br><span class="line"><span class="attr">    - require:</span></span><br><span class="line"><span class="attr">      - file:</span> <span class="string">roles</span></span><br><span class="line"><span class="attr">      - service:</span> <span class="string">php-fpm</span></span><br><span class="line"><span class="attr">      - service:</span> <span class="string">salt-minion</span></span><br><span class="line"><span class="attr">    - watch_in:</span></span><br><span class="line"><span class="attr">      - module:</span> <span class="string">sync_grains</span></span><br></pre></td></tr></table></figure><p>/srv/salt/nginx/monitor.sls用于配置zabbix agent和监控脚本：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">zabbix.agent</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">nginx</span></span><br><span class="line"></span><br><span class="line"><span class="attr">nginx-monitor:</span></span><br><span class="line">  <span class="string">pkg.installed:</span>  <span class="comment"># 安装脚本依赖的软件包</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">perl-libwww-perl</span></span><br><span class="line"></span><br><span class="line"><span class="attr">php-fpm-monitor-script:</span>  <span class="comment"># 管理监控脚本，如果脚本存放目录不存在自动创建</span></span><br><span class="line">  <span class="string">file.managed:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">/etc/zabbix/ExternalScripts/php-fpm_status.pl</span></span><br><span class="line"><span class="attr">    - source:</span> <span class="attr">salt://nginx/files/etc/zabbix/ExternalScripts/php-fpm_status.pl</span></span><br><span class="line"><span class="attr">    - user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - group:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - mode:</span> <span class="number">755</span></span><br><span class="line"><span class="attr">    - require:</span></span><br><span class="line"><span class="attr">      - service:</span> <span class="string">php-fpm</span></span><br><span class="line"><span class="attr">      - pkg:</span> <span class="string">nginx-monitor</span></span><br><span class="line"><span class="attr">      - cmd:</span> <span class="string">php-fpm-monitor-script</span></span><br><span class="line">  <span class="string">cmd.run:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">mkdir</span> <span class="bullet">-p</span> <span class="string">/etc/zabbix/ExternalScripts</span></span><br><span class="line"><span class="attr">    - unless:</span> <span class="string">test</span> <span class="bullet">-d</span> <span class="string">/etc/zabbix/ExternalScripts</span></span><br><span class="line"></span><br><span class="line"><span class="attr">php-fpm-monitor-config:</span>  <span class="comment"># 定义zabbix客户端用户配置文件</span></span><br><span class="line">  <span class="string">file.managed:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">/etc/zabbix/zabbix_agentd.conf.d/php_fpm.conf</span></span><br><span class="line"><span class="attr">    - source:</span> <span class="attr">salt://nginx/files/etc/zabbix/zabbix_agentd.conf.d/php_fpm.conf</span></span><br><span class="line"><span class="attr">    - require:</span></span><br><span class="line"><span class="attr">      - file:</span> <span class="string">php-fpm-monitor-script</span></span><br><span class="line"><span class="attr">      - service:</span> <span class="string">php-fpm</span></span><br><span class="line"><span class="attr">    - watch_in:</span></span><br><span class="line"><span class="attr">      - service:</span> <span class="string">zabbix-agent</span></span><br><span class="line"></span><br><span class="line"><span class="attr">nginx-monitor-config:</span>  <span class="comment"># 定义zabbix客户端用户配置文件</span></span><br><span class="line">  <span class="string">file.managed:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">/etc/zabbix/zabbix_agentd.conf.d/nginx.conf</span></span><br><span class="line"><span class="attr">    - source:</span> <span class="attr">salt://nginx/files/etc/zabbix/zabbix_agentd.conf.d/nginx.conf</span></span><br><span class="line"><span class="attr">    - template:</span> <span class="string">jinja</span></span><br><span class="line"><span class="attr">    - require:</span></span><br><span class="line"><span class="attr">      - service:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">    - watch_in:</span></span><br><span class="line"><span class="attr">      - service:</span> <span class="string">zabbix-agent</span></span><br></pre></td></tr></table></figure><p>Salt Minion收集各个角色到/etc/salt/roles中，并生成grains，Salt Mine通过grains roles获取角色信息，当roles改变后通知Salt Mine更新。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">roles:</span></span><br><span class="line">  <span class="string">file.managed:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">/etc/salt/roles</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sync_grains:</span></span><br><span class="line">  <span class="string">module.wait:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">saltutil.sync_grains</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mine_update:</span></span><br><span class="line">  <span class="string">module.run:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">mine.update</span></span><br><span class="line"><span class="attr">    - require:</span></span><br><span class="line"><span class="attr">      - module:</span> <span class="string">sync_grains</span></span><br></pre></td></tr></table></figure><p>/srv/pillar/salt/minion.sls 定义Salt Mine functions：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mine_functions:</span></span><br><span class="line">  <span class="string">test.ping:</span> <span class="string">[]</span></span><br><span class="line">  <span class="string">grains.item:</span> <span class="string">[id,</span> <span class="string">hostgroup,</span> <span class="string">roles,</span> <span class="string">ipv4]</span></span><br></pre></td></tr></table></figure><p>grains类似puppet facer，用于收集客户端相关的信息。本文grains脚本（/srv/salt/_grains/roles.py）通过读取/etc/salt/roles文件生成grains roles:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os.path</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">roles</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">'''define host roles'''</span></span><br><span class="line"></span><br><span class="line">    roles_file = <span class="string">"/etc/salt/roles"</span></span><br><span class="line">    roles_list = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> os.path.isfile(roles_file):</span><br><span class="line">        roles_fd = open(roles_file, <span class="string">"r"</span>)</span><br><span class="line">        <span class="keyword">for</span> eachroles <span class="keyword">in</span> roles_fd:</span><br><span class="line">            roles_list.append(eachroles[:<span class="number">-1</span>])</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">'roles'</span>: roles_list&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">print</span> roles()</span><br></pre></td></tr></table></figure><p>Zabbix api的配置通过/srv/salt/zabbix/api.sls进行管理，主要完成对zapi的安装、Zabbix api角色的添加、Zabbix api配置文件的管理、添加监控脚本的管理以及更新监控配置并添加监控。此配置未实现zabbix模板的自动导入，所以需要手动导入模板(/srv/salt/zabbix/files/etc/zabbix/api/templates/zbx_export_templates.xml)。</p><p><img src="/images/14-06-16/zabbix_api_1.png" alt="zabbix api 1"><br><img src="/images/14-06-16/zabbix_api_2.png" alt="zabbix api 2"></p><p>上面配置读取/srv/pillar/zabbix/api.sls配置文件：</p><p><img src="/images/14-06-16/zabbix_api_pillar.png" alt="zabbix api pillar"></p><p>zabbix-api中定义zabbix url、用户名、密码以及监控配置目录和模板目录等。zabbix-base-templates定义基本监控模板，基本监控模板是需要加到所有机器上的。zabbix-templates定义角色与模板的对应关系。</p><p>添加监控脚本（/srv/salt/zabbix/files/etc/zabbix/api/add_monitors.py ）如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/env python</span></span><br><span class="line"><span class="comment">#coding=utf8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##########################################################</span></span><br><span class="line"><span class="comment"># Add Monitor To Zabbix</span></span><br><span class="line"><span class="comment">##########################################################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys, os.path</span><br><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> zabbix.zapi <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_config</span><span class="params">(config_file)</span>:</span></span><br><span class="line">    <span class="string">'''get config'''</span></span><br><span class="line"></span><br><span class="line">    config_fd = open(config_file)</span><br><span class="line">    config = yaml.load(config_fd)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_get_templates</span><span class="params">(api_obj, templates_list)</span>:</span></span><br><span class="line">    <span class="string">'''get templates ids'''</span></span><br><span class="line"></span><br><span class="line">    templates_id = &#123;&#125;</span><br><span class="line">    templates_result = api_obj.Template.getobjects(&#123;<span class="string">"host"</span>: templates_list&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> each_template <span class="keyword">in</span> templates_result:</span><br><span class="line">        template_name = each_template[<span class="string">'name'</span>]</span><br><span class="line">        template_id = each_template[<span class="string">'templateid'</span>]</span><br><span class="line">        templates_id[template_name] = template_id</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> templates_id</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_get_host_templates</span><span class="params">(api_obj, hostid)</span>:</span></span><br><span class="line">    <span class="string">'''get the host has linked templates'''</span></span><br><span class="line"></span><br><span class="line">    templates_id = []</span><br><span class="line">    templates_result = api_obj.Template.get(&#123;<span class="string">'hostids'</span>: hostid&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> each_template <span class="keyword">in</span> templates_result:</span><br><span class="line">        template_id = each_template[<span class="string">'templateid'</span>]</span><br><span class="line">        templates_id.append(template_id)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> templates_id</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_create_hostgroup</span><span class="params">(api_obj, group_name)</span>:</span></span><br><span class="line">    <span class="string">'''create hostgroup'''</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">##check hostgroup exists</span></span><br><span class="line">    hostgroup_status = api_obj.Hostgroup.exists(&#123;<span class="string">"name"</span>: <span class="string">"%s"</span> %(group_name)&#125;)</span><br><span class="line">    <span class="keyword">if</span> hostgroup_status:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"Hostgroup(%s) is already exists"</span> %(group_name)</span><br><span class="line">        group_id = api_obj.Hostgroup.getobjects(&#123;<span class="string">"name"</span>: <span class="string">"%s"</span> %(group_name)&#125;)[<span class="number">0</span>][<span class="string">"groupid"</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        hostgroup_status = api_obj.Hostgroup.create(&#123;<span class="string">"name"</span>: <span class="string">"%s"</span> %(group_name)&#125;)</span><br><span class="line">        <span class="keyword">if</span> hostgroup_status:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Hostgroup(%s) create success"</span> %(group_name)</span><br><span class="line">            group_id = hostgroup_status[<span class="string">"groupids"</span>][<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            sys.stderr.write(<span class="string">"Hostgroup(%s) create failed, please connect administrator\n"</span> %(group_name))</span><br><span class="line">            exit(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> group_id</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_create_host</span><span class="params">(api_obj, hostname, hostip, group_ids)</span>:</span></span><br><span class="line">    <span class="string">'''create host'''</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">##check host exists</span></span><br><span class="line">    host_status = api_obj.Host.exists(&#123;<span class="string">"name"</span>: <span class="string">"%s"</span> %(hostname)&#125;)</span><br><span class="line">    <span class="keyword">if</span> host_status:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"Host(%s) is already exists"</span> %(hostname)</span><br><span class="line">        hostid = api_obj.Host.getobjects(&#123;<span class="string">"name"</span>: <span class="string">"%s"</span> %(hostname)&#125;)[<span class="number">0</span>][<span class="string">"hostid"</span>]</span><br><span class="line">        <span class="comment">##update host groups</span></span><br><span class="line">        groupids = [group[<span class="string">'groupid'</span>] <span class="keyword">for</span> group <span class="keyword">in</span> api_obj.Host.get(&#123;<span class="string">"output"</span>: [<span class="string">"hostid"</span>], <span class="string">"selectGroups"</span>: <span class="string">"extend"</span>, <span class="string">"filter"</span>: &#123;<span class="string">"host"</span>: [<span class="string">"%s"</span> %(hostname)]&#125;&#125;)[<span class="number">0</span>][<span class="string">'groups'</span>]]</span><br><span class="line">        is_hostgroup_update = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> groupid <span class="keyword">in</span> group_ids:</span><br><span class="line">            <span class="keyword">if</span> groupid <span class="keyword">not</span> <span class="keyword">in</span> groupids:</span><br><span class="line">                is_hostgroup_update = <span class="number">1</span></span><br><span class="line">                groupids.append(groupid)</span><br><span class="line">        <span class="keyword">if</span> is_hostgroup_update == <span class="number">1</span>:</span><br><span class="line">            groups = []</span><br><span class="line">            <span class="keyword">for</span> groupid <span class="keyword">in</span> groupids:</span><br><span class="line">                groups.append(&#123;<span class="string">"groupid"</span>: <span class="string">"%s"</span> %(groupid)&#125;)</span><br><span class="line">            host_status = api_obj.Host.update(&#123;<span class="string">"hostid"</span>: <span class="string">"%s"</span> %(hostid), <span class="string">"groups"</span>: groups&#125;)</span><br><span class="line">            <span class="keyword">if</span> host_status:</span><br><span class="line">                <span class="keyword">print</span> <span class="string">"Host(%s) group update success"</span> %(hostname)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                sys.stderr.write(<span class="string">"Host(%s) group update failed, please connect administrator\n"</span> %(hostname))</span><br><span class="line">                exit(<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        groups = []</span><br><span class="line">        <span class="keyword">for</span> groupid <span class="keyword">in</span> group_ids:</span><br><span class="line">            groups.append(&#123;<span class="string">"groupid"</span>: <span class="string">"%s"</span> %(groupid)&#125;)</span><br><span class="line">        host_status = api_obj.Host.create(&#123;<span class="string">"host"</span>: <span class="string">"%s"</span> %(hostname), <span class="string">"interfaces"</span>: [&#123;<span class="string">"type"</span>: <span class="number">1</span>, <span class="string">"main"</span>: <span class="number">1</span>, <span class="string">"useip"</span>: <span class="number">1</span>, <span class="string">"ip"</span>: <span class="string">"%s"</span> %(hostip), <span class="string">"dns"</span>: <span class="string">""</span>, <span class="string">"port"</span>: <span class="string">"10050"</span>&#125;], <span class="string">"groups"</span>: groups&#125;)</span><br><span class="line">        <span class="keyword">if</span> host_status:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Host(%s) create success"</span> %(hostname)</span><br><span class="line">            hostid = host_status[<span class="string">"hostids"</span>][<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            sys.stderr.write(<span class="string">"Host(%s) create failed, please connect administrator\n"</span> %(hostname))</span><br><span class="line">            exit(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> hostid</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_create_host_usermacro</span><span class="params">(api_obj, hostname, usermacro)</span>:</span></span><br><span class="line">    <span class="string">'''create host usermacro'''</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> macro <span class="keyword">in</span> usermacro.keys():</span><br><span class="line">        value = usermacro[macro]</span><br><span class="line"></span><br><span class="line">    <span class="comment">##check host exists</span></span><br><span class="line">    host_status = api_obj.Host.exists(&#123;<span class="string">"name"</span>: <span class="string">"%s"</span> %(hostname)&#125;)</span><br><span class="line">    <span class="keyword">if</span> host_status:</span><br><span class="line">        hostid = api_obj.Host.getobjects(&#123;<span class="string">"name"</span>: <span class="string">"%s"</span> %(hostname)&#125;)[<span class="number">0</span>][<span class="string">"hostid"</span>]</span><br><span class="line">        <span class="comment">##check usermacro exists</span></span><br><span class="line">        usermacros = api_obj.Usermacro.get(&#123;<span class="string">"output"</span>: <span class="string">"extend"</span>, <span class="string">"hostids"</span>: <span class="string">"%s"</span> %(hostid)&#125;)</span><br><span class="line">        is_macro_exists = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> usermacros:</span><br><span class="line">            <span class="keyword">for</span> usermacro <span class="keyword">in</span> usermacros:</span><br><span class="line">                <span class="keyword">if</span> usermacro[<span class="string">"macro"</span>] == macro:</span><br><span class="line">                    is_macro_exists = <span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> usermacro[<span class="string">"value"</span>] == str(value):</span><br><span class="line">                        <span class="keyword">print</span> <span class="string">"Host(%s) usermacro(%s) is already exists"</span> %(hostname, macro)</span><br><span class="line">                        hostmacroid = usermacro[<span class="string">"hostmacroid"</span>]</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="comment">##usermacro exists, but value is not the same, update</span></span><br><span class="line">                        usermacro_status = api_obj.Usermacro.update(&#123;<span class="string">"hostmacroid"</span>: usermacro[<span class="string">"hostmacroid"</span>], <span class="string">"value"</span>: <span class="string">"%s"</span> %(value)&#125;)</span><br><span class="line">                        <span class="keyword">if</span> usermacro_status:</span><br><span class="line">                            <span class="keyword">print</span> <span class="string">"Host(%s) usermacro(%s) update success"</span> %(hostname, macro)</span><br><span class="line">                            hostmacroid = usermacro_status[<span class="string">"hostmacroids"</span>][<span class="number">0</span>]</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            sys.stderr.write(<span class="string">"Host(%s) usermacro(%s) update failed, please connect administrator\n"</span> %(hostname, macro))</span><br><span class="line">                            exit(<span class="number">3</span>)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> is_macro_exists == <span class="number">0</span>:</span><br><span class="line">            usermacro_status = api_obj.Usermacro.create(&#123;<span class="string">"hostid"</span>: <span class="string">"%s"</span> %(hostid), <span class="string">"macro"</span>: <span class="string">"%s"</span> %(macro), <span class="string">"value"</span>: <span class="string">"%s"</span> %(value)&#125;)</span><br><span class="line">            <span class="keyword">if</span> usermacro_status:</span><br><span class="line">                <span class="keyword">print</span> <span class="string">"Host(%s) usermacro(%s) create success"</span> %(hostname, macro)</span><br><span class="line">                hostmacroid = usermacro_status[<span class="string">"hostmacroids"</span>][<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                sys.stderr.write(<span class="string">"Host(%s) usermacro(%s) create failed, please connect administrator\n"</span> %(hostname, macro))</span><br><span class="line">                exit(<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        sys.stderr.write(<span class="string">"Host(%s) is not exists"</span> %(hostname))</span><br><span class="line">        exit(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> hostmacroid</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_link_templates</span><span class="params">(api_obj, hostname, hostid, templates_list, donot_unlink_templates)</span>:</span></span><br><span class="line">    <span class="string">'''link templates'''</span></span><br><span class="line"></span><br><span class="line">    all_templates = []</span><br><span class="line">    clear_templates = []</span><br><span class="line">    <span class="comment">##get templates id</span></span><br><span class="line">    <span class="keyword">if</span> donot_unlink_templates <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        donot_unlink_templates_id = &#123;&#125;</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        donot_unlink_templates_id = _get_templates(api_obj, donot_unlink_templates)</span><br><span class="line">    templates_id = _get_templates(api_obj, templates_list)</span><br><span class="line">    <span class="comment">##get the host currently linked tempaltes</span></span><br><span class="line">    curr_linked_templates = _get_host_templates(api_obj, hostid)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> each_template <span class="keyword">in</span> templates_id:</span><br><span class="line">        <span class="keyword">if</span> templates_id[each_template] <span class="keyword">in</span> curr_linked_templates:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Host(%s) is already linked %s"</span> %(hostname, each_template)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Host(%s) will link %s"</span> %(hostname, each_template)</span><br><span class="line">        all_templates.append(templates_id[each_template])</span><br><span class="line"></span><br><span class="line">    <span class="comment">##merge templates list</span></span><br><span class="line">    <span class="keyword">for</span> each_template <span class="keyword">in</span> curr_linked_templates:</span><br><span class="line">        <span class="keyword">if</span> each_template <span class="keyword">not</span> <span class="keyword">in</span> all_templates:</span><br><span class="line">            <span class="keyword">if</span> each_template <span class="keyword">in</span> donot_unlink_templates_id.values():</span><br><span class="line">                all_templates.append(each_template)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                clear_templates.append(each_template)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">##convert to zabbix api style</span></span><br><span class="line">    templates_list = []</span><br><span class="line">    clear_templates_list = []</span><br><span class="line">    <span class="keyword">for</span> each_template <span class="keyword">in</span> all_templates:</span><br><span class="line">        templates_list.append(&#123;<span class="string">"templateid"</span>: each_template&#125;)</span><br><span class="line">    <span class="keyword">for</span> each_template <span class="keyword">in</span> clear_templates:</span><br><span class="line">        clear_templates_list.append(&#123;<span class="string">"templateid"</span>: each_template&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">##update host to link templates</span></span><br><span class="line">    update_status = api_obj.Host.update(&#123;<span class="string">"hostid"</span>: hostid, <span class="string">"templates"</span>: templates_list&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> update_status:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"Host(%s) link templates success"</span> %(hostname)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"Host(%s) link templates failed, please contact administrator"</span> %(hostname)</span><br><span class="line"></span><br><span class="line">    <span class="comment">##host unlink templates</span></span><br><span class="line">    <span class="keyword">if</span> clear_templates_list != []:</span><br><span class="line">        clear_status = api_obj.Host.update(&#123;<span class="string">"hostid"</span>: hostid, <span class="string">"templates_clear"</span>: clear_templates_list&#125;)</span><br><span class="line">        <span class="keyword">if</span> clear_status:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Host(%s) unlink templates success"</span> %(hostname)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Host(%s) unlink templates failed, please contact administrator"</span> %(hostname)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">'''main function'''</span></span><br><span class="line"></span><br><span class="line">    hosts = []</span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) &gt; <span class="number">1</span>:</span><br><span class="line">        hosts = sys.argv[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">    config_dir = os.path.dirname(sys.argv[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> config_dir:</span><br><span class="line">        config_file = config_dir+<span class="string">"/"</span>+<span class="string">"config.yaml"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        config_file = <span class="string">"config.yaml"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">###get config options</span></span><br><span class="line">    config = _config(config_file)</span><br><span class="line">    Monitor_DIR = config[<span class="string">"Monitors_DIR"</span>]</span><br><span class="line">    Zabbix_URL = config[<span class="string">"Zabbix_URL"</span>]</span><br><span class="line">    Zabbix_User = config[<span class="string">"Zabbix_User"</span>]</span><br><span class="line">    Zabbix_Pass = config[<span class="string">"Zabbix_Pass"</span>]</span><br><span class="line">    Zabbix_Donot_Unlink_Template = config[<span class="string">"Zabbix_Donot_Unlink_Template"</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> hosts:</span><br><span class="line">        hosts = os.listdir(Monitor_DIR)</span><br><span class="line"></span><br><span class="line">    <span class="comment">###Login Zabbix</span></span><br><span class="line">    zapi = ZabbixAPI(url=Zabbix_URL, user=Zabbix_User, password=Zabbix_Pass)</span><br><span class="line">    zapi.login()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> each_host <span class="keyword">in</span> hosts:</span><br><span class="line">        each_config_fd = open(Monitor_DIR+<span class="string">"/"</span>+each_host)</span><br><span class="line">        each_config = yaml.load(each_config_fd)</span><br><span class="line"></span><br><span class="line">        <span class="comment">##Get config options</span></span><br><span class="line">        each_ip = each_config[<span class="string">"IP"</span>]</span><br><span class="line">        hostgroups = each_config[<span class="string">"Hostgroup"</span>]</span><br><span class="line">        each_templates = each_config[<span class="string">"Templates"</span>]</span><br><span class="line">        each_usermacros = each_config[<span class="string">"Usermacros"</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment">###Create Hostgroup</span></span><br><span class="line">        groupids = []</span><br><span class="line">        <span class="keyword">for</span> each_hostgroup <span class="keyword">in</span> hostgroups:</span><br><span class="line">            group_id = _create_hostgroup(zapi, each_hostgroup)</span><br><span class="line">            groupids.append(group_id)</span><br><span class="line"></span><br><span class="line">        <span class="comment">##Create Host</span></span><br><span class="line">        hostid = _create_host(zapi, each_host, each_ip, groupids)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> each_usermacros:</span><br><span class="line">            <span class="comment">##Create Host Usermacros</span></span><br><span class="line">            <span class="keyword">for</span> usermacro <span class="keyword">in</span> each_usermacros:</span><br><span class="line">                <span class="keyword">if</span> usermacro:</span><br><span class="line">                    usermacrosid = _create_host_usermacro(zapi, each_host, usermacro)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> each_templates:</span><br><span class="line">            <span class="comment">##Link tempaltes</span></span><br><span class="line">            _link_templates(zapi, each_host, hostid, each_templates, Zabbix_Donot_Unlink_Template)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    _main()</span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.zabbix.com/documentation/2.2/manual/api" target="_blank" rel="noopener">zabbix api</a></p><p>此脚本读取的配置文件（/srv/salt/zabbix/files/etc/zabbix/api/config.yaml）:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Monitors_DIR:</span> <span class="string">&#123;&#123;Monitors_DIR&#125;&#125;</span></span><br><span class="line"><span class="attr">Templates_DIR:</span> <span class="string">&#123;&#123;Templates_DIR&#125;&#125;</span></span><br><span class="line"><span class="attr">Zabbix_URL:</span> <span class="string">&#123;&#123;Zabbix_URL&#125;&#125;</span></span><br><span class="line"><span class="attr">Zabbix_User:</span> <span class="string">&#123;&#123;Zabbix_User&#125;&#125;</span></span><br><span class="line"><span class="attr">Zabbix_Pass:</span> <span class="string">&#123;&#123;Zabbix_Pass&#125;&#125;</span></span><br><span class="line"><span class="attr">Zabbix_Donot_Unlink_Template:</span>  <span class="comment"># zabbix自动维护连接的模板，手动连接到主机上的模板需要在此处列出</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">'Template OS Linux'</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      本文以一个小的电商网站（www.mall.com）为例，讲述Saltstack在真实场景中的应用。
    
    </summary>
    
      <category term="Saltstack" scheme="https://istone.dev/categories/Saltstack/"/>
    
    
      <category term="devops" scheme="https://istone.dev/tags/devops/"/>
    
      <category term="saltstack" scheme="https://istone.dev/tags/saltstack/"/>
    
      <category term="salt" scheme="https://istone.dev/tags/salt/"/>
    
  </entry>
  
  <entry>
    <title>Saltstack：代码部署系统搭建</title>
    <link href="https://istone.dev/2014/06/15/saltstack-publish/"/>
    <id>https://istone.dev/2014/06/15/saltstack-publish/</id>
    <published>2014-06-15T02:00:00.000Z</published>
    <updated>2019-06-27T02:21:27.023Z</updated>
    
    <content type="html"><![CDATA[<p>部署系统基于Salt Runner编写，Salt Runner使用salt-run命令执行的命令行工具，可以通过调用Salt API很轻松构建。Salt Runner与Salt的执行模块很像，但是在Salt Master上运行而非Salt Minion上。</p><h4 id="配置Salt-Master"><a href="#配置Salt-Master" class="headerlink" title="配置Salt Master"></a>配置Salt Master</h4><p>配置文件（/etc/salt/master.d/publish.conf）如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">svn:</span></span><br><span class="line"><span class="attr">  username:</span> <span class="string">'publish'</span>  <span class="comment"># 定义svn用户名，用于检出代码</span></span><br><span class="line"><span class="attr">  password:</span> <span class="string">'#1qaz@WSX#ht'</span>  <span class="comment"># svn密码</span></span><br><span class="line"><span class="attr">publish:</span></span><br><span class="line"><span class="attr">    master:</span> <span class="string">'admin.grid.mall.com'</span>  <span class="comment"># salt master主机名</span></span><br><span class="line"><span class="attr">    cwd:</span> <span class="string">'/data1/vhosts'</span>  <span class="comment"># 代码检出目录</span></span><br><span class="line"><span class="attr">projects:</span></span><br><span class="line">  <span class="string">www.mall.com:</span>  <span class="comment"># 定义项目名</span></span><br><span class="line"><span class="attr">    remote:</span> <span class="string">'svn://172.16.100.81/www.mall.com'</span> <span class="comment"># svn存放路径</span></span><br><span class="line"><span class="attr">    target:</span>  <span class="comment"># 定义代码部署列表 ip::rsync模块</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">'172.16.100.21::www_mall_com'</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">'172.16.100.22::www_mall_com'</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">'172.16.100.23::www_mall_com'</span></span><br></pre></td></tr></table></figure><p>另外还要配置runner的放置目录：runner_dirs: [/srv/salt/_runners]，配置完成后要重启Puppet master。</p><a id="more"></a><h4 id="Web前端部署rsync服务"><a href="#Web前端部署rsync服务" class="headerlink" title="Web前端部署rsync服务"></a>Web前端部署rsync服务</h4><p>rsync服务由/srv/salt/rsync模块进行管理，rsync配置文件(etc/rsyncd.conf)如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># File Managed by Salt</span></span><br><span class="line"></span><br><span class="line"><span class="string">uid</span> <span class="string">=</span> <span class="string">nobody</span></span><br><span class="line"><span class="string">gid</span> <span class="string">=</span> <span class="string">nobody</span></span><br><span class="line"><span class="string">use</span> <span class="string">chroot</span> <span class="string">=</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">max</span> <span class="string">connections</span> <span class="string">=</span> <span class="number">150</span></span><br><span class="line"><span class="string">pid</span> <span class="string">file</span> <span class="string">=</span> <span class="string">/var/run/rsyncd.pid</span></span><br><span class="line"><span class="string">log</span> <span class="string">file</span> <span class="string">=</span> <span class="string">/var/log/rsyncd.log</span></span><br><span class="line"><span class="string">transfer</span> <span class="string">logging</span> <span class="string">=</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">log</span> <span class="string">format</span> <span class="string">=</span> <span class="string">%t</span> <span class="string">%a</span> <span class="string">%m</span> <span class="string">%f</span> <span class="string">%b</span></span><br><span class="line"><span class="string">syslog</span> <span class="string">facility</span> <span class="string">=</span> <span class="string">local3</span></span><br><span class="line"><span class="string">timeout</span> <span class="string">=</span> <span class="number">300</span></span><br><span class="line"><span class="string">incoming</span> <span class="string">chmod</span> <span class="string">=</span> <span class="string">Du=rwx,Dog=rx,Fu=rw,Fgo=r</span></span><br><span class="line"><span class="string">hosts</span> <span class="string">allow=172.16.100.0/24</span></span><br><span class="line"></span><br><span class="line"><span class="string">[www_mall_com]</span></span><br><span class="line"><span class="string">path=/data1/vhosts/www.mall.com/htdocs/</span></span><br><span class="line"><span class="string">read</span> <span class="string">only=no</span></span><br></pre></td></tr></table></figure><h4 id="编写runner脚本"><a href="#编写runner脚本" class="headerlink" title="编写runner脚本"></a>编写runner脚本</h4><p>部署系统在Salt Master上把代码从SVN中检出，通过rsync命令部署到web前端。runner脚本(/srv/salt/_runners/publish.py)如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Functions to publish code on the master</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Import salt libs</span></span><br><span class="line"><span class="keyword">import</span> salt.client</span><br><span class="line"><span class="keyword">import</span> salt.output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">push</span><span class="params">(project, output=True)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    publish code to web server.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    CLI Example:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .. code-block:: bash</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        salt-run publish.push project</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line"></span><br><span class="line">    client = salt.client.LocalClient(__opts__[<span class="string">'conf_file'</span>])</span><br><span class="line">    ret = client.cmd(__opts__[<span class="string">'publish'</span>][<span class="string">'master'</span>],</span><br><span class="line">                      <span class="string">'svn.checkout'</span>,</span><br><span class="line">                       [</span><br><span class="line">                         __opts__[<span class="string">'publish'</span>][<span class="string">'cwd'</span>],</span><br><span class="line">                         __opts__[<span class="string">'projects'</span>][project][<span class="string">'remote'</span>]</span><br><span class="line">                       ],</span><br><span class="line">                       kwarg=&#123;</span><br><span class="line">                               <span class="string">'target'</span>:project,</span><br><span class="line">                               <span class="string">'username'</span>:__opts__[<span class="string">'svn'</span>][<span class="string">'username'</span>],</span><br><span class="line">                               <span class="string">'password'</span>:__opts__[<span class="string">'svn'</span>][<span class="string">'password'</span>]</span><br><span class="line">                             &#125;</span><br><span class="line">                    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ret:</span><br><span class="line">        msg = <span class="string">'URL: %s\n%s'</span> %(__opts__[<span class="string">'projects'</span>][project][<span class="string">'remote'</span>], ret[__opts__[<span class="string">'publish'</span>][<span class="string">'master'</span>]])</span><br><span class="line">        ret = &#123;<span class="string">'Check out code'</span>: msg&#125;</span><br><span class="line">    <span class="keyword">if</span> output:</span><br><span class="line">        salt.output.display_output(ret, <span class="string">''</span>, __opts__)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> target <span class="keyword">in</span> __opts__[<span class="string">'projects'</span>][project][<span class="string">'target'</span>]:</span><br><span class="line">        cmd = <span class="string">'/usr/bin/rsync -avz --exclude=".svn" %s/%s/trunk/* %s/'</span> %(__opts__[<span class="string">'publish'</span>][<span class="string">'cwd'</span>], project, target)</span><br><span class="line">        ret[target] = client.cmd(__opts__[<span class="string">'publish'</span>][<span class="string">'master'</span>],</span><br><span class="line">                           <span class="string">'cmd.run'</span>,</span><br><span class="line">                           [</span><br><span class="line">                             cmd,</span><br><span class="line">                           ],</span><br><span class="line">                         )</span><br><span class="line"></span><br><span class="line">        title = <span class="string">'\nSending file to %s'</span> %target.split(<span class="string">':'</span>)[<span class="number">0</span>]</span><br><span class="line">        ret = &#123;title: ret[target][__opts__[<span class="string">'publish'</span>][<span class="string">'master'</span>]]&#125;</span><br><span class="line">        <span class="keyword">if</span> output:</span><br><span class="line">            salt.output.display_output(ret, <span class="string">''</span>, __opts__)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ret</span><br></pre></td></tr></table></figure><p>注意，一个项目（svn://172.16.100.81/<a href="http://www.mall.com" target="_blank" rel="noopener">www.mall.com</a> ）通常会建立三个SVN子目录：trunk、branches、tags，上面脚本推送时只会将trunk目录下的代码部署到web前端。</p><h4 id="代码部署"><a href="#代码部署" class="headerlink" title="代码部署"></a>代码部署</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># salt-run publish.push www.mall.com</span></span><br></pre></td></tr></table></figure><p>publish为上文runner脚本名，push为此脚本中定义的推送函数，<a href="http://www.mall.com为salt" target="_blank" rel="noopener">www.mall.com为salt</a> master中定义的项目名。</p><p>参考：<br><a href="http://docs.saltstack.com/en/latest/ref/runners/" target="_blank" rel="noopener">Salt Runners</a><br><a href="http://docs.saltstack.com/en/latest/ref/clients/index.html" target="_blank" rel="noopener">Python client API</a></p>]]></content>
    
    <summary type="html">
    
      本文以一个小的电商网站（www.mall.com）为例，讲述Saltstack在真实场景中的应用。
    
    </summary>
    
      <category term="Saltstack" scheme="https://istone.dev/categories/Saltstack/"/>
    
    
      <category term="devops" scheme="https://istone.dev/tags/devops/"/>
    
      <category term="saltstack" scheme="https://istone.dev/tags/saltstack/"/>
    
      <category term="salt" scheme="https://istone.dev/tags/salt/"/>
    
  </entry>
  
  <entry>
    <title>Saltstack：服务部署</title>
    <link href="https://istone.dev/2014/06/14/saltstack-service/"/>
    <id>https://istone.dev/2014/06/14/saltstack-service/</id>
    <published>2014-06-14T02:00:00.000Z</published>
    <updated>2019-06-27T02:21:43.410Z</updated>
    
    <content type="html"><![CDATA[<p>本文以web服务器为例介绍salt服务的部署。把不同的服务组织成不同的角色，然后将角色应用到不同的节点上。通过角色的划分能够清晰的对不同的服务模块进行组织，所有角色的配置放到/srv/salt/roles下，角色用到的相关变量放到/srv/pillar/roles和/srv/pillar/nodes下，其中/srv/pillar/nodes下放置与具体节点相关的变量。</p><h3 id="角色与配置文件"><a href="#角色与配置文件" class="headerlink" title="角色与配置文件"></a>角色与配置文件</h3><p>/srv/salt/roles/web.sls配置如下，包括nginx模块、rsync模块、limits模块和nfs.client：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">nginx</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">rsync</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">limits</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">nfs.client</span></span><br></pre></td></tr></table></figure><p>变量/srv/pillar/roles/web.sls如下，没有单独应用到节点的变量:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hostgroup:</span> <span class="string">web</span>  <span class="comment"># 定义zabbix分组，具体见后文的自动化监控一节</span></span><br><span class="line"><span class="attr">vhostsdir:</span> <span class="string">/data1/vhosts</span>  <span class="comment"># 代码发布目录</span></span><br><span class="line"><span class="attr">vhostscachedir:</span> <span class="string">/data1/cache</span>  <span class="comment"># 程序临时目录</span></span><br><span class="line"><span class="attr">logdir:</span> <span class="string">/data1/logs</span>  <span class="comment"># nginx日志目录</span></span><br><span class="line"><span class="attr">vhosts:</span>  <span class="comment"># 虚拟主机名，用于创建对用的代码发布目录</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">www.mall.com</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">static.mall.com</span></span><br><span class="line"><span class="attr">limit_users:</span>  <span class="comment"># 对用户打开文件数做设置</span></span><br><span class="line"><span class="attr">  nginx:</span></span><br><span class="line"><span class="attr">    limit_hard:</span> <span class="number">65535</span></span><br><span class="line"><span class="attr">    limit_soft:</span> <span class="number">65535</span></span><br><span class="line"><span class="attr">    limit_type:</span> <span class="string">nofile</span></span><br><span class="line"><span class="attr">mounts:</span> <span class="comment"># nfs共享存储挂载相关配置</span></span><br><span class="line">  <span class="string">/data1/vhosts/static.mall.com/htdocs:</span></span><br><span class="line"><span class="attr">    device:</span> <span class="number">172.16</span><span class="number">.100</span><span class="number">.71</span><span class="string">:/data1/share</span></span><br><span class="line"><span class="attr">    fstype:</span> <span class="string">nfs</span></span><br><span class="line"><span class="attr">    mkmnt:</span> <span class="literal">True</span></span><br><span class="line"><span class="attr">    opts:</span> <span class="string">async,noatime,noexec,nosuid,soft,timeo=3,retrans=3,intr,retry=3,rsize=16384,wsize=16384</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="Nginx-PHP配置"><a href="#Nginx-PHP配置" class="headerlink" title="Nginx+PHP配置"></a>Nginx+PHP配置</h3><p>管理模块：/srv/salt/nginx/<br>nginx配置文件：/srv/salt/nginx/files/etc/nginx/，其中包括主配置文件、虚拟主机配置文件、和环境变量配置文件。<br>php配置文件：主配置文件：/srv/salt/nginx/files/etc/php.ini 模块配置文件：/srv/salt/nginx/files/etc/php.d/<br>php-fpm配置文件：主配置文件：/srv/salt/nginx/files/etc/php-fpm.conf 其他配置文件：/srv/salt/nginx/files/etc/php-fpm.d/<br>角色配置：/srv/pillar/roles/web.sls</p><h4 id="详细说明"><a href="#详细说明" class="headerlink" title="详细说明"></a>详细说明</h4><p>/srv/salt/nginx/init.sls用于组织整个nginx模块：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">nginx.server</span>  <span class="comment"># 包含nginx相关配置</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">nginx.php</span>  <span class="comment"># 包含php相关配置</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">nginx.monitor</span> <span class="comment"># 包含监控相关配置</span></span><br></pre></td></tr></table></figure><p>/srv/salt/nginx/server.sls用于配置nginx服务：</p><p>定义nginx相关配置，主要包括安装nginx软件包配置相关配置文件，并启动nginx服务。<br><img src="/images/14-06-14/nginx_server_1.png" alt="nginx server 1"></p><p>创建日志目录、代码发布目录、代码缓存目录。并配置服务角色，角色也用于对服务的监控，详见后文自动化监控。<br><img src="/images/14-06-14/nginx_server_2.png" alt="nginx server 2"></p><p>/srv/salt/nginx/php.sls用于配置php服务：</p><p>定义php相关配置，主要包括安装php软件包配置相关配置文件，启动php-fpm服务，并配置服务角色。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">php-fpm:</span></span><br><span class="line"><span class="attr">  pkg:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">php-fpm</span></span><br><span class="line"><span class="attr">    - pkgs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">php-fpm</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">php-common</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">php-cli</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">php-devel</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">php-pecl-memcache</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">php-pecl-memcached</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">php-gd</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">php-pear</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">php-mbstring</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">php-mysql</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">php-xml</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">php-bcmath</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">php-pdo</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">installed</span></span><br><span class="line"><span class="attr">  service:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">running</span></span><br><span class="line"><span class="attr">    - require:</span></span><br><span class="line"><span class="attr">      - pkg:</span> <span class="string">php-fpm</span></span><br><span class="line"><span class="attr">    - watch:</span></span><br><span class="line"><span class="attr">      - pkg:</span> <span class="string">php-fpm</span></span><br><span class="line"><span class="attr">      - file:</span> <span class="string">/etc/php.ini</span></span><br><span class="line"><span class="attr">      - file:</span> <span class="string">/etc/php.d/</span></span><br><span class="line"><span class="attr">      - file:</span> <span class="string">/etc/php-fpm.conf</span></span><br><span class="line"><span class="attr">      - file:</span> <span class="string">/etc/php-fpm.d/</span></span><br><span class="line"></span><br><span class="line"><span class="string">/etc/php.ini:</span></span><br><span class="line">  <span class="string">file.managed:</span></span><br><span class="line"><span class="attr">    - source:</span> <span class="attr">salt://nginx/files/etc/php.ini</span></span><br><span class="line"><span class="attr">    - user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - group:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - mode:</span> <span class="number">644</span></span><br><span class="line"></span><br><span class="line"><span class="string">/etc/php.d/:</span></span><br><span class="line">  <span class="string">file.recurse:</span></span><br><span class="line"><span class="attr">    - source:</span> <span class="attr">salt://nginx/files/etc/php.d/</span></span><br><span class="line"><span class="attr">    - user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - group:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - dir_mode:</span> <span class="number">755</span></span><br><span class="line"><span class="attr">    - file_mode:</span> <span class="number">644</span></span><br><span class="line"></span><br><span class="line"><span class="string">/etc/php-fpm.conf:</span></span><br><span class="line">  <span class="string">file.managed:</span></span><br><span class="line"><span class="attr">    - source:</span> <span class="attr">salt://nginx/files/etc/php-fpm.conf</span></span><br><span class="line"><span class="attr">    - user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - group:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - mode:</span> <span class="number">644</span></span><br><span class="line"></span><br><span class="line"><span class="string">/etc/php-fpm.d/:</span></span><br><span class="line">  <span class="string">file.recurse:</span></span><br><span class="line"><span class="attr">    - source:</span> <span class="attr">salt://nginx/files/etc/php-fpm.d/</span></span><br><span class="line"><span class="attr">    - user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - group:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - dir_mode:</span> <span class="number">755</span></span><br><span class="line"><span class="attr">    - file_mode:</span> <span class="number">644</span></span><br><span class="line"></span><br><span class="line"><span class="attr">php-fpm-role:</span>  <span class="comment"># 定义php-fpm角色</span></span><br><span class="line">  <span class="string">file.append:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">/etc/salt/roles</span></span><br><span class="line"><span class="attr">    - text:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">'php-fpm'</span></span><br><span class="line"><span class="attr">    - require:</span></span><br><span class="line"><span class="attr">      - file:</span> <span class="string">roles</span></span><br><span class="line"><span class="attr">      - service:</span> <span class="string">php-fpm</span></span><br><span class="line"><span class="attr">      - service:</span> <span class="string">salt-minion</span></span><br><span class="line"><span class="attr">    - watch_in:</span></span><br><span class="line"><span class="attr">      - module:</span> <span class="string">sync_grains</span></span><br></pre></td></tr></table></figure><p>/srv/salt/nginx/monitor.sls用于配置对服务的监控：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">zabbix.agent</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">nginx</span></span><br><span class="line"></span><br><span class="line"><span class="attr">nginx-monitor:</span></span><br><span class="line">  <span class="string">pkg.installed:</span>  <span class="comment"># 安装脚本依赖的软件包</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">perl-libwww-perl</span></span><br><span class="line"></span><br><span class="line"><span class="attr">php-fpm-monitor-script:</span>  <span class="comment"># 管理监控脚本，如果脚本存放目录不存在自动创建</span></span><br><span class="line">  <span class="string">file.managed:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">/etc/zabbix/ExternalScripts/php-fpm_status.pl</span></span><br><span class="line"><span class="attr">    - source:</span> <span class="attr">salt://nginx/files/etc/zabbix/ExternalScripts/php-fpm_status.pl</span></span><br><span class="line"><span class="attr">    - user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - group:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - mode:</span> <span class="number">755</span></span><br><span class="line"><span class="attr">    - require:</span></span><br><span class="line"><span class="attr">      - service:</span> <span class="string">php-fpm</span></span><br><span class="line"><span class="attr">      - pkg:</span> <span class="string">nginx-monitor</span></span><br><span class="line"><span class="attr">      - cmd:</span> <span class="string">php-fpm-monitor-script</span></span><br><span class="line">  <span class="string">cmd.run:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">mkdir</span> <span class="bullet">-p</span> <span class="string">/etc/zabbix/ExternalScripts</span></span><br><span class="line"><span class="attr">    - unless:</span> <span class="string">test</span> <span class="bullet">-d</span> <span class="string">/etc/zabbix/ExternalScripts</span></span><br><span class="line"></span><br><span class="line"><span class="attr">php-fpm-monitor-config:</span>  <span class="comment"># 定义zabbix客户端用户配置文件</span></span><br><span class="line">  <span class="string">file.managed:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">/etc/zabbix/zabbix_agentd.conf.d/php_fpm.conf</span></span><br><span class="line"><span class="attr">    - source:</span> <span class="attr">salt://nginx/files/etc/zabbix/zabbix_agentd.conf.d/php_fpm.conf</span></span><br><span class="line"><span class="attr">    - require:</span></span><br><span class="line"><span class="attr">      - file:</span> <span class="string">php-fpm-monitor-script</span></span><br><span class="line"><span class="attr">      - service:</span> <span class="string">php-fpm</span></span><br><span class="line"><span class="attr">    - watch_in:</span></span><br><span class="line"><span class="attr">      - service:</span> <span class="string">zabbix-agent</span></span><br><span class="line"></span><br><span class="line"><span class="attr">nginx-monitor-config:</span>  <span class="comment"># 定义zabbix客户端用户配置文件</span></span><br><span class="line">  <span class="string">file.managed:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">/etc/zabbix/zabbix_agentd.conf.d/nginx.conf</span></span><br><span class="line"><span class="attr">    - source:</span> <span class="attr">salt://nginx/files/etc/zabbix/zabbix_agentd.conf.d/nginx.conf</span></span><br><span class="line"><span class="attr">    - template:</span> <span class="string">jinja</span></span><br><span class="line"><span class="attr">    - require:</span></span><br><span class="line"><span class="attr">      - service:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">    - watch_in:</span></span><br><span class="line"><span class="attr">      - service:</span> <span class="string">zabbix-agent</span></span><br></pre></td></tr></table></figure><p>其他角色的部署跟web相似，不一一列出。</p>]]></content>
    
    <summary type="html">
    
      本文以一个小的电商网站（www.mall.com）为例，讲述Saltstack在真实场景中的应用。
    
    </summary>
    
      <category term="Saltstack" scheme="https://istone.dev/categories/Saltstack/"/>
    
    
      <category term="devops" scheme="https://istone.dev/tags/devops/"/>
    
      <category term="saltstack" scheme="https://istone.dev/tags/saltstack/"/>
    
      <category term="salt" scheme="https://istone.dev/tags/salt/"/>
    
  </entry>
  
  <entry>
    <title>Saltstack：基础服务部署</title>
    <link href="https://istone.dev/2014/05/29/saltstack-base-service/"/>
    <id>https://istone.dev/2014/05/29/saltstack-base-service/</id>
    <published>2014-05-29T02:00:00.000Z</published>
    <updated>2019-06-27T02:20:20.943Z</updated>
    
    <content type="html"><![CDATA[<p>对基础服务的管理包括配置管理系统、用户账号管理、yum配置管理、hosts文件管理、时间同步管理、DNS配置管理。</p><h3 id="配置管理系统"><a href="#配置管理系统" class="headerlink" title="配置管理系统"></a>配置管理系统</h3><p>配置管理系统使用模块化设计，每个服务一个模块，将多个模块组织到一起形成角色（/srv/salt/roles/）。所有模块放置到：/srv/salt下，入口配置文件为：/srv/salt/top.sls。模块使用的变量放置到：/srv/pillar，入口配置文件：/srv/pillar/top.sls。针对变量的作用域不同，将变量分为三级级，一级应用于模块（/srv/pillar/模块名），一级应用于角色（/srv/pillar/roles/），一级应用于主机节点（/srv/pillar/nodes）。具体配置在此不一一列出，具体参见salt配置文件。</p><a id="more"></a><p>入口配置/srv/salt/top.sls，直接引用各种角色：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">base:</span></span><br><span class="line">  <span class="string">'*'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">roles.common</span></span><br><span class="line">  <span class="string">'admin.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">roles.admin</span></span><br><span class="line">  <span class="string">'ha.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">roles.ha</span></span><br><span class="line">  <span class="string">'web*.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">roles.web</span></span><br><span class="line">  <span class="string">'cache*.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">roles.cache</span></span><br><span class="line">  <span class="string">'mc*.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">roles.mc</span></span><br><span class="line">  <span class="string">'db*.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">roles.db</span></span><br><span class="line">  <span class="string">'search*.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">roles.search</span></span><br><span class="line">  <span class="string">'storage*'</span><span class="string">.grid.mall.com':</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">roles.storage</span></span><br></pre></td></tr></table></figure><p>变量入口配置文件/srv/pillar/top.sls：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">base:</span></span><br><span class="line">  <span class="string">'*'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">roles.common</span></span><br><span class="line">  <span class="comment"># 引用角色级变量</span></span><br><span class="line">  <span class="comment"># 模块级变量在角色级变量中引用</span></span><br><span class="line">  <span class="string">'admin.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">roles.admin</span></span><br><span class="line">  <span class="string">'ha.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">roles.ha</span></span><br><span class="line">  <span class="string">'web*.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">roles.web</span></span><br><span class="line">  <span class="string">'cache*.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">roles.cache</span></span><br><span class="line">  <span class="string">'mc*.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">roles.mc</span></span><br><span class="line">  <span class="string">'db*.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">roles.db</span></span><br><span class="line">  <span class="string">'search*.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">roles.search</span></span><br><span class="line">  <span class="string">'storage*'</span><span class="string">.grid.mall.com':</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">roles.storage</span></span><br><span class="line">  <span class="comment"># 引用节点级变量</span></span><br><span class="line">  <span class="string">'ha1.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">nodes.ha1</span></span><br><span class="line">  <span class="string">'ha2.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">nodes.ha2</span></span><br><span class="line">  <span class="string">'mc1.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">nodes.mc1</span></span><br><span class="line">  <span class="string">'mc2.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">nodes.mc2</span></span><br><span class="line">  <span class="string">'db1.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">nodes.db1</span></span><br><span class="line">  <span class="string">'db2.grid.mall.com'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">nodes.db2</span></span><br></pre></td></tr></table></figure><h3 id="用户账号管理"><a href="#用户账号管理" class="headerlink" title="用户账号管理"></a>用户账号管理</h3><p>用户管理模块：/srv/salt/users</p><p>此模块用到pillar，pillar和grains都可以用来获取变量，但是grains偏向于获取客户端相关信息，比如客户端硬件架构、cpu核数、操作系统版本等信息，相当于puppet的facter；pillar用于定义用户变量，通过pillar变量的传递，使salt state模块易于重用，相当于puppet的hiera。使用pillar变量之前需要执行salt ‘*’ saltutil.refresh_pillar命令使变量生效。使用命令salt ‘admin.grid.mall.com’ pillar.item users获取users变量：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># salt 'admin.grid.mall.com' pillar.item users</span></span><br><span class="line"><span class="string">admin.grid.mall.com:</span></span><br><span class="line"><span class="bullet">    -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">    users:</span></span><br><span class="line"><span class="bullet">        -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">        dongliang:</span></span><br><span class="line"><span class="bullet">            -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">            fullname:</span></span><br><span class="line">                <span class="string">Shi</span> <span class="string">Dongliang</span></span><br><span class="line"><span class="attr">            gid:</span></span><br><span class="line">                <span class="number">1000</span></span><br><span class="line"><span class="attr">            group:</span></span><br><span class="line">                <span class="string">dongliang</span></span><br><span class="line"><span class="attr">            password:</span></span><br><span class="line">                <span class="string">$6$BZpX5dWZ$.......</span></span><br><span class="line"><span class="attr">            shell:</span></span><br><span class="line">                <span class="string">/bin/bash</span></span><br><span class="line"><span class="attr">            ssh_auth:</span></span><br><span class="line"><span class="bullet">                -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">                comment:</span></span><br><span class="line">                    <span class="string">dongliang@leju.com</span></span><br><span class="line"><span class="attr">                key:</span></span><br><span class="line">                    <span class="string">AAAAB3......==</span></span><br><span class="line"><span class="attr">            sudo:</span></span><br><span class="line">                <span class="literal">True</span></span><br><span class="line"><span class="attr">            uid:</span></span><br><span class="line">                <span class="number">1000</span></span><br></pre></td></tr></table></figure><p>获取admin.grid.mall.com上面定义的所有pillar变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># salt 'admin.grid.mall.com' pillar.items</span></span><br></pre></td></tr></table></figure><p>添加用户：</p><p>/srv/salt/users/user.sls用于管理用户</p><p><img src="/images/14-05-29/user1.png" alt="user1定义"><br><img src="/images/14-05-29/user2.png" alt="user2定义"></p><p>sudo.sls为用户添加sudo权限：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sudoers:</span></span><br><span class="line">  <span class="string">file.managed:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">/etc/sudoers</span></span><br></pre></td></tr></table></figure><p>/srv/salt/users/user.sls读取/srv/pillar/users/init.sls中的users变量。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">users:</span></span><br><span class="line"><span class="attr">  dongliang:</span>  <span class="comment"># 定义用户名</span></span><br><span class="line"><span class="attr">    group:</span> <span class="string">dongliang</span>  <span class="comment"># 用户所在组</span></span><br><span class="line"><span class="attr">    uid:</span> <span class="number">1000</span>  <span class="comment"># 用户uid</span></span><br><span class="line"><span class="attr">    gid:</span> <span class="number">1000</span>  <span class="comment"># 用户gid</span></span><br><span class="line"><span class="attr">    fullname:</span> <span class="string">Shi</span> <span class="string">Dongliang</span></span><br><span class="line"><span class="attr">    password:</span>   <span class="string">$6$BZpX5dWZ$......</span>  <span class="comment"># 密码，注意是hash后的密码</span></span><br><span class="line"><span class="attr">    shell:</span> <span class="string">/bin/bash</span>  <span class="comment"># 用户shell</span></span><br><span class="line"><span class="attr">    sudo:</span> <span class="literal">true</span>  <span class="comment"># 是否给sudo权限</span></span><br><span class="line"><span class="attr">    ssh_auth:</span>  <span class="comment"># 无密码登录，可选项</span></span><br><span class="line"><span class="attr">      key:</span> <span class="string">AAAAB3......==</span></span><br><span class="line"><span class="attr">      comment:</span> <span class="string">dongliang@mall.com</span></span><br></pre></td></tr></table></figure><p>在salt-master上执行下面命令使配置生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># salt '*' saltutil.refresh_pillar</span></span><br><span class="line"><span class="comment"># salt '*' state.highstate</span></span><br></pre></td></tr></table></figure><h3 id="yum配置管理"><a href="#yum配置管理" class="headerlink" title="yum配置管理"></a>yum配置管理</h3><p>yum配置管理：/srv/salt/base/repo.sls<br>配置文件：/srv/salt/base/files/mall.repo  # 此配置文件可以通过salt协议下发到客户端</p><p>/srv/salt/base/repo.sls定义，管理mall.repo文件，当文件改变后执行yum clean all清理缓存，是配置生效。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">/etc/yum.repos.d/mall.repo:</span></span><br><span class="line">  <span class="string">file.managed:</span></span><br><span class="line"><span class="attr">    - source:</span> <span class="attr">salt://base/files/mall.repo</span></span><br><span class="line"><span class="attr">    - user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - group:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - mode:</span> <span class="number">644</span></span><br><span class="line"><span class="attr">    - order:</span> <span class="number">1</span></span><br><span class="line">  <span class="string">cmd.wait:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">yum</span> <span class="string">clean</span> <span class="string">all</span></span><br><span class="line"><span class="attr">    - watch:</span></span><br><span class="line"><span class="attr">       - file:</span> <span class="string">/etc/yum.repos.d/mall.repo</span></span><br></pre></td></tr></table></figure><h3 id="hosts文件管理"><a href="#hosts文件管理" class="headerlink" title="hosts文件管理"></a>hosts文件管理</h3><p>hosts文件管理：/srv/salt/base/hosts.sls</p><p>/srv/salt/base/hosts.sls 定义了每个主机名和IP的对应关系。如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">admin.grid.mall.com:</span></span><br><span class="line">  <span class="string">host.present:</span></span><br><span class="line"><span class="attr">    - ip:</span> <span class="number">172.16</span><span class="number">.100</span><span class="number">.81</span></span><br><span class="line"><span class="attr">    - order:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    - names:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">admin.grid.mall.com</span></span><br></pre></td></tr></table></figure><h3 id="时间同步管理"><a href="#时间同步管理" class="headerlink" title="时间同步管理"></a>时间同步管理</h3><p>时间同步作为一个cron，定义文件为：/srv/salt/base/crons.sls</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 引用ntp模块</span></span><br><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">ntp</span></span><br><span class="line"></span><br><span class="line"><span class="string">'/usr/sbin/ntpdate 1.cn.pool.ntp.org 1.asia.pool.ntp.org'</span><span class="string">:</span></span><br><span class="line">  <span class="string">cron.present:</span></span><br><span class="line"><span class="attr">    - user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - minute:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">    - hour:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><p>ntp模块：ntp/init.sls</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装ntpdate软件包</span></span><br><span class="line"><span class="attr">ntpdate:</span></span><br><span class="line">  <span class="string">pkg.installed:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">ntpdate</span></span><br></pre></td></tr></table></figure><h3 id="DNS配置管理"><a href="#DNS配置管理" class="headerlink" title="DNS配置管理"></a>DNS配置管理</h3><p>配置DNS服务器定义在resolv.sls，控制/etc/resolv.conf配置文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">/etc/resolv.conf:</span></span><br><span class="line">  <span class="string">file.managed:</span></span><br><span class="line"><span class="attr">    - source:</span> <span class="attr">salt://base/files/resolv.conf</span></span><br><span class="line"><span class="attr">    - user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - group:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    - mode:</span> <span class="number">644</span></span><br><span class="line"><span class="attr">    - template:</span> <span class="string">jinja</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      本文以一个小的电商网站（www.mall.com）为例，讲述Saltstack在真实场景中的应用。
    
    </summary>
    
      <category term="Saltstack" scheme="https://istone.dev/categories/Saltstack/"/>
    
    
      <category term="devops" scheme="https://istone.dev/tags/devops/"/>
    
      <category term="saltstack" scheme="https://istone.dev/tags/saltstack/"/>
    
      <category term="salt" scheme="https://istone.dev/tags/salt/"/>
    
  </entry>
  
  <entry>
    <title>Saltstack：安装</title>
    <link href="https://istone.dev/2014/05/28/saltstack-install/"/>
    <id>https://istone.dev/2014/05/28/saltstack-install/</id>
    <published>2014-05-28T02:00:00.000Z</published>
    <updated>2019-06-27T02:21:14.361Z</updated>
    
    <content type="html"><![CDATA[<p>本文以一个小的电商网站（<a href="http://www.mall.com）为例，讲述Saltstack在真实场景中的应用。本节主要讲述Saltstack的安装过程。" target="_blank" rel="noopener">www.mall.com）为例，讲述Saltstack在真实场景中的应用。本节主要讲述Saltstack的安装过程。</a></p><h2 id="Saltstack安装"><a href="#Saltstack安装" class="headerlink" title="Saltstack安装"></a>Saltstack安装</h2><p>Saltstack源码地址：<a href="https://github.com/saltstack/salt，最新版本为v2014.1.4。" target="_blank" rel="noopener">https://github.com/saltstack/salt，最新版本为v2014.1.4。</a><br>需要自己<a href="http://yoyolive.com/%E5%85%B6%E4%BB%96/2014/05/22/rpm-pkg.html" target="_blank" rel="noopener">打rpm包</a>，salt描述文件：<a href="https://github.com/saltstack/salt/blob/develop/pkg/rpm/salt.spec，另外最新版本的salt需要python-libcloud，也需要提前打好包。如果是在CentOS" target="_blank" rel="noopener">https://github.com/saltstack/salt/blob/develop/pkg/rpm/salt.spec，另外最新版本的salt需要python-libcloud，也需要提前打好包。如果是在CentOS</a> 5.x 上安装salt，需要升级zeromq到3.x版。将所有打好的rpm包放入yum仓库，开始安装。</p><h3 id="Salt-Master安装"><a href="#Salt-Master安装" class="headerlink" title="Salt Master安装"></a>Salt Master安装</h3><p>注意：安装前确保主机名已按角色划分部分进行配置。</p><p>安装salt-master：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install -y salt-master</span></span><br></pre></td></tr></table></figure><p>修改配置文件：/etc/salt/master，使salt监听在内网网卡上。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">interface: 172.16.100.81</span><br></pre></td></tr></table></figure><p>启动Salt Master：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/init.d/salt-master start</span></span><br></pre></td></tr></table></figure><p>查看启动情况，4505端口处于监听状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># netstat -tunlp |grep 4505</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="Salt-Minion安装"><a href="#Salt-Minion安装" class="headerlink" title="Salt Minion安装"></a>Salt Minion安装</h3><p>注意：安装前确保主机名已按角色划分部分进行配置。</p><p>安装salt-minion：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install -y salt-minion</span></span><br></pre></td></tr></table></figure><p>修改配置文件：/etc/salt/minion，使其连接到master。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">master: 172.16.100.81</span><br></pre></td></tr></table></figure><p>启动Salt Minion：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/init.d/salt-minion start</span></span><br></pre></td></tr></table></figure><p>查看启动情况，4506端口处于监听状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># netstat -tunlp |grep 4506</span></span><br></pre></td></tr></table></figure><h3 id="在Salt-Master上为Salt-Minion授权"><a href="#在Salt-Master上为Salt-Minion授权" class="headerlink" title="在Salt Master上为Salt Minion授权"></a>在Salt Master上为Salt Minion授权</h3><p>查看Salt Minion是否已经向Salt Master请求授权：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># salt-key -L</span></span><br><span class="line">Accepted Keys:</span><br><span class="line">Unaccepted Keys:</span><br><span class="line">admin.grid.mall.com</span><br></pre></td></tr></table></figure><p>为Salt Minion授权：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># salt-key -a admin.grid.mall.com</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      本文以一个小的电商网站（www.mall.com）为例，讲述Saltstack在真实场景中的应用。
    
    </summary>
    
      <category term="Saltstack" scheme="https://istone.dev/categories/Saltstack/"/>
    
    
      <category term="devops" scheme="https://istone.dev/tags/devops/"/>
    
      <category term="saltstack" scheme="https://istone.dev/tags/saltstack/"/>
    
      <category term="salt" scheme="https://istone.dev/tags/salt/"/>
    
  </entry>
  
</feed>
